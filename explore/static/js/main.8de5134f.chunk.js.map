{"version":3,"sources":["assets/CrimsonText-Regular.ttf","assets/CrimsonText-Bold.ttf","assets/logo.png","assets/logs lazy /^/.*/.json$/ groupOptions: {} namespace object","components/graph/OptionPopup.js","components/doc/GraphPlugin.js","components/doc/NodeSwitch.js","components/doc/StyleButton.js","components/doc/nodes/LinkNode.js","components/doc/nodes/BodyNode.js","dragtypes.js","components/doc/DragifyBlock.js","components/doc/DropifyBlock.js","components/doc/nodes/SectionNode.js","components/doc/LoggingPlugin.js","components/doc/nodes/PlainBlockNode.js","components/doc/SlateComponents.js","components/doc/HoveringMenu.js","components/doc/Schema.js","components/doc/DocEditor.js","components/graph/svg.connectable.js","components/doc/NodePlugin.js","components/doc/ReorderPlugin.js","components/doc/WordCountPlugin.js","components/doc/DocPane.js","components/graph/MouseFollower.js","components/graph/GraphNode.js","components/graph/DropifyGraphPane.js","components/graph/GraphPane.js","db.js","logging.js","shared_state.js","components/loadproject/LogLoadButton.js","components/loadproject/LoadProject.js","components/experiment/SaveButton.js","components/experiment/TimelineEntry.js","components/experiment/LogExploreTimeline.js","components/experiment/SlideOutPane.js","components/experiment/ExperimentInfo.js","components/loadproject/PreTaskSection.js","components/loadproject/IntroSection.js","App.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","OptionPopup","entries","x","y","shouldHideOnClickOutside","callback","selected","undefined","parent","this","hidePopup","bind","div","document","createElement","classList","add","appendChild","generateTable","style","left","top","getElementById","rect","getBoundingClientRect","right","window","innerWidth","bottom","innerHeight","setTimeout","hideOnClickOutside","table","forEach","entry","isClickable","row","insertRow","name","selectItem","colourCell","insertCell","textContent","symbol","color","colour","fontSize","padding","nameCell","addEventListener","buttons","buttonEntry","buttonCell","button","innerHTML","className","onclick","click","underlyingEntry","transientEntry","underlyingEntries","remove","element","outsideClickListener","event","elem","contains","target","offsetWidth","offsetHeight","getClientRects","length","removeClickListener","removeEventListener","addSection","draggedNode","editor","initialNodeStyle","getSharedState","addGraphMapping","node","insertSectionBlock","text","longText","logger","logEvent","removeFirstNode","value","nodes","size","link","Block","create","type","data","node_id","Text","body","section","nodeStyle","insertBlock","moveToEndOfNode","removeNodeByKey","get","key","handleMouseUp","clickedNode","isOverHalf","resetPos","getGraphNode","focus","getParent","moveToStartOfNode","moveBackward","toast","error","console","log","showNodeSwitchMenu","entriesToHide","filter","includes","preventDefault","clientX","clientY","selectedEntry","deleteNode","old","new","setNodeByKey","newStyle","moveToRangeOfNode","graphNode","convertFromInline","shortText","getBlocksByType","prev","getPreviousBlock","next","getNextBlock","insertNodeByKey","getEmptyParagraph","wrapBlockByKey","insertInline","insertText","moveForward","convertToInline","querySelector","removeDocNode","StyleButton","props","onClick","Component","LinkNode","state","hover","externalHover","setHover","newHover","sharedState","nodeId","setHoverer","setState","isHovered","selection","cursorInside","getDescendantsAtRange","classes","linkStyle","attributes","children","onMouseEnter","onMouseLeave","BodyNode","selectNode","isEmpty","onMouseDown","ItemTypes","blockSource","canDrag","isCollapsed","beginDrag","endDrag","monitor","component","didDrop","dropResult","getDropResult","droppedOnGraph","addGraphNode","position","moveTo","blur","blockIndex","indexOf","indexShift","insertBefore","indexDroppedOn","moveNodeByKey","parentKey","DragSource","connect","connectDragSource","dragSource","dragPreview","isDragging","innerDiv","outerDiv","ReactDOM","findDOMNode","outerRect","item","innerRect","offset","newState","height","overHalf","blockTarget","getClientOffset","drop","blockParent","DropTarget","connectDropTarget","dropTarget","isOver","isOverCurrent","shallow","canDrop","itemType","getItemType","DragifyBlock","DropifyBlock","blocks","some","block","verbose","getNodeStyleClass","dragOverCurrent","onMouseOver","onMouseUp","onMouseMove","ref","LoggingPlugin","options","onCopy","content","fragment","onCut","onPaste","transfer","getEventTransfer","paste_type","content_html","html","Button","React","forwardRef","active","reversed","cx","css","Icon","textLines","toArray","join","Menu","MarkButton","icon","isActive","setBlocks","HoverMenu","root","createPortal","HoveringMenu","menuRef","createRef","componentDidMount","updateMenu","componentDidUpdate","menu","current","isBlurred","removeAttribute","getSelection","getRangeAt","opacity","pageYOffset","pageXOffset","width","render","schema","inlines","normalize","unwrapInlineByKey","object","match","min","max","moveBlockAfterSection","child","linkNode","find","textNode","getLastText","insertTextByKey","addMissing","hasChildTypes","push","blockToMove","sectionToMoveAfter","sectionIndex","nodeType","getShortText","getLongText","index","addBlock","plugins","findEventRange","select","inline","onBlur","deselect","commands","removeGraphLink","hasNode","section_index","child_index","destOffset","getChild","wrapLinkAtSelection","wrapInline","renderInline","getRefAndId","renderBlock","refAndId","onDrop","getLinkInlines","the_doc","filterDescendants","textNoNewlines","replace","fragmentInlines","docInlines","usedIds","usedId","inlineWithId","onChange","updateFunc","updateGraphShortText","updateGraphLongText","update","updateText","checkRecycleBinForGraphNode","onKeyDown","startBlock","start","end","isExpanded","updateIsOnGraphStatus","isAtEndOfNode","nextBlock","prevBlock","blockToInsert","sectionParent","relevantBlock","long_or_short","setLinkMapping","registerLinkNode","NodePlugin","renderEditor","wordCount","count","getBlocks","words","toString","countWords","Fragment","emptyValue","Value","fromJSON","DocEditor","mapHasLoaded","queries","getValue","editor_ref","getSavedDocValue","savedValue","editorHasLoaded","plainClass","condition","placeholder","spellCheck","DocPane","_typeof","Symbol","iterator","obj","constructor","prototype","n","r","s","u","require","a","i","f","l","call","1","Id","SetOrGet","IterateObject","Deffy","_connections","_betweenTwoBubbles","container","markers","connectable","elmTarget","con","k","kk","marker","addClass","markerId","line","path","attr","fill","stroke","specialCoords","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","d","source","id1","id2","reverse","_","computeLineCoordinates","cons","output","sT","transform","tT","sB","bbox","tB","x1","y1","x2","y2","cy","dx","Math","abs","dy","dd","out","ex","ey","sqrt","xDiff","yDiff","x2centre","grad","vals","rightLeftCalc","topBotCalc","padEllipse","xR1","xR2","yR1","yR2","elmS","elmT","tagName","parseFloat","getAttribute","sx","sy","ux","uy","isNaN","results","plot","on","setLineColor","c","SVG","extend","Element","delete_connectable","dispatchEvent","CustomEvent","2","Typpy","input","def","empty","3","arguments","is","str","String","NaN","toLowerCase","4","random","substr","5","fn","Array","isArray","6","field","7","apply","8","COLOURS","DEFAULT_ARROW_OPTIONS","MouseFollower","shared_state","svg","connectables_container","links","drawing_arrow_from","connector","connector_objs","temp_arrows","arrow_id_counter","completed_arrows","mouse_rect","group","point","move","stop_drawing_arrow","arrows","arrowOptions","get_node","arrow","originNode","origin","destinationNode","destination","draw_arrow","add_context_menu_to_arrow","new_source","show","hide","source_node","instance","remove_arrow","arrowObject","show_context_menu","graph_pos","edit_connector_type","new_colour","detail","oldColour","newColour","end_node","c1","getScreenCoords","c2","midpoint","drawing_arrow_from_id","getNewId","dest","temp_id","graphPane","getNodeById","dest_node","direction","getNextAvailableColour","availableColours","option","thisColourIndex","nextIndex","clickEditButton","params","editButton","updateName","newValue","substring","finishEditing","colourButton","changeArrowColour","clickDeleteArrowTypeButton","confirm","splice","parentNode","removeChild","arrowOptionsWithButtons","entryWithButtons","popup_x","popup_y","onColourSelected","prev_selected","getArrowOptions","setArrowColour","selected_option","newRelation","json","mf","ARROW_HITBOX_MARGIN","GraphNode","mouse_follower","focus_text_area","getNodesList","zoomCanvasTo","isOnGraph","annotatedOrder","getNodeId","translate","dropShadow","radius","arrow_hitbox","editRect","updateShortText","updateLongText","setupRectDragging","setupArrowHitbox","complete_arrow","setupHover","setupContextMenu","editText","doNotDeleteIfEmptyText","setIsOnGraph","showAnnotatedOrder","isFromJSON","screenCoords","newVal","removeClass","showOptionMenu","delete","hoverers","startHover","getAllDocNodeRefs","decoratedRef","setExternalHover","endHover","hoverer","isHovering","setHovered","setupGroupDragging","edit_text_if_not_just_dropped","just_dropped","just_dropped_obj","center","draggy","stopPropagation","start_x","start_y","activeElement","off","delta","movedX","movedY","x_diff","y_diff","update_source","start_arrow","newShortText","formattedText","splitIntoLines","resizeRect","newLongText","charsPerLine","split","word","segments","segment","space","numLinesOfText","rectHeight","annotatedOrderText","delete_if_empty_text","orderAnnotate","annotatedNumbers","num","getNextAnnotateNum","textarea","preEditText","screen_coords","display","scrollHeight","save_changes","updateDocShortText","onblur","onkeyup","removeGraphNode","nodesList","DropifyGraphPane","getItem","findDescendant","getSavedGraph","$el","panZoom","zoomMin","zoomMax","zoomFactor","level","pos","cb","zoom","runner","animate","duration","ease","after","zone","root_point","doc","nodesSvgGroup","numTempNodes","json_connections","connections","addNodeAtScreenLocation","setupTextDropping","blurActiveElement","setAttribute","loadNodesFromJSON","draw_loaded_arrows","addNoNodesIndicator","toJSON","nodeJSON","noNodesIndicator","dataTransfer","types","getData","canAddLinkAtSelection","addLinkAtSelection","isSvgCoords","el","db","Dexie","version","stores","projects","EVENT_TYPES_WHICH_DO_NOT_MAKE_STATE_DIRTY","Logger","db_id","shouldLogToConsole","conditions","logToConsole","JSON","stringify","stateIsDirty","getLog","events","timestamp","Date","setLog","save","forceLog","saves","project","catch","err","msg","SharedState","onDataLoad","getProjectThen","doc_value","graph_value","logExplore","node_id_counter","slate_id_counter","map_recycle_bin","intervalLogger","setInterval","getArgumentMarkdown","downloadExperimentData","mapToJSON","exportPDF","exploreNext","explorePrev","exploreLog","makeNodeReport","exportAnnotatedLog","explodeNodes","onbeforeunload","getStateIsDirty","returnValue","getEditor","downloadJSON","filename","sort","b","annotatedNum","scenario","localStorage","factSheetURL","open","mapFromJSON","projectName","lastSavedDocumentState","changes","idExists","info","logSaveState","message","saveIndex","transitionToEditor","nodeReport","linkedTexts","unlinkedTexts","linked","unlinked","linkedCharsProportion","trim","linkedWords","unlinkedWords","linkedWordProportion","rawValue","nodeReports","parse","setItem","mapJson","doc_nodes","part","docNodeObjects","getDocNodes","getPath","graph_node","getNode","preTaskSubmission","parentStyleIs","styleToCheck","RULES","serialize","Html","rules","file","Blob","downloadBlob","blob","href","URL","createObjectURL","download","getReactPdfDocument","markdown","Font","register","family","fonts","src","CrimsonText","CrimsonTextBold","fontWeight","styles","StyleSheet","page","fontFamily","paddingBottom","heading","textDecoration","startsWith","pdf","toBlob","getArgumentHTML","regex","replacement","innerText","clearInterval","is_in_linked_block","is_in_linked_inline","doc_node","prev_version","getGraphNodeAndDocNode","values","docNode","short","long","doc_link_node","docNodes","getDocNodeShortText","newText","LogLoadButton","process","participant_id","loadLog","alt","LoadProject","loadProject","updateProjectsFromDb","onDropLogFiles","title","files","reader","FileReader","onabort","onerror","onload","stored","logs","allLogs","newLog","result","readAsText","ExperimentControls","backToMenu","TimelineEntry","theClass","isExploreHead","timestampFormatted","LogExploreTimeline","exploreHead","moveExploreHead","exploreEvent","setDocValue","handleKeyDown","orderedLogs","pastExploreHead","lastDocChangeContent","moveToRangeOfDocument","moveToStartOfDocument","hasNotBeenExplored","updateSvgElement","addTempNode","getConnectorObjectConnecting","addTempArrow","sourceDestString","shift","keyCode","markdown_events","document_content_markdown","doc_change","concat","getDate","time","makeEntry","SlideOutPane","addClosed","cn","ExperimentInfo","question","viewFactSheet","PreTaskSection","q1","q2","q3","handleChange","handleSubmit","questions","shouldReturn","questionValue","alert","transitionToMenu","paddingTop","onSubmit","rows","IntroSection","Logo","Modal","setAppElement","modalStyles","marginRight","maxWidth","maxHeight","App","phase","location","search","URLSearchParams","getStorageUsed","newSharedState","resetFirst","finishCondition","navigator","storage","estimate","storageUsed","usage","quota","toPrecision","isMobile","autoload","isOpen","modalIsOpen","contentLabel","onRequestClose","DndProvider","backend","Backend","defaultSize","showExperimentInfo","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"mappings":"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","file":"static/js/main.8de5134f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CrimsonText-Regular.62f10d46.ttf\";","module.exports = __webpack_public_path__ + \"static/media/CrimsonText-Bold.89b16aa6.ttf\";","module.exports = __webpack_public_path__ + \"static/media/logo.510deb2b.png\";","var map = {\n\t\"./1.json\": [\n\t\t637,\n\t\t3\n\t],\n\t\"./10.json\": [\n\t\t638,\n\t\t4\n\t],\n\t\"./11.json\": [\n\t\t639,\n\t\t5\n\t],\n\t\"./12.json\": [\n\t\t640,\n\t\t6\n\t],\n\t\"./14.json\": [\n\t\t641,\n\t\t7\n\t],\n\t\"./15.json\": [\n\t\t642,\n\t\t8\n\t],\n\t\"./17.json\": [\n\t\t643,\n\t\t9\n\t],\n\t\"./18.json\": [\n\t\t644,\n\t\t10\n\t],\n\t\"./1old.json\": [\n\t\t645,\n\t\t11\n\t],\n\t\"./2.json\": [\n\t\t646,\n\t\t12\n\t],\n\t\"./21.json\": [\n\t\t647,\n\t\t13\n\t],\n\t\"./22.json\": [\n\t\t648,\n\t\t14\n\t],\n\t\"./23.json\": [\n\t\t649,\n\t\t15\n\t],\n\t\"./25.json\": [\n\t\t650,\n\t\t16\n\t],\n\t\"./26.json\": [\n\t\t651,\n\t\t17\n\t],\n\t\"./3.json\": [\n\t\t652,\n\t\t18\n\t],\n\t\"./4.json\": [\n\t\t653,\n\t\t19\n\t],\n\t\"./5.json\": [\n\t\t654,\n\t\t20\n\t],\n\t\"./6.json\": [\n\t\t655,\n\t\t21\n\t],\n\t\"./7.json\": [\n\t\t656,\n\t\t22\n\t],\n\t\"./8.json\": [\n\t\t657,\n\t\t23\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 624;\nmodule.exports = webpackAsyncContext;","export default class OptionPopup {\r\n    constructor(entries, x, y, shouldHideOnClickOutside, callback, selected=undefined, parent=undefined) {\r\n        this.hidePopup = this.hidePopup.bind(this)\r\n\r\n        this.div = document.createElement(\"div\");\r\n        this.div.classList.add(\"option-popup-div\");\r\n        this.div.appendChild(this.generateTable(entries, callback, selected));\r\n        this.div.style.left = x + \"px\";\r\n        this.div.style.top = y + \"px\";\r\n\r\n        if (parent === undefined) {\r\n            parent = document.getElementById(\"graph\");\r\n        }\r\n        parent.appendChild(this.div);\r\n\r\n        // prevent the popup from showing up partially offscreen\r\n        const rect = this.div.getBoundingClientRect()\r\n        if (rect.right > window.innerWidth) {\r\n            this.div.style.left = (x - (rect.right - window.innerWidth)) + \"px\"\r\n        }\r\n        if (rect.bottom > window.innerHeight) {\r\n            this.div.style.top = (y - (rect.bottom - window.innerHeight)) + \"px\"\r\n        }\r\n\r\n        if (shouldHideOnClickOutside) {\r\n            setTimeout(() => this.hideOnClickOutside(this.div), 0.01);\r\n        }\r\n    }\r\n\r\n    generateTable(entries, callback, selected) {\r\n        var table = document.createElement(\"table\");\r\n        entries.forEach(entry => {\r\n            entry.isClickable = entry.isClickable !== undefined ? entry.isClickable : true\r\n\r\n            var row = table.insertRow();\r\n            row.classList.add(\"option-row\");\r\n            if (entry.name === selected) {\r\n                row.classList.add(\"option-row-selected\");\r\n            }\r\n\r\n            const selectItem = (e) => {\r\n                if (entry.isClickable) {                    \r\n                    callback(entry);\r\n                    this.hidePopup();\r\n                }\r\n            }\r\n\r\n            var colourCell = row.insertCell();\r\n            colourCell.textContent = entry.symbol;\r\n            colourCell.style.color = entry.colour;\r\n            colourCell.style.fontSize = \"150%\";\r\n            colourCell.style.padding = '10px'\r\n            \r\n            var nameCell = row.insertCell();\r\n            nameCell.classList.add('option-cell')\r\n            nameCell.textContent = entry.name\r\n\r\n            colourCell.addEventListener('click', selectItem)\r\n            nameCell.addEventListener('click', selectItem)\r\n\r\n            if (entry.buttons) {\r\n                entry.buttons.forEach(buttonEntry => {\r\n                    var buttonCell = row.insertCell()\r\n                    var button = document.createElement('BUTTON')\r\n                    button.innerHTML = '<p class=\"' + buttonEntry.className + '\"></p>'\r\n                    button.className = \"pure-button\"\r\n                    button.style.padding = \"0px 10px 0px 10px\"\r\n                    buttonCell.appendChild(button)\r\n                    button.onclick = (e) => buttonEntry.click(e, {colourCell, nameCell, buttonCell, underlyingEntry: buttonEntry.underlyingEntry, \r\n                            transientEntry: entry, underlyingEntries: buttonEntry.underlyingEntries, row, selected: entry.name === selected,\r\n                            hidePopup: this.hidePopup})\r\n                })\r\n            }\r\n        });\r\n\r\n        return table;\r\n    }\r\n\r\n    hidePopup() {\r\n        this.div.remove()\r\n    }\r\n\r\n    hideOnClickOutside(element) {\r\n        const isVisible = elem => !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n\r\n        const outsideClickListener = event => {\r\n            if (!element.contains(event.target) && isVisible(element)) {\r\n              element.remove();\r\n              removeClickListener()\r\n            }\r\n        }\r\n    \r\n        const removeClickListener = () => {\r\n            document.removeEventListener('click', outsideClickListener)\r\n        }\r\n    \r\n        document.addEventListener('click', outsideClickListener)\r\n        document.addEventListener('contextmenu', outsideClickListener)\r\n    }\r\n}","import { Block, Text } from 'slate';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function GraphPlugin(options) {\r\n    return {\r\n        onMouseUp(event, editor, next) {\r\n            var draggedNode = editor.getSharedState().draggedNode;\r\n\r\n            if (draggedNode) {\r\n                draggedNode.resetPos();\r\n\r\n                if (editor.getSharedState().getGraphNode(draggedNode.id)) {\r\n                    toast.error('You can\\'t add the same node twice!')\r\n                    console.log('Duplicate - editor')\r\n                } else {\r\n                    const target = editor.findEventRange(event)\r\n                    if (target) {\r\n                        editor.select(target)\r\n\r\n                        // prevent insertion inside an inline link\r\n                        // (insertion inside a section is fixed by schema)\r\n                        const linkNode = editor.value.inlines.find(inline => inline.type === 'link')\r\n                        if (linkNode) {\r\n                            editor.moveToEndOfNode(linkNode)\r\n                        }\r\n\r\n                        addSection(draggedNode, editor)\r\n                    }\r\n                }\r\n            }\r\n            next();\r\n        },\r\n        \r\n        onBlur(event, editor, next) {\r\n            editor.deselect();\r\n            next();\r\n        },\r\n\r\n        commands: {\r\n            removeGraphLink(editor, node) {\r\n                const document = editor.value.document\r\n                if (!document.hasNode(node.key)) {\r\n                    console.log('couldnt remove graph link, node doesnt exist');\r\n                    \r\n                    return\r\n                }\r\n\r\n                if (node.type === \"section\") {\r\n                    // move the children out from inside this section to be after it\r\n                    const section_index = editor.value.document.nodes.indexOf(node)\r\n                    if (section_index !== -1) {\r\n                        var child_index = 0;\r\n                        node.nodes.forEach(child => {\r\n                            if (!document.hasNode(child.key)) {\r\n                                return\r\n                            }\r\n\r\n                            const nodeStyle = node.data.get(\"nodeStyle\")\r\n                            if ((child_index === 0 && nodeStyle === \"Body only\") || (child_index === 1 && nodeStyle === \"Heading only\")) {\r\n                                editor.removeNodeByKey(child.key)\r\n                            } else {\r\n                                // offset varies because the link node has already been removed if body only\r\n                                const destOffset = (child_index === 1 && nodeStyle === \"Body only\") ? 1 : child_index + 1\r\n                                editor.moveNodeByKey(child.key, editor.value.document.key, section_index + destOffset)\r\n                            }\r\n\r\n                            child_index++\r\n                        });\r\n                    }\r\n                    editor.removeNodeByKey(node.key)\r\n                } else if (editor.value.document.getChild(node.key) || node.object === \"inline\") {           \r\n                    editor.setNodeByKey(node.key, {\"type\": \"\"})\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function addSection(draggedNode, editor, initialNodeStyle=\"Heading and body\") {\r\n    editor.getSharedState().addGraphMapping(draggedNode.id, draggedNode.node)\r\n\r\n    insertSectionBlock(editor, draggedNode.id, draggedNode.text, draggedNode.longText, initialNodeStyle)\r\n\r\n    editor.getSharedState().logger.logEvent({\r\n        'type': 'doc_create_from_node', \r\n        'node_id': draggedNode.id, \r\n        'short_text': draggedNode.text, \r\n        'long_text': draggedNode.longText\r\n    });\r\n}\r\n\r\nexport function insertSectionBlock(editor, id, text, longText, initialNodeStyle) {\r\n    // if its an empty document, prevent a blank node being shown above the section added\r\n    const removeFirstNode = editor.value.document.nodes.size === 1 && editor.value.document.text === \"\"\r\n    \r\n    var link = Block.create({\r\n        type: 'link',\r\n        data: {node_id: id},\r\n        nodes: [Text.create({text: text})]\r\n    })\r\n\r\n    var body = Block.create({\r\n        type: 'body',\r\n        data: {node_id: id},\r\n        nodes: [Text.create({text: longText})]\r\n    })\r\n\r\n    var section = Block.create({\r\n        type: 'section',\r\n        data: {node_id: id, nodeStyle: initialNodeStyle},\r\n        nodes: [link, body]\r\n    })\r\n\r\n    editor.insertBlock(section);\r\n    editor.moveToEndOfNode(section)\r\n\r\n    if (removeFirstNode) {\r\n        editor.removeNodeByKey(editor.value.document.nodes.get(0).key)\r\n    }\r\n\r\n    return section\r\n}\r\n\r\nexport function handleMouseUp(editor, clickedNode, isOverHalf) {\r\n    var draggedNode = editor.getSharedState().draggedNode;\r\n\r\n    if (draggedNode) {\r\n        draggedNode.resetPos();\r\n\r\n        if (editor.getSharedState().getGraphNode(draggedNode.id)) {\r\n            toast.error('You can\\'t add the same node twice!')\r\n            console.log('Duplicate - node');\r\n            \r\n        } else {\r\n            const { value } = editor\r\n            const { document } = value\r\n            editor.focus()\r\n\r\n            if (clickedNode.type === \"body\" || clickedNode.type === \"link\") {\r\n                clickedNode = document.getParent(clickedNode);\r\n            }\r\n\r\n            if (isOverHalf) {\r\n                editor.moveToEndOfNode(clickedNode);\r\n            } else {\r\n                editor.moveToStartOfNode(clickedNode)\r\n                editor.moveBackward()\r\n            }\r\n\r\n            addSection(draggedNode, editor);\r\n\r\n            editor.getSharedState().draggedNode = false;\r\n            return true;\r\n        }\r\n    }\r\n}","import { Block } from 'slate';\r\nimport OptionPopup from '../graph/OptionPopup.js'\r\nimport { insertSectionBlock } from './GraphPlugin.js';\r\n\r\nexport const showNodeSwitchMenu = (event, node, editor, entriesToHide) => {\r\n    var entries = [\r\n        {'colour': 'black', 'name': 'Inline', 'symbol': \"⌶\"},\r\n        {'colour': 'black', 'name': 'Heading and body', 'symbol': \"▤\"},\r\n        {'colour': 'black', 'name': 'Heading only', 'symbol': \"▔\"},\r\n        {'colour': 'black', 'name': 'Body only', 'symbol': \"▂\"},\r\n        {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n    ]\r\n\r\n    if (entriesToHide) {\r\n        entries = entries.filter((entry) => {return !entriesToHide.includes(entry.name)})\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    const onOptionSelect = (selectedEntry) => {\r\n        const selected = selectedEntry.name\r\n        if (selected === \"Delete\") {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"doc_node_delete\",\r\n                id: node.data.get(\"node_id\")\r\n            });\r\n            deleteNode(node, editor);\r\n        } else {\r\n            var nodeStyle = node.data.get(\"nodeStyle\")\r\n            if (!nodeStyle) {\r\n                nodeStyle = \"Inline\"\r\n            }\r\n\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"doc_node_change_format\",\r\n                old: nodeStyle,\r\n                new: selected,\r\n                id: node.data.get(\"node_id\")\r\n            });\r\n\r\n            if (nodeStyle !== \"Inline\" && selected !== \"Inline\") {\r\n                editor.setNodeByKey(node.key, { data: {node_id: node.data.get(\"node_id\"), nodeStyle: selected} })\r\n            } else if (nodeStyle === \"Inline\" && selected !== \"Inline\") {\r\n                convertFromInline(node, editor, selected)\r\n            }  else if (nodeStyle !== \"Inline\" && selected === \"Inline\") {\r\n                convertToInline(node, editor, selected)\r\n            }\r\n        }\r\n    }\r\n\r\n    new OptionPopup(entries, event.clientX, event.clientY, true, onOptionSelect, node.data.get('nodeStyle'), document.querySelector(\".App\"))\r\n}\r\n\r\nexport function deleteNode(node, editor) {\r\n    editor.getSharedState().removeDocNode(node.data.get(\"node_id\"))\r\n\r\n    editor.removeNodeByKey(node.key)\r\n\r\n    if (editor.value.document.nodes.size === 0) {\r\n        editor.insertNodeByKey(editor.value.document.key, 0, getEmptyParagraph())\r\n    }\r\n}\r\n\r\nfunction convertFromInline(node, editor, newStyle) {\r\n    editor.moveToRangeOfNode(node);\r\n    const parent = editor.value.document.getParent(node.key)\r\n    if (parent && parent.text === node.text) {\r\n        editor.moveToRangeOfNode(parent)\r\n    }\r\n\r\n    const graphNode = editor.getSharedState().getGraphNode(node.data.get('node_id'))\r\n    const longText = graphNode && graphNode.longText ? graphNode.longText : \"\"\r\n\r\n    insertSectionBlock(editor, node.data.get(\"node_id\"), node.text, longText, newStyle)    \r\n}\r\n\r\nfunction getEmptyParagraph() {\r\n    return Block.create({\r\n        type: 'paragraph'\r\n    })\r\n}\r\n\r\nfunction convertToInline(node, editor) {\r\n    const shortText = node.getBlocksByType(\"link\").get(0).text;\r\n    // need to get 0th child because previous of section is the body inside it\r\n    const prev = editor.value.document.getPreviousBlock(node.nodes.get(0).key)\r\n    const next = editor.value.document.getNextBlock(node.nodes.get(1).key)\r\n\r\n    // if doc only contains this section, add an empty paragraph at the start to prevent emptying the doc\r\n    if (!prev && !next) {\r\n        editor.insertNodeByKey(editor.value.document.key, 0, getEmptyParagraph())\r\n    }\r\n\r\n    editor.moveToRangeOfNode(node)\r\n\r\n    // don't merge with prev block if prev is another section - wrap it in a fresh paragraph instead\r\n    if ((prev && (prev.type === \"section\" || prev.type === \"body\")) || (!prev && next && (next.type === \"section\" || next.type === \"link\"))) {\r\n        editor.wrapBlockByKey(node.key, \"paragraph\")\r\n        editor.removeNodeByKey(node.key)\r\n    } else {\r\n        editor.removeNodeByKey(node.key)\r\n    }\r\n\r\n    editor.insertInline({\r\n            type: \"link\",\r\n            data: {node_id: node.data.get(\"node_id\"), nodeStyle: \"Inline\"},\r\n        })\r\n        .insertText(shortText)\r\n    \r\n    // prevent rare bug where style is changed inline > section > inline, and doc-graph link is severed\r\n    setTimeout(() => {editor.focus(); editor.moveForward(); editor.moveBackward()}, 0)\r\n}\r\n\r\nexport const getNodeStyleClass = (verbose) => {\r\n    switch (verbose) {\r\n        case \"Heading only\":\r\n            return \" hide-body\"\r\n\r\n        case \"Body only\":\r\n            return \" hide-heading\"\r\n    \r\n        default:\r\n            return \"\";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { showNodeSwitchMenu } from './NodeSwitch';\r\n\r\nexport default class StyleButton extends Component {\r\n    render() {\r\n        return (<button \r\n                    className={'style-button pure-button '\r\n                                 + ((this.props.nodeStyle === 'section') ? 'style-button-section' : 'style-button-inline')}\r\n                    onClick={(e) => showNodeSwitchMenu(e, this.props.node, this.props.editor)}>\r\n                        <p className='eye-icon'></p>\r\n                </button>)\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport StyleButton from '../StyleButton'\r\n\r\nexport default class LinkNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false,\r\n        }\r\n        \r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {     \r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"link_mouse\", newHover);\r\n        }\r\n\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.props.editor;\r\n        const { document, selection } = value;\r\n        var cursorInside = document.getDescendantsAtRange(selection).contains(this.props.node)\r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"link_cursor\", cursorInside)\r\n        }\r\n        \r\n        var hoverClass = (this.state.externalHover || cursorInside) ? \" hovered\" : \"\";\r\n        var classes = \"node-link\" + hoverClass;\r\n\r\n        if (this.props.linkStyle === \"heading\") {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}>\r\n                    <u><b>{this.props.children}</b></u>\r\n                </p>\r\n            );\r\n\r\n        } else if (this.props.linkStyle === \"inline\") {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}\r\n                        onMouseEnter={() => this.setHover(true)} \r\n                        onMouseLeave={() => this.setHover(false)}>\r\n                    {this.props.children}\r\n                    {this.state.hover && <StyleButton node={this.props.node} editor={this.props.editor} nodeStyle='inline' />}\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class BodyNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n        this.selectNode = props.selectNode;\r\n    }\r\n\r\n    setHover(newHover) {\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        var hoverClass = (this.state.externalHover || this.state.hover) ? \" hovered\" : \"\";\r\n        var classes = \"node-body\" + hoverClass + (this.props.isEmpty ? \" placeholder\" : \"\");\r\n\r\n        const { value } = this.props.editor;\r\n        const { document, selection } = value;\r\n        var cursorInside = document.getDescendantsAtRange(selection).contains(this.props.node)\r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"body_cursor\", cursorInside);\r\n            node.setHoverer(\"body_mouse\", this.state.hover);\r\n        }\r\n\r\n        if (this.props.isEmpty) {\r\n                return (\r\n                    <p className={classes} {...this.props.attributes} onMouseDown={this.selectNode}>\r\n                        Type some text...{this.props.children}\r\n                    </p>\r\n                );\r\n        } else {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}>\r\n                    {this.props.children}\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n}","export const ItemTypes = {\r\n    BLOCK: \"block\",\r\n}","import { DragSource } from 'react-dnd';\r\nimport { ItemTypes } from '../../dragtypes';\r\nimport { addSection } from './GraphPlugin.js'\r\n\r\nconst blockSource = {\r\n    canDrag(props) {\r\n        // don't drag if there is a non-collapsed selection, so it doesn't interfere with dragging selections to graph\r\n        return props.editor.value.selection.isCollapsed\r\n    },\r\n\r\n    beginDrag(props) {\r\n      // Return the data describing the dragged item\r\n      const item = { id: props.node.id, node: props.node }\r\n      return item\r\n    },\r\n\r\n    endDrag(props, monitor, component) {\r\n        if (!monitor.didDrop()) {            \r\n            return\r\n        }\r\n\r\n        const dropResult = monitor.getDropResult()\r\n        const sharedState = props.editor.getSharedState()\r\n\r\n        if (dropResult.droppedOnGraph) {\r\n            const graphNode = sharedState.addGraphNode('', dropResult.position.x, dropResult.position.y, true)\r\n            const draggedNode = {\r\n                id: graphNode.id,\r\n                node: graphNode,\r\n                text: \"\",\r\n                longText: props.node.text\r\n            }\r\n            props.editor.moveTo(props.node.key)\r\n            \r\n            addSection(draggedNode, props.editor, \"Body only\")\r\n            props.editor.removeNodeByKey(props.node.key)\r\n            props.editor.blur()\r\n        } else {\r\n            const document = props.editor.value.document;\r\n            const blockParent = document.getParent(props.node.key);\r\n            const blockIndex = blockParent.nodes.indexOf(props.node);\r\n            const indexShift = (dropResult.insertBefore ? 1 : 0) - (dropResult.indexDroppedOn > blockIndex ? 1 : 0)\r\n\r\n            props.editor.moveNodeByKey(props.node.key, dropResult.parentKey, dropResult.indexDroppedOn + indexShift)\r\n\r\n            sharedState.logger.logEvent({\r\n                'type': 'reorder',\r\n                'id': props.node.data.get('node_id'),\r\n                'old_index': blockIndex,\r\n                'new_index': dropResult.indexDroppedOn + indexShift,\r\n            });\r\n        }\r\n    },\r\n  }\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDragSource: connect.dragSource(),\r\n        dragPreview: connect.dragPreview(),\r\n        isDragging: monitor.isDragging(),\r\n    }\r\n}\r\n\r\nexport default DragSource(ItemTypes.BLOCK, blockSource, collect)","import ReactDOM from 'react-dom';\r\nimport { DropTarget } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../dragtypes\";\r\n\r\nexport function isOverHalf(component, event) {\r\n    // calculate based on height of firstChild because if this is the last node in the doc, its outer div expands to fill the remaining vertical space\r\n    const outerDiv = ReactDOM.findDOMNode(component)        \r\n    const outerRect = outerDiv.getBoundingClientRect()\r\n    \r\n    var innerDiv;\r\n    for (let item of outerDiv.children) {\r\n        if (item.classList.contains('plain-block') || item.classList.contains('section')) {\r\n            innerDiv = item;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!innerDiv) {\r\n        console.log('error: couldn\\'t find the inner div!');\r\n        return\r\n    }\r\n    const innerRect = innerDiv.getBoundingClientRect()       \r\n\r\n    // subtract offset of the innerRect from the outerRect, to prevent the insertion of the drag indicator from affecting things\r\n    const offset = (innerRect.y - outerRect.y)\r\n    var newState = false\r\n    if (event.clientY + offset > (innerRect.y + innerRect.height / 2)) {\r\n        newState = true\r\n    }\r\n    \r\n    if (component.state.overHalf !== newState) {\r\n        component.setState({overHalf: newState});\r\n    }\r\n}\r\n\r\nconst blockTarget = {\r\n    hover(props, monitor, component) {\r\n        isOverHalf(component, { clientY: monitor.getClientOffset().y })\r\n    },\r\n    drop(props, monitor, component) {\r\n        const document = props.editor.value.document;\r\n        const blockParent = document.getParent(props.node.key);\r\n        const blockIndex = blockParent.nodes.indexOf(props.node);\r\n        return { droppedOnGraph: false, parentKey: blockParent.key, indexDroppedOn: blockIndex, insertBefore: component.state.overHalf }\r\n    },\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDropTarget: connect.dropTarget(),\r\n        // You can ask the monitor about the current drag state:\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({ shallow: true }),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType(),\r\n    }\r\n}\r\n\r\nexport default DropTarget(ItemTypes.BLOCK, blockTarget, collect)","import React, { Component } from 'react';\r\nimport DragifyBlock from '../DragifyBlock';\r\nimport DropifyBlock, { isOverHalf } from '../DropifyBlock';\r\nimport { handleMouseUp } from '../GraphPlugin';\r\nimport { getNodeStyleClass } from '../NodeSwitch';\r\nimport StyleButton from '../StyleButton';\r\n\r\nclass SectionNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false,\r\n            overHalf: false,\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {     \r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"section_mouse\", newHover);\r\n        }\r\n\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        const { isOverCurrent, connectDropTarget, connectDragSource, isDragging } = this.props;\r\n\r\n        const value = this.props.editor.value\r\n        var cursorInside = value.blocks && value.blocks.some(block => block === this.props.node || this.props.node.nodes.includes(block))\r\n\r\n        var hoverClass = (this.state.externalHover || cursorInside) ? \" hovered\" : \"\";\r\n        var classes = \"section plain-block \" + hoverClass  + (isDragging ? \" display-none\" : \"\");\r\n        classes += getNodeStyleClass(this.props.node.data.get(\"nodeStyle\"))\r\n\r\n        const dragOverCurrent = isOverCurrent || (this.state.hover && this.props.editor.getSharedState().draggedNode)\r\n\r\n        return connectDropTarget(\r\n            <div className='block-outer-div'\r\n                onMouseEnter={() => this.setHover(true)}\r\n                onMouseOver={() => this.setHover(true)}\r\n                onMouseLeave={() => this.setHover(false)} \r\n                onMouseUp={() => {handleMouseUp(this.props.editor, this.props.node, this.state.overHalf) && this.setState({hover: false})}}\r\n                onMouseMove={(e) => isOverHalf(this, e)}>\r\n\r\n                {(dragOverCurrent && !this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                <div className={classes} {...this.props.attributes} ref={connectDragSource}>\r\n                    {this.state.hover && <StyleButton node={this.props.node} editor={this.props.editor} nodeStyle='section' />}\r\n                    {this.props.children}\r\n                </div>\r\n                {(dragOverCurrent && this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragifyBlock(DropifyBlock(SectionNode))","\r\nimport { getEventTransfer } from 'slate-react';\r\n\r\nexport default function LoggingPlugin(options) {\r\n    return {\r\n        onCopy(event, editor, next) {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"copy\",\r\n                content: editor.value.fragment.text\r\n            });\r\n            \r\n            next();\r\n        },\r\n\r\n        onCut(event, editor, next) {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"cut\",\r\n                content: editor.value.fragment.text\r\n            });\r\n            \r\n            next();\r\n        },\r\n\r\n        onPaste(event, editor, next) {\r\n            var transfer = getEventTransfer(event);\r\n\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"paste\",\r\n                paste_type: transfer.type,\r\n                content: transfer.fragment ? transfer.fragment.text : \"\",\r\n                content_html: transfer.fragment ? \"\" : transfer.html  // only include if there is no fragment (pasted from external)\r\n            });\r\n            \r\n            next();\r\n        },\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DragifyBlock from '../DragifyBlock';\r\nimport DropifyBlock, { isOverHalf } from '../DropifyBlock';\r\nimport { handleMouseUp } from '../GraphPlugin';\r\n\r\nclass PlainBlockNode extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {\r\n        this.setState({hover: newHover});\r\n    }\r\n\r\n    render() {\r\n        const { isOverCurrent, connectDropTarget, connectDragSource, isDragging } = this.props\r\n\r\n        const classes = \"plain-block \" + (isDragging ? \" display-none\" : \"\")\r\n\r\n        const dragOverCurrent = isOverCurrent || (this.state.hover && this.props.editor.getSharedState().draggedNode)\r\n\r\n        return connectDropTarget(\r\n            <div className='block-outer-div'\r\n                onMouseUp={() => {handleMouseUp(this.props.editor, this.props.node, this.state.overHalf) && this.setState({hover: false})}} \r\n                onMouseEnter={() => this.setHover(true)}\r\n                onMouseOver={() => this.setHover(true)}\r\n                onMouseLeave={() => this.setHover(false)}\r\n                onMouseMove={(e) => isOverHalf(this, e)}>\r\n\r\n                {(dragOverCurrent && !this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                <div className={classes} {...this.props.attributes} ref={connectDragSource}>\r\n                    {this.props.children}\r\n                </div>\r\n                {(dragOverCurrent && this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragifyBlock(DropifyBlock(PlainBlockNode))","import React from 'react'\r\nimport { cx, css } from 'emotion'\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ className, active, reversed, ...props }, ref) => (\r\n    <span\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        className,\r\n        css`\r\n          cursor: pointer;\r\n          color: ${reversed\r\n            ? active ? 'white' : '#aaa'\r\n            : active ? 'black' : '#ccc'};\r\n        `\r\n      )}\r\n    />\r\n  )\r\n)\r\n\r\nexport const EditorValue = React.forwardRef(\r\n  ({ className, value, ...props }, ref) => {\r\n    const textLines = value.document.nodes\r\n      .map(node => node.text)\r\n      .toArray()\r\n      .join('\\n')\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...props}\r\n        className={cx(\r\n          className,\r\n          css`\r\n            margin: 30px -20px 0;\r\n          `\r\n        )}\r\n      >\r\n        <div\r\n          className={css`\r\n            font-size: 14px;\r\n            padding: 5px 20px;\r\n            color: #404040;\r\n            border-top: 2px solid #eeeeee;\r\n            background: #f8f8f8;\r\n          `}\r\n        >\r\n          Slate's value as text\r\n        </div>\r\n        <div\r\n          className={css`\r\n            color: #404040;\r\n            font: 12px monospace;\r\n            white-space: pre-wrap;\r\n            padding: 10px 20px;\r\n            div {\r\n              margin: 0 0 0.5em;\r\n            }\r\n          `}\r\n        >\r\n          {textLines}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport const Icon = React.forwardRef(({ className, ...props }, ref) => (\r\n  <span\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      'material-icons',\r\n      className,\r\n      css`\r\n        font-size: 18px;\r\n        vertical-align: text-bottom;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Instruction = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        white-space: pre-wrap;\r\n        margin: 0 -20px 10px;\r\n        padding: 10px 20px;\r\n        font-size: 14px;\r\n        background: #f8f8e8;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Menu = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        & > * {\r\n          display: inline-block;\r\n        }\r\n\r\n        & > * + * {\r\n          margin-left: 15px;\r\n        }\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Toolbar = React.forwardRef(({ className, ...props }, ref) => (\r\n  <Menu\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        position: relative;\r\n        padding: 1px 18px 17px;\r\n        margin: 0 -20px;\r\n        border-bottom: 2px solid #eee;\r\n        margin-bottom: 20px;\r\n      `\r\n    )}\r\n  />\r\n))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { css } from 'emotion'\r\nimport { Button, Icon, Menu } from './SlateComponents.js'\r\n\r\n// adapted from https://github.com/ianstormtaylor/slate/blob/master/site/examples/hovering-toolbar.js\r\n\r\nconst MarkButton = ({ editor, type, icon }) => {\r\n  const { value } = editor\r\n  const isActive = value.blocks && value.blocks.some(block => block.type === type)\r\n  return (\r\n    <Button\r\n      reversed\r\n      active={isActive}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        editor.setBlocks((isActive ? \"paragraph\" : type))\r\n\r\n        editor.getSharedState().logger.logEvent({\r\n          'type': 'set_title' + (isActive ? \"_disabled\" : \"_enabled\"),\r\n      });\r\n      }}\r\n    >\r\n      <Icon>{icon}</Icon>\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst HoverMenu = React.forwardRef(({ editor }, ref) => {\r\n  const root = window.document.getElementById('root')\r\n  return ReactDOM.createPortal(\r\n    <Menu\r\n      ref={ref}\r\n      className={css`\r\n        padding: 8px 7px 6px;\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: -10000px;\r\n        left: -10000px;\r\n        margin-top: -6px;\r\n        opacity: 0;\r\n        background-color: #222;\r\n        border-radius: 4px;\r\n        transition: opacity 0.25s;\r\n      `}\r\n    >\r\n      <MarkButton editor={editor} type=\"heading\" icon=\"Heading\" />\r\n    </Menu>,\r\n    root\r\n  )\r\n})\r\n\r\n\r\nclass HoveringMenu extends React.Component {\r\n\r\n  menuRef = React.createRef()\r\n\r\n  componentDidMount = () => {\r\n    this.updateMenu()\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    this.updateMenu()\r\n  }\r\n\r\n  updateMenu = () => {\r\n    const menu = this.menuRef.current\r\n    if (!menu) return\r\n\r\n    const value = this.props.editor.value\r\n    const { fragment, selection } = value\r\n\r\n    if (selection.isBlurred || selection.isCollapsed || fragment.text === '') {\r\n      menu.removeAttribute('style')\r\n      return\r\n    }\r\n\r\n    const native = window.getSelection()\r\n    const range = native.getRangeAt(0)\r\n    const rect = range.getBoundingClientRect()\r\n    menu.style.opacity = 1\r\n    menu.style.top = `${rect.top + window.pageYOffset - menu.offsetHeight}px`\r\n\r\n    menu.style.left = `${rect.left +\r\n      window.pageXOffset -\r\n      menu.offsetWidth / 2 +\r\n      rect.width / 2}px`\r\n  }\r\n\r\n  render = (props, editor, next) => {\r\n    return (\r\n        <HoverMenu ref={this.menuRef} editor={this.props.editor} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default function HoveringMenuPlugin(options) {\r\n    return {\r\n        renderEditor (props, editor, next) {\r\n            const children = next()\r\n            return (\r\n              <React.Fragment>\r\n                {children}\r\n                <HoveringMenu editor={editor} />\r\n              </React.Fragment>\r\n            )\r\n          },\r\n\r\n        renderBlock (props, editor, next) {\r\n            switch (props.node.type) {\r\n            case 'heading':\r\n                return <u><b>{props.children}</b></u>\r\n            default:\r\n                return next()\r\n            }\r\n        },\r\n    }\r\n}","import { Block, Text } from 'slate';\r\n\r\nexport const schema = {\r\n    inlines: {\r\n        link: {\r\n            parent: [{type: ''}, {type: 'paragraph'}],\r\n\r\n            normalize: (editor, error) => {\r\n                switch (error.code) {\r\n                    case 'parent_type_invalid':\r\n                        editor.unwrapInlineByKey(error.node.key)\r\n                        return\r\n\r\n                    default:\r\n                        console.log(\"unhandled link inline err \" + error);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    blocks: {\r\n        section: {\r\n            parent: {object: \"document\"},\r\n            nodes: [\r\n                {\r\n                    match: {type: 'link'},\r\n                    min: 1,\r\n                    max: 1,\r\n                },\r\n                {\r\n                    match: {type: 'body'},\r\n                    min: 1,\r\n                    max: 1,\r\n                }\r\n            ],\r\n\r\n            normalize: (editor, error) => {\r\n                switch (error.code) {\r\n                    case 'child_max_invalid':\r\n                        // if we somehow end up with multiple headings/bodies inside the section, make it a paragraph move it after the section                     \r\n                        // this can happen if the enter key is pressed (splits the current node)\r\n                        moveBlockAfterSection(editor, error.child, error.node)\r\n                        editor.setNodeByKey(error.child.key, 'paragraph')\r\n                        return\r\n\r\n                    case 'child_type_invalid':\r\n                        // if we somehow end up with a paragraph inside the section, put the content in the heading instead                     \r\n                        if (error.child.object === \"text\" || error.child.type === \"paragraph\") {\r\n                            const linkNode = error.node.nodes.find(node => node.type === 'link')\r\n                            if (linkNode) {\r\n                                const textNode = linkNode.getLastText()\r\n                                const offset = textNode.text ? textNode.text.length : 0\r\n                                editor.insertTextByKey(textNode.key, offset, error.child.text)\r\n                            } else {\r\n                                addMissing(editor, error, \"link\", error.child.text)\r\n                            }\r\n                        }\r\n\r\n                        editor.removeNodeByKey(error.child.key)\r\n                        \r\n                        return\r\n                    \r\n                    case 'child_min_invalid':\r\n                        var hasChildTypes = [];\r\n                        error.node.nodes.forEach(node => {\r\n                            hasChildTypes.push(node.type)\r\n                        })\r\n                        \r\n                        if (!hasChildTypes.includes(\"link\")) {\r\n                            addMissing(editor, error, \"link\")\r\n                        }\r\n\r\n                        if (!hasChildTypes.includes(\"body\")) {\r\n                            addMissing(editor, error, \"body\")\r\n                        }\r\n\r\n                        return\r\n                    \r\n                    case 'parent_object_invalid':\r\n                        // a section has ended up inside another section - shift it out\r\n                        moveBlockAfterSection(editor, error.node, error.parent)\r\n                        return\r\n\r\n                    default:\r\n                        console.log(\"unhandled section schema err \" + error);\r\n                        \r\n                        return\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nfunction moveBlockAfterSection(editor, blockToMove, sectionToMoveAfter) {\r\n    const sectionIndex = editor.value.document.nodes.indexOf(sectionToMoveAfter)\r\n    if (sectionIndex === -1) {\r\n        return\r\n    }\r\n    editor.moveNodeByKey(blockToMove.key, editor.value.document.key, sectionIndex + 1)\r\n}\r\n\r\nfunction addMissing(editor, error, nodeType, text=\"\") {\r\n    const node_id = error.node.data.get(\"node_id\")\r\n    const graphNode = editor.getSharedState().getGraphNode(node_id)\r\n    if (!text) {\r\n        text = nodeType === \"link\" ? graphNode.getShortText() : graphNode.getLongText()\r\n    }\r\n    const index = nodeType === \"link\" ? 0 : 1\r\n\r\n    addBlock(editor, error.node, nodeType, index, node_id, text)\r\n}\r\n\r\nfunction addBlock(editor, parent, nodeType, index, id, text) {\r\n    var block = Block.create({\r\n        type: nodeType,\r\n        data: {node_id: id},\r\n        nodes: [Text.create({'text': text})]\r\n    })\r\n    editor.insertNodeByKey(parent.key, index, block);\r\n    \r\n}","import React from 'react';\r\nimport { Editor } from 'slate-react';\r\nimport { Value } from 'slate';\r\nimport NodePlugin from './NodePlugin.js';\r\nimport GraphPlugin from './GraphPlugin.js';\r\nimport LoggingPlugin from './LoggingPlugin.js';\r\nimport ReorderPlugin from './ReorderPlugin.js';\r\nimport HoveringMenu from './HoveringMenu.js';\r\nimport WordCountPlugin from './WordCountPlugin.js';\r\nimport { schema } from './Schema.js'\r\n\r\nconst plugins = {\r\n    'graph': [\r\n        LoggingPlugin(),\r\n        GraphPlugin(),\r\n        NodePlugin(),\r\n        ReorderPlugin(),\r\n        WordCountPlugin(),\r\n    ],\r\n    'plain': [\r\n        LoggingPlugin(),\r\n        HoveringMenu(),\r\n    ]\r\n};\r\n\r\nconst emptyValue = Value.fromJSON({\r\n    document: {\r\n        nodes: [\r\n            {\r\n                object: 'block',\r\n                type: 'paragraph',\r\n                nodes: [\r\n                    {\r\n                        object: 'text',\r\n                        text: '',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n});\r\n\r\nclass DocEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.props.sharedState.editor_ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const sharedState = this.props.sharedState\r\n        sharedState.getSavedDocValue((savedValue) => {\r\n            this.setState({\r\n                value: savedValue ? Value.fromJSON(savedValue) : emptyValue\r\n            }, sharedState.editorHasLoaded)\r\n        })\r\n    }\r\n\r\n    state = {\r\n        value: undefined, // don't display editor until the db's saved document loads\r\n        mapHasLoaded: false, // force a refresh of the component once the sharedState.map has loaded so section refs are hooked up to graph nodes\r\n    }\r\n    \r\n    queries = {\r\n        getSharedState: () => {\r\n            return this.props.sharedState;\r\n        },\r\n        getValue: () => {\r\n            return this.state.value;\r\n        },\r\n        mapHasLoaded: () => {\r\n            this.setState({ mapHasLoaded: true })\r\n        }\r\n    }\r\n\r\n    onChange = ({ value }) => {\r\n        this.setState({ value })\r\n    }\r\n\r\n    render() {\r\n        const plainClass = this.props.sharedState.condition === \"plain\" ? \" slate-editor-no-graph\" : \"\"\r\n\r\n        if (this.state.value !== undefined) {\r\n            return <Editor\r\n                className={\"slate-editor\" + plainClass}\r\n                key={this.state.mapHasLoaded ? \"map-loading\" : \"map-loaded\"}\r\n                ref={this.props.sharedState.editor_ref}\r\n                schema={schema}\r\n                plugins={plugins[this.props.sharedState.condition]}\r\n                queries={this.queries}\r\n                value={this.state.value}\r\n                onChange={this.onChange}\r\n                placeholder=\"Write your document here...\"\r\n                spellCheck={true}\r\n            />\r\n        } else {\r\n            return <p></p>\r\n        }\r\n    }\r\n}\r\n\r\nexport default DocEditor;","import SVG from 'svg.js';\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\n(function e(t, n, r) {\r\n    function s(o, u) {\r\n        if (!n[o]) {\r\n            if (!t[o]) {\r\n                // eslint-disable-next-line no-sequences\r\n                var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\r\n            }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\r\n                var n = t[o][1][e];return s(n ? n : e);\r\n            }, l, l.exports, e, t, n, r);\r\n        }return n[o].exports;\r\n    }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {\r\n        s(r[o]);\r\n    }return s;\r\n})({ 1: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Id = require(\"idy\"),\r\n            SetOrGet = require(\"set-or-get\"),\r\n            IterateObject = require(\"iterate-object\"),\r\n            Deffy = require(\"deffy\");\r\n\r\n        // Internal cache\r\n        var _connections = {},\r\n            _betweenTwoBubbles = {},\r\n            container = null,\r\n            markers = null;\r\n\r\n        function delete_connectable(con) {\r\n            con.line.remove();\r\n            con.marker.remove();\r\n\r\n            _connections[con.source.id()] = _connections[con.source.id()].filter(e => e !== con);\r\n            _connections[con.target.id()] = _connections[con.target.id()].filter(e => e !== con);\r\n\r\n            var toString = function() {\r\n                var ids = [con.source.id(), con.target.id()],\r\n                    id1 = ids.join(\"->\"),\r\n                    id2 = ids.reverse().join(\"->\");\r\n\r\n                con._ = con.id = id1;\r\n\r\n                if (_betweenTwoBubbles[id2]) {\r\n                    con._ = id2;\r\n                    return id2;\r\n                }\r\n\r\n                con.id = id1;\r\n                return id1;\r\n            }\r\n\r\n            _betweenTwoBubbles[toString()] = _betweenTwoBubbles[toString()].filter(e => e !== con);\r\n            con.source.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any other connectables looking for drag events\r\n        }\r\n\r\n        /**\r\n         * connectable\r\n         * Connects two elements.\r\n         *\r\n         * @name connectable\r\n         * @function\r\n         * @param {Object} options An object containing the following fields:\r\n         *\r\n         *  - `container` (SVGElement): The line elements container.\r\n         *  - `markers` (SVGElement): The marker elements container.\r\n         *  - `padEllipse` (Boolean): If `true`, the line coordinates will be placed with a padding.\r\n         *\r\n         * @param {SVGElement} elmTarget The target SVG element.\r\n         * @return {Object} The connectable object containing:\r\n         *\r\n         *  - `source` (SVGElement): The source element.\r\n         *  - `target` (SVGElement): The target element.\r\n         *  - `line` (SVGElement): The line element.\r\n         *  - `marker` (SVGElement): The marker element.\r\n         *  - [`computeLineCoordinates` (Function)](#computelinecoordinatescon)\r\n         *  - [`update` (Function)](#update)\r\n         *  - [`setLineColor` (Function)](#setlinecolorcolor-c)\r\n         */\r\n        function connectable(options, elmTarget) {\r\n\r\n            var con = {};\r\n\r\n            if (elmTarget === undefined) {\r\n                elmTarget = options;\r\n                options = {};\r\n            }\r\n\r\n            container = options.container || container;\r\n            var elmSource = this;\r\n            markers = options.markers || markers;\r\n\r\n            options.k = options.k || 100;\r\n            options.kk = options.kk || 10;\r\n\r\n            var marker = markers.marker(10, 10).addClass('connector-marker'),\r\n                markerId = \"triangle-\" + Id(),\r\n                line = container.path().attr(\"marker-end\", \"url(#\" + markerId + \")\").fill(\"none\").stroke({width: 3});\r\n            \r\n            if (options.specialCoords) {\r\n                line.addClass('connector-line');\r\n            }\r\n\r\n            marker.attr({\r\n                id: markerId,\r\n                viewBox: \"0 0 10 10\",\r\n                refX: \"0\",\r\n                refY: \"5\",\r\n                markerUnits: \"strokeWidth\",\r\n                markerWidth: \"4\",\r\n                markerHeight: \"5\"\r\n            });\r\n\r\n            marker.path().attr({\r\n                d: \"M 0 0 L 10 5 L 0 10 z\"\r\n            });\r\n\r\n            // Append the SVG elements\r\n            con.source = elmSource;\r\n            con.target = elmTarget;\r\n            con.line = line;\r\n            con.marker = marker;\r\n\r\n\r\n            if (options.specialCoords) {\r\n                // remove this when node is deleted\r\n                // con.source.on(\"deletenode\", () => con.source.node.instance.delete_connectable(con));\r\n                // con.target.on(\"deletenode\", () => con.target.node.instance.delete_connectable(con));\r\n            }\r\n\r\n            SetOrGet(_connections, con.source.id(), []).push(con);\r\n            SetOrGet(_connections, con.target.id(), []).push(con);\r\n\r\n            SetOrGet(_betweenTwoBubbles, {\r\n                toString: function toString() {\r\n                    var ids = [con.source.id(), con.target.id()],\r\n                        id1 = ids.join(\"->\"),\r\n                        id2 = ids.reverse().join(\"->\");\r\n\r\n                    con._ = con.id = id1;\r\n\r\n                    if (_betweenTwoBubbles[id2]) {\r\n                        con._ = id2;\r\n                        return id2;\r\n                    }\r\n\r\n                    con.id = id1;\r\n                    return id1;\r\n                }\r\n            }, []).push(con);\r\n            \r\n\r\n            /**\r\n             * computeLineCoordinates\r\n             * The function that computes the new coordinates.\r\n             * It can be overriden with a custom function.\r\n             *\r\n             * @name computeLineCoordinates\r\n             * @function\r\n             * @param {Connectable} con The connectable instance.\r\n             * @return {Object} An object containing the `x1`, `x2`, `y1` and `y2` coordinates.\r\n             */\r\n            con.computeLineCoordinates = function (cons) {\r\n\r\n                var output = [],\r\n                    l = cons.length;\r\n\r\n                IterateObject(cons, function (con, i) {\r\n\r\n                    var sT = con.source.transform(),\r\n                        tT = con.target.transform(),\r\n                        sB = con.source.bbox(),\r\n                        tB = con.target.bbox(),\r\n                        x1 = sT.x + sB.width / 2,\r\n                        y1 = sT.y + sB.height / 2,\r\n                        x2 = tT.x + tB.width / 2,\r\n                        y2 = tT.y + tB.height / 2,\r\n                        cx = (x1 + x2) / 2,\r\n                        cy = (y1 + y2) / 2,\r\n                        dx = Math.abs((x1 - x2) / 2),\r\n                        dy = Math.abs((y1 - y2) / 2),\r\n                        dd = null,\r\n                        out = {\r\n                        x1: x1,\r\n                        y1: y1,\r\n                        x2: x2,\r\n                        y2: y2,\r\n                        ex: x1,\r\n                        ey: y1\r\n                    };\r\n\r\n                    if (i !== (l - 1) / 2) {\r\n                        dd = Math.sqrt(dx * dx + dy * dy);\r\n                        out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                        out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                    }\r\n                    output.push(out);\r\n                });\r\n\r\n                return output;\r\n            };\r\n\r\n            if (options.specialCoords) {\r\n                con.computeLineCoordinates = function (cons) {\r\n\r\n                    var output = [],\r\n                        l = cons.length;\r\n\r\n                    IterateObject(cons, function (con, i) {\r\n\r\n                        var sT = con.source.transform(),\r\n                            tT = con.target.transform(),\r\n                            sB = con.source.bbox(),\r\n                            tB = con.target.bbox(),\r\n                            x1 = sT.x + sB.width / 2,\r\n                            y1 = sT.y + sB.height / 2 - 20;\r\n\r\n                        var xDiff = sT.x - tT.x;\r\n                        var yDiff = sT.y - tT.y;\r\n                        var x2, y2;\r\n\r\n                        var x2centre = tT.x + tB.width / 2\r\n                        var y2centre = tT.y + tB.height / 2\r\n\r\n                        var grad = (y2centre - y1) / ((x2centre - x1) === 0 ? 0.0000001 : (x2centre - x1))\r\n\r\n                        if (grad === 0) {\r\n                            grad = 0.0000001\r\n                        }\r\n\r\n                        var left = tT.x - 10\r\n                        var right = tT.x + tB.width - 30\r\n                        var top = tT.y - 10\r\n                        var bottom = tT.y + tB.height - 30\r\n                        \r\n                        var rightLeftCalc = () => {\r\n                            var x2 = xDiff < 0 ? left : right\r\n                            return { \r\n                                x: x2,\r\n                                y: ((x2 - x1) * grad) + y1\r\n                            }\r\n                        }\r\n\r\n                        var topBotCalc = () => {\r\n                            var y2 = yDiff < 0 ? top : bottom\r\n                            return {\r\n                                x: ((y2 - y1) * (1/grad)) + x1,\r\n                                y: y2\r\n                            }\r\n                        }\r\n\r\n                        var vals\r\n                        if (Math.abs(xDiff) >= Math.abs(yDiff)) {\r\n                            vals = rightLeftCalc()\r\n                            x2 = vals.x\r\n                            y2 = vals.y\r\n\r\n                            if (y2 > bottom || y2 < top) {\r\n                                vals = topBotCalc()\r\n                                x2 = vals.x\r\n                                y2 = vals.y\r\n                            }\r\n\r\n                        } else {\r\n                            vals = topBotCalc()\r\n                            x2 = vals.x\r\n                            y2 = vals.y\r\n\r\n                            if (x2 > right || x2 < left) {\r\n                                vals = rightLeftCalc()\r\n                                x2 = vals.x\r\n                                y2 = vals.y\r\n                            }\r\n                        }\r\n\r\n                        var cx = (x1 + x2) / 2,\r\n                            cy = (y1 + y2) / 2,\r\n                            dx = Math.abs((x1 - x2) / 2),\r\n                            dy = Math.abs((y1 - y2) / 2),\r\n                            dd = null,\r\n                            out = {\r\n                            x1: x1,\r\n                            y1: y1,\r\n                            x2: x2,\r\n                            y2: y2,\r\n                            ex: x1,\r\n                            ey: y1\r\n                        };\r\n\r\n                        if (i !== (l - 1) / 2) {\r\n                            dd = Math.sqrt(dx * dx + dy * dy);\r\n                            out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                            out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                        }\r\n                        output.push(out);\r\n                    });\r\n\r\n                    return output;\r\n                };\r\n            }\r\n\r\n            if (options.padEllipse) {\r\n                con.computeLineCoordinates = function (cons) {\r\n\r\n                    var output = [],\r\n                        l = cons.length;\r\n\r\n                    IterateObject(cons, function (con, i) {\r\n\r\n                        var elmS = con.source.node.querySelector(\"ellipse\") || con.source.node.querySelector(\"circle\"),\r\n                            elmT = con.target.node.querySelector(\"ellipse\") || con.target.node.querySelector(\"circle\"),\r\n                            xR1,\r\n                            xR2,\r\n                            yR1,\r\n                            yR2,\r\n                            sT = con.source.transform(),\r\n                            tT = con.target.transform()\r\n\r\n                        if (elmS.tagName === \"circle\") {\r\n                            xR1 = yR1 = parseFloat(elmS.getAttribute(\"r\"));\r\n                            xR2 = yR2 = parseFloat(elmT.getAttribute(\"r\"));\r\n                        } else {\r\n                            xR1 = parseFloat(elmS.getAttribute(\"rx\"));\r\n                            yR1 = parseFloat(elmS.getAttribute(\"ry\"));\r\n\r\n                            xR2 = parseFloat(elmT.getAttribute(\"rx\"));\r\n                            yR2 = parseFloat(elmT.getAttribute(\"ry\"));\r\n                        }\r\n\r\n                        // Get centers\r\n                        var sx = sT.x + xR1 / 2,\r\n                            sy = sT.y + yR1 / 2,\r\n                            tx = tT.x + xR2 / 2,\r\n                            ty = tT.y + yR2 / 2\r\n\r\n                        // Calculate distance from source center to target center\r\n                        ,\r\n                            dx = tx - sx,\r\n                            dy = ty - sy,\r\n                            d = Math.sqrt(dx * dx + dy * dy)\r\n\r\n                        // Construct unit vector between centers\r\n                        ,\r\n                            ux = dx / d,\r\n                            uy = dy / d\r\n\r\n                        // Point on source circle\r\n                        ,\r\n                            cx1 = sx + xR1 * ux,\r\n                            cy1 = sy + yR1 * uy\r\n\r\n                        // Point on target circle\r\n                        ,\r\n                            cx2 = sx + (d - xR2 - 5) * ux,\r\n                            cy2 = sy + (d - yR2 - 5) * uy;\r\n\r\n                        var x1 = cx1 + xR1 / 2,\r\n                            y1 = cy1 + yR1 / 2,\r\n                            x2 = cx2 + xR2 / 2,\r\n                            y2 = cy2 + yR2 / 2\r\n                        // TODO\r\n                        //  , step = (Math.PI / 2 / l) * (i % 2 !== 0 ? 1 : -1)\r\n                        //  , angle = 0\r\n                        ;\r\n\r\n                        //if (i !== (l - 1) / 2) {\r\n                        //    angle = step * (i + 1);\r\n                        //}\r\n\r\n\r\n                        //var xC1 = (sT.x + xR1)\r\n                        //  , yC1 = (sT.y + yR1)\r\n                        //  , xC2 = (tT.y + xR2)\r\n                        //  , yC2 = (tT.y + yR2)\r\n                        //  , ddx1 = x1 - xC1\r\n                        //  , ddy1 = y1 - yC1\r\n                        //  , ddx2 = x2 - xC2\r\n                        //  , ddy2 = y2 - yC2\r\n                        //  , cosAngle = Math.cos(angle)\r\n                        //  , sinAngle = Math.sin(angle)\r\n                        //  , cosAngleM = Math.cos(-angle)\r\n                        //  , sinAngleM = Math.sin(-angle)\r\n                        //  ;\r\n\r\n                        // TODO This should change the points to arrange them on the circle\r\n                        //\r\n                        // x1 = ddx1 * cosAngle - ddy1 * sinAngle + xC1;\r\n                        // y1 = ddx1 * sinAngle + ddy1 * cosAngle + yC1;\r\n\r\n                        // x2 = ddx2 * cosAngleM - ddy2 * sinAngle + xC2;\r\n                        // y2 = ddx2 * sinAngleM + ddy2 * cosAngle + yC2;\r\n\r\n                        // ===================\r\n                        // x1 = cx1 + ddx1 * Math.cos(angle) - ddy1 * Math.sin(angle)\r\n                        // y1 = cy1 + ddx1 * Math.sin(angle) - ddy1 * Math.cos(angle)\r\n\r\n                        //x2 = cx2 + ddx2 * Math.cos(angle) - ddy2 * Math.sin(angle) + xR2\r\n                        //y2 = cy2 + ddx2 * Math.sin(angle) - ddy2 * Math.cos(angle) + yR2\r\n\r\n                        var cx = (x1 + x2) / 2,\r\n                            cy = (y1 + y2) / 2,\r\n                            dd = null,\r\n                            out = {\r\n                            x1: x1,\r\n                            y1: y1,\r\n                            x2: x2,\r\n                            y2: y2,\r\n                            ex: x1,\r\n                            ey: y1\r\n                        };\r\n\r\n                        if (isNaN(out.x1)) {\r\n                            out.x1 = sT.x + xR1 * 2;\r\n                            out.y1 = sT.y + yR1 / 2;\r\n                            out.x2 = sT.x;\r\n                            out.y2 = out.y1;\r\n                            out.ex = (out.x1 + out.x2) / 2;\r\n                            out.ey = out.y1 - options.kk * (i + 1);\r\n                        } else {\r\n                            dx = Math.abs((x1 - x2) / 2);\r\n                            dy = Math.abs((y1 - y2) / 2);\r\n\r\n                            if (i !== (l - 1) / 2) {\r\n                                dd = Math.sqrt(dx * dx + dy * dy);\r\n                                out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                                out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                            }\r\n                        }\r\n\r\n                        output.push(out);\r\n                    });\r\n\r\n                    return output;\r\n                };\r\n            }\r\n\r\n            elmSource.cons = elmSource.cons || [];\r\n            elmSource.cons.push(con);\r\n\r\n            /**\r\n             * update\r\n             * Updates the line coordinates.\r\n             *\r\n             * @name update\r\n             * @function\r\n             * @return {undefined}\r\n             */\r\n            con.update = function () {\r\n                var cons = Deffy(_betweenTwoBubbles[con._], []),\r\n                    results = con.computeLineCoordinates(cons);\r\n\r\n                IterateObject(results, function (r, i) {\r\n                    cons[i].line.plot(\"M\" + r.x1 + \" \" + r.y1 + \" Q\" + r.ex + \" \" + r.ey + \" \" + r.x2 + \" \" + r.y2);\r\n                });\r\n            };\r\n\r\n            con.update();\r\n            elmSource.on(\"dragmove\", con.update);\r\n            elmTarget.on(\"dragmove\", con.update);\r\n\r\n            /**\r\n             * setLineColor\r\n             * Sets the line color.\r\n             *\r\n             * @name setLineColor\r\n             * @function\r\n             * @param {String} color The new color.\r\n             * @param {Connectable} c The connectable instance.\r\n             * @return {undefined}\r\n             */\r\n            con.setLineColor = function (color, c) {\r\n                c = c || this;\r\n                c.line.stroke(color);\r\n                c.marker.fill(color);\r\n            };\r\n\r\n            return con;\r\n        }\r\n\r\n        if (typeof SVG === \"function\") {\r\n            SVG.extend(SVG.Element, {\r\n                connectable: connectable,\r\n                delete_connectable: delete_connectable\r\n            });\r\n        } else if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") {\r\n            throw new Error(\"SVG.js is not loaded but it is required.\");\r\n        }\r\n\r\n        module.exports = connectable;\r\n    }, { \"deffy\": 2, \"idy\": 4, \"iterate-object\": 5, \"set-or-get\": 6 }], 2: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Typpy = require(\"typpy\");\r\n\r\n        /**\r\n         * Deffy\r\n         * Computes a final value by providing the input and default values.\r\n         *\r\n         * @name Deffy\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Anything|Function} def The default value or a function getting the\r\n         * input value as first argument.\r\n         * @param {Object|Boolean} options The `empty` value or an object containing\r\n         * the following fields:\r\n         *\r\n         *  - `empty` (Boolean): Handles the input value as empty field (`input || default`). Default is `false`.\r\n         *\r\n         * @return {Anything} The computed value.\r\n         */\r\n        function Deffy(input, def, options) {\r\n\r\n            // Default is a function\r\n            if (typeof def === \"function\") {\r\n                return def(input);\r\n            }\r\n\r\n            options = Typpy(options) === \"boolean\" ? {\r\n                empty: options\r\n            } : {\r\n                empty: false\r\n            };\r\n\r\n            // Handle empty\r\n            if (options.empty) {\r\n                return input || def;\r\n            }\r\n\r\n            // Return input\r\n            if (Typpy(input) === Typpy(def)) {\r\n                return input;\r\n            }\r\n\r\n            // Return the default\r\n            return def;\r\n        }\r\n\r\n        module.exports = Deffy;\r\n    }, { \"typpy\": 3 }], 3: [function (require, module, exports) {\r\n        /**\r\n         * Typpy\r\n         * Gets the type of the input value or compares it\r\n         * with a provided type.\r\n         *\r\n         * Usage:\r\n         *\r\n         * ```js\r\n         * Typpy({}) // => \"object\"\r\n         * Typpy(42, Number); // => true\r\n         * Typpy.get([], \"array\"); => true\r\n         * ```\r\n         *\r\n         * @name Typpy\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Constructor|String} target The target type.\r\n         * It could be a string (e.g. `\"array\"`) or a\r\n         * constructor (e.g. `Array`).\r\n         * @return {String|Boolean} It returns `true` if the\r\n         * input has the provided type `target` (if was provided),\r\n         * `false` if the input type does *not* have the provided type\r\n         * `target` or the stringified type of the input (always lowercase).\r\n         */\r\n        function Typpy(input, target) {\r\n            if (arguments.length === 2) {\r\n                return Typpy.is(input, target);\r\n            }\r\n            return Typpy.get(input, true);\r\n        }\r\n\r\n        /**\r\n         * Typpy.is\r\n         * Checks if the input value has a specified type.\r\n         *\r\n         * @name Typpy.is\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Constructor|String} target The target type.\r\n         * It could be a string (e.g. `\"array\"`) or a\r\n         * constructor (e.g. `Array`).\r\n         * @return {Boolean} `true`, if the input has the same\r\n         * type with the target or `false` otherwise.\r\n         */\r\n        Typpy.is = function (input, target) {\r\n            return Typpy.get(input, typeof target === \"string\") === target;\r\n        };\r\n\r\n        /**\r\n         * Typpy.get\r\n         * Gets the type of the input value. This is used internally.\r\n         *\r\n         * @name Typpy.get\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Boolean} str A flag to indicate if the return value\r\n         * should be a string or not.\r\n         * @return {Constructor|String} The input value constructor\r\n         * (if any) or the stringified type (always lowercase).\r\n         */\r\n        Typpy.get = function (input, str) {\r\n\r\n            if (typeof input === \"string\") {\r\n                return str ? \"string\" : String;\r\n            }\r\n\r\n            if (null === input) {\r\n                return str ? \"null\" : null;\r\n            }\r\n\r\n            if (undefined === input) {\r\n                return str ? \"undefined\" : undefined;\r\n            }\r\n\r\n            // eslint-disable-next-line no-self-compare\r\n            if (input !== input) {\r\n                return str ? \"nan\" : NaN;\r\n            }\r\n\r\n            return str ? input.constructor.name.toLowerCase() : input.constructor;\r\n        };\r\n\r\n        module.exports = Typpy;\r\n    }, {}], 4: [function (require, module, exports) {\r\n        /**\r\n         * Idy\r\n         * Generates a random id and potentially unique.\r\n         *\r\n         * @name Idy\r\n         * @function\r\n         * @param {Number} length The id length (default: 10).\r\n         * @return {String} The generated id.\r\n         */\r\n        function Idy(length) {\r\n            length = length || 10;\r\n            return Math.random().toString(35).substr(2, length);\r\n        }\r\n\r\n        module.exports = Idy;\r\n    }, {}], 5: [function (require, module, exports) {\r\n        /**\r\n         * IterateObject\r\n         * Iterates an object. Note the object field order may differ.\r\n         *\r\n         * @name IterateObject\r\n         * @function\r\n         * @param {Object} obj The input object.\r\n         * @param {Function} fn A function that will be called with the current value, field name and provided object.\r\n         * @return {Function} The `IterateObject` function.\r\n         */\r\n        function IterateObject(obj, fn) {\r\n            var i = 0,\r\n                keys = [];\r\n\r\n            if (Array.isArray(obj)) {\r\n                for (; i < obj.length; ++i) {\r\n                    if (fn(obj[i], i, obj) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                keys = Object.keys(obj);\r\n                for (; i < keys.length; ++i) {\r\n                    if (fn(obj[keys[i]], keys[i], obj) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        module.exports = IterateObject;\r\n    }, {}], 6: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Deffy = require(\"deffy\");\r\n\r\n        /**\r\n         * SetOrGet\r\n         * Sets or gets an object field value.\r\n         *\r\n         * @name SetOrGet\r\n         * @function\r\n         * @param {Object|Array} input The cache/input object.\r\n         * @param {String|Number} field The field you want to update/create.\r\n         * @param {Object|Array} def The default value.\r\n         * @return {Object|Array} The field value.\r\n         */\r\n        function SetOrGet(input, field, def) {\r\n            return input[field] = Deffy(input[field], def);\r\n        }\r\n\r\n        module.exports = SetOrGet;\r\n    }, { \"deffy\": 7 }], 7: [function (require, module, exports) {\r\n        arguments[4][2][0].apply(exports, arguments);\r\n    }, { \"dup\": 2, \"typpy\": 8 }], 8: [function (require, module, exports) {\r\n        arguments[4][3][0].apply(exports, arguments);\r\n    }, { \"dup\": 3 }] }, {}, [1]);","import React from 'react';\r\nimport LinkNode from './nodes/LinkNode.js'\r\nimport BodyNode from './nodes/BodyNode.js'\r\nimport SectionNode from './nodes/SectionNode.js'\r\nimport { Block } from 'slate'\r\nimport { getEventTransfer } from 'slate-react';\r\nimport { deleteNode } from './NodeSwitch.js'\r\n\r\nexport default function LinkPlugin(options) {\r\n    return {\r\n        commands: {\r\n            wrapLinkAtSelection(editor, node_id) {\r\n                return editor.wrapInline({\r\n                    type: \"link\",\r\n                    data: { \"node_id\": node_id, \"nodeStyle\": \"Inline\" }\r\n                });\r\n            }\r\n        },\r\n\r\n        renderInline(props, editor, next) {\r\n            if (props.node.type === 'link') {\r\n                var { ref, id } = getRefAndId(props, editor, \"short\");\r\n\r\n                return <LinkNode ref={ref} {...props} linkStyle=\"inline\" sharedState={editor.getSharedState()} nodeId={id}/>\r\n            }\r\n\r\n            return next();\r\n        },\r\n\r\n        renderBlock(props, editor, next) {\r\n            var refAndId;\r\n\r\n            if (props.node.type === 'body') {\r\n                refAndId = getRefAndId(props, editor, \"long\");\r\n\r\n                // set up the placeholder text to only appear when the body is empty and no text is selected\r\n                var isEmpty = !props.node.text\r\n\r\n                var selectNode = () => {\r\n                    setTimeout(() => {editor.focus(); editor.moveToStartOfNode(props.node);}, 0)\r\n                }\r\n\r\n                return <BodyNode\r\n                            ref={refAndId.ref}\r\n                            {...props}\r\n                            sharedState={editor.getSharedState()}\r\n                            nodeId={refAndId.id}\r\n                            isEmpty={isEmpty}\r\n                            selectNode={selectNode}\r\n                        />\r\n\r\n            } else if (props.node.type === 'link') {\r\n                refAndId = getRefAndId(props, editor, \"short\");\r\n\r\n                return <LinkNode\r\n                            ref={refAndId.ref}\r\n                            {...props}\r\n                            linkStyle=\"heading\"\r\n                            sharedState={editor.getSharedState()}\r\n                            nodeId={refAndId.id}\r\n                        />\r\n\r\n            } else if (props.node.type === 'section') {\r\n                refAndId = getRefAndId(props, editor, \"section\");\r\n\r\n                return <SectionNode\r\n                    ref={refAndId.ref}\r\n                    {...props}\r\n                    sharedState={editor.getSharedState()}\r\n                    nodeId={refAndId.id}\r\n                />\r\n            }\r\n\r\n            return next();\r\n        },\r\n\r\n        onDrop(event, editor, next) {\r\n            // suppress drop events\r\n            // do not call next()\r\n        },\r\n\r\n        onPaste(event, editor, next) {\r\n            const getLinkInlines = (the_doc) => the_doc.filterDescendants(node => node.type === 'link' && node.object === 'inline')\r\n\r\n            var transfer = getEventTransfer(event);\r\n\r\n            if (transfer.type === \"fragment\") {\r\n\r\n                // if pasting into a link or body, just paste plain text, not a fragment\r\n                if (editor.value.blocks.some(block => block.type === \"link\" || block.type === \"body\")) {\r\n                    const textNoNewlines = transfer.fragment.text.replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                    editor.insertText(textNoNewlines)\r\n\r\n                    // NB: no next() call, so this plugin must be the last one in the stack that handles onPaste()\r\n                    return\r\n                }\r\n\r\n                const fragmentInlines = getLinkInlines(transfer.fragment)\r\n\r\n                if (fragmentInlines) {\r\n                    const docInlines = getLinkInlines(editor.value.document)\r\n                    const usedIds = []\r\n                    docInlines.forEach(inline => {usedIds.push({key: inline.key, id: inline.data.get(\"node_id\")})})\r\n                    \r\n                    // let the paste happen so we can operate on the document instead of inline\r\n                    next()\r\n\r\n                    // if an inline in the pasted content has the same id as one in the document, unwrap the pasted inline\r\n                    fragmentInlines.forEach(inline => {\r\n                        usedIds.forEach(usedId => {\r\n                            const id = inline.data.get(\"node_id\")\r\n                            if (usedId.id === id) {\r\n                                const inlinesWithId = editor.value.document.filterDescendants(node => node.type === 'link' && node.object === 'inline' && node.data.get('node_id') === id)\r\n                                inlinesWithId.forEach(inlineWithId => {\r\n                                    if (inlineWithId.key !== usedId.key) {\r\n                                        editor.unwrapInlineByKey(inlineWithId.key)\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            } else {\r\n                next()\r\n            }\r\n        },\r\n\r\n        onChange(editor, next) {\r\n            // update all node texts (both link and body)\r\n            const sharedState = editor.getSharedState();\r\n            [\r\n                {nodeType: 'link', updateFunc: sharedState.updateGraphShortText.bind(sharedState)},\r\n                {nodeType: 'body', updateFunc: sharedState.updateGraphLongText.bind(sharedState)}\r\n            ].forEach( update =>\r\n                editor.value.blocks.forEach(block => {\r\n                    const updateText = (linkNode) => {\r\n                        // if we've just emptied an inline text node, we should delete the node and its link to the graph\r\n                        // also if we ever have a link node disconnected from the graph, just remove it to restore legal state\r\n                        const id = linkNode.data.get('node_id')\r\n                        sharedState.checkRecycleBinForGraphNode(id) // in case there was an undo and redo, we should restore the graph link\r\n                        if (linkNode.object === 'inline' && (linkNode.text === \"\" || !sharedState.getGraphNode(id))) {\r\n                            deleteNode(linkNode, editor)\r\n                        } else {\r\n                            update.updateFunc(linkNode.data.get(\"node_id\"), linkNode.text)\r\n                        }\r\n                    }\r\n\r\n                    var linkNodes = block.filterDescendants(node => node.type === update.nodeType)\r\n                    linkNodes.forEach(updateText)\r\n\r\n                    if (block.type === update.nodeType) {\r\n                        updateText(block)\r\n                    }\r\n                })\r\n            )\r\n\r\n            next()\r\n        },\r\n\r\n        onKeyDown(e, editor, next) {\r\n            const { value } = editor\r\n            const { document, selection, startBlock} = value\r\n            const { start, end } = selection\r\n\r\n            // if a whole section (block or inline) is deleted, tell the graph node\r\n            if ((e.key === 'Backspace' || e.key === 'Delete') && selection.isExpanded) {\r\n                document.getDescendantsAtRange(selection).forEach(node => {\r\n                    if (node.type === 'section' || node.type === 'link') {\r\n                        // it's not certain whether the section will be deleted, as it may only be partially selected\r\n                        // so check in 0 seconds, once the deletion happens, whether that's the case\r\n                        setTimeout(() => {\r\n                            editor.getSharedState().updateIsOnGraphStatus(node.data.get('node_id'))\r\n                        }, 0)\r\n                    }\r\n                })\r\n            }\r\n\r\n            // prevent delete key from merging body and link blocks with next\r\n            if (e.key === \"Delete\") {\r\n                if (startBlock && value.selection.isCollapsed && value.selection.end.isAtEndOfNode(startBlock)) {\r\n                    const nextBlock = document.getNextBlock(start.key)\r\n                    if (nextBlock && (nextBlock.type === \"body\" || nextBlock.type === \"link\" || nextBlock.type === \"section\")) {\r\n                        editor.moveToStartOfNode(nextBlock);\r\n                        if (startBlock.text === \"\") {\r\n                            editor.removeNodeByKey(startBlock.key)\r\n                        }\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n\r\n            // prevent backspace from merging body and link blocks with previous\r\n            if (e.key === 'Backspace') {\r\n                const prevBlock = document.getPreviousBlock(start.key)\r\n                if (startBlock && selection.isCollapsed && start.offset === 0 && prevBlock && (startBlock.type === \"body\" || startBlock.type === \"link\")) {\r\n                    if (prevBlock) {\r\n                        editor.moveToEndOfNode(prevBlock);\r\n                        if (startBlock.text === \"\") {\r\n                            editor.removeNodeByKey(startBlock.key)\r\n                        } else if (prevBlock.text === \"\") {\r\n                            editor.removeNodeByKey(prevBlock.key)\r\n                         }\r\n                    }\r\n                    return editor\r\n                }\r\n            }\r\n\r\n            if (e.key === 'Enter') {\r\n                if (value.inlines.some(inline => inline.type === 'link')) {\r\n                    return // do nothing to avoid splitting the link\r\n                }\r\n\r\n                // when enter is pressed inside a link *block* (not inline), just go to body\r\n                if (startBlock && startBlock.type === \"link\" && start.key === end.key) {\r\n                    // unless the offset is 0, in which case insert a block before and go to that\r\n                    if (start.offset === 0) {\r\n                        const blockToInsert = Block.create({object: 'block', type: ''})\r\n                        const section = document.getParent(startBlock.key);\r\n                        const sectionParent = document.getParent(section.key);                    \r\n                        const sectionIndex = sectionParent.nodes.indexOf(section);\r\n\r\n                        editor.insertNodeByKey(sectionParent.key, sectionIndex, blockToInsert);\r\n                        return editor.moveBackward(1)\r\n                    } else {\r\n                        const nextBlock = document.getNextBlock(start.key)\r\n                        if (nextBlock) {\r\n                            return editor.moveToStartOfNode(nextBlock);\r\n                        } else {\r\n                            return editor.moveToEndOfNode(startBlock);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // prevent the cursor disappearing when navigating into the body placeholder text\r\n            if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\r\n                const relevantBlock = e.key === 'ArrowDown' ? document.getNextBlock(start.key) : document.getPreviousBlock(start.key)\r\n                const ESTIMATED_CHARS_PER_LINE = 130 // calibrated on a 1920x1080 screen... :/\r\n                // we only need to handle the case where the cursor offset is < the length of the placeholder\r\n                if (relevantBlock && relevantBlock.type === 'body' && start.offset < 'Type some text... '.length) {\r\n                    // if down arrow was pressed, only jump to the body if there is only one line of text in the block\r\n                    // its hard to work out how many lines of text there so use an estimate\r\n                    if (e.key === 'ArrowUp' || startBlock.text.length < ESTIMATED_CHARS_PER_LINE) {\r\n                        editor.moveToEndOfNode(relevantBlock)\r\n                        e.preventDefault()\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n\r\n            // prevent tab from taking focus from the editor\r\n            if (e.key === 'Tab') {\r\n                e.preventDefault()\r\n            }\r\n\r\n            return next()\r\n        }\r\n    }\r\n\r\n    function getRefAndId(props, editor, long_or_short) {\r\n        var id = props.node.data.get(\"node_id\");\r\n        editor.getSharedState().setLinkMapping(id, props.node, long_or_short);\r\n        var ref = React.createRef();\r\n        editor.getSharedState().registerLinkNode(id, ref, long_or_short);\r\n        return { ref, id };\r\n    }\r\n}","import React from 'react';\r\nimport PlainBlockNode from './nodes/PlainBlockNode.js'\r\n\r\nexport default function ReorderPlugin(options) {\r\n    return {\r\n        renderBlock(props, editor, next) {            \r\n            if (!props.node.type || props.node.type === '' || props.node.type === 'paragraph') {\r\n                return <PlainBlockNode {...props}/>\r\n            }\r\n            \r\n            return next();\r\n        },\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function WordCountPlugin(options) {\r\n    return {\r\n        renderEditor(props, editor, next) {\r\n            const wordCount = countWords(props.editor.value.document)\r\n            const children = next()\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    {children}\r\n                    <span className=\"word-count\">{wordCount + \" words\"}</span>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction countWords(document) {\r\n    if (!document) {\r\n        return 0\r\n    }\r\n\r\n    // count words per block because document.text does not preserve newlines so undercounts\r\n    var count = 0\r\n    document.getBlocks().forEach(block => {\r\n        // skip hidden body/link elements\r\n        if (block.type === 'link' || block.type === 'body') {\r\n            const parent = document.getParent(block.key)\r\n            if (parent && parent.type === 'section') {\r\n                if ((parent.data.get('nodeStyle') === 'Heading only' && block.type === 'body') ||\r\n                    (parent.data.get('nodeStyle') === 'Body only' && block.type === 'link')) {\r\n                    return\r\n                }\r\n            }\r\n        }        \r\n\r\n        const words = block.text.match(/\\S+/g)  // split into non-whitespace substrings\r\n        if (words) {\r\n            count += words.length\r\n        }\r\n    })\r\n\r\n    return count.toString()\r\n}","import React, { Component } from 'react';\r\nimport './DocPane.css';\r\nimport DocEditor from './DocEditor.js'\r\n\r\nclass DocPane extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pane doc\">\r\n                <DocEditor sharedState={this.props.sharedState} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocPane;","import OptionPopup from './OptionPopup.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst COMPLETED_ARROW_COLOUR = \"#5D4037\";\r\nconst POTENTIAL_ARROW_COLOUR = \"#d4b8b0\";\r\nconst DRAWING_ARROW_COLOUR = \"#719deb\";\r\n\r\nconst ADD_ARROW_TYPE_MENU_ITEM = 'Add arrow type'\r\n\r\nconst COLOURS = [\r\n    'red',\r\n    'goldenrod',\r\n    'green',\r\n    'aqua',\r\n    'blue',\r\n    'fuchsia',\r\n    'purple',\r\n    'saddlebrown'\r\n]\r\n\r\nvar DEFAULT_ARROW_OPTIONS = [\r\n    {'colour': 'green', 'name': 'Supports', 'symbol': \"→\"},\r\n    {'colour': 'red', 'name': 'Opposes', 'symbol': \"→\"},\r\n    {'colour': 'blue', 'name': 'Expands', 'symbol': \"→\"},\r\n];\r\n\r\nexport default class MouseFollower {\r\n    constructor(shared_state, svg, connectables_container, markers, links) {\r\n        this.shared_state = shared_state;\r\n        this.drawing_arrow_from = false;\r\n        this.connector = undefined;\r\n        this.connectables_container = connectables_container;\r\n        this.markers = markers;\r\n        this.links = links;\r\n\r\n        this.connector_objs = {}\r\n        this.temp_arrows = {}\r\n\r\n        this.arrow_id_counter = 0\r\n\r\n        this.completed_arrows = []\r\n\r\n        this.mouse_rect = svg.group();\r\n        window.addEventListener('mousemove', e => {\r\n            var point = svg.point(e.clientX, e.clientY);\r\n            this.mouse_rect.move(point.x, point.y);\r\n            \r\n            if (typeof(this.connector) !== 'undefined') {\r\n                this.connector.update();\r\n            }\r\n        });\r\n\r\n        // cancel arrows if they don't end on a node\r\n        window.addEventListener('mouseup', (e) => {\r\n            if (this.drawing_arrow_from) {\r\n                e.preventDefault();\r\n                this.stop_drawing_arrow();\r\n            }\r\n        });\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            arrows: this.completed_arrows,\r\n            arrow_id_counter: this.arrow_id_counter,\r\n            arrowOptions: this.arrowOptions,\r\n        }\r\n    }\r\n\r\n    static fromJSON(json, shared_state, svg, connectables_container, markers, links) {\r\n        var mf = new MouseFollower(shared_state, svg, connectables_container, markers, links)\r\n        mf.arrow_id_counter = json && json.arrow_id_counter ? json.arrow_id_counter : 0\r\n        mf.completed_arrows = json && json.arrows ? json.arrows : []\r\n        mf.arrowOptions = json && json.arrowOptions ? json.arrowOptions : DEFAULT_ARROW_OPTIONS\r\n\r\n        return mf\r\n    }\r\n\r\n    // draw all the arrows in this.completed_arrows\r\n    // needs to happen separately from loading because when the mouse_follower is first created, the nodes have not yet been loaded\r\n    draw_loaded_arrows(get_node) {\r\n        this.completed_arrows.forEach(arrow => {\r\n            const originNode = get_node(arrow.origin)\r\n            const destinationNode = get_node(arrow.destination)\r\n\r\n            if (!originNode) {\r\n                toast.error(\"Error: could not draw arrow from origin \" + arrow.origin)\r\n                return\r\n            }\r\n\r\n            if (!destinationNode) {\r\n                toast.error(\"Error: could not draw arrow to destination \" + arrow.destination)\r\n                return\r\n            }\r\n\r\n            const connector = this.draw_arrow(\r\n                originNode,\r\n                destinationNode,\r\n                arrow.colour\r\n            )\r\n            this.add_context_menu_to_arrow(connector, arrow)\r\n            this.connector_objs[arrow.origin + \"->\" + arrow.destination] = connector\r\n            \r\n            // update the arrow start and end points\r\n            originNode.group.node.dispatchEvent(new CustomEvent(\"dragmove\"))\r\n        })\r\n    }\r\n\r\n    update_source(new_source) {\r\n        if (typeof(this.connector) === 'undefined') {\r\n            this.connector = new_source.connectable({\r\n                container: this.connectables_container,\r\n                markers: this.markers\r\n            }, this.mouse_rect);\r\n        } else {\r\n            this.connector.marker.show();\r\n            this.connector.line.show();\r\n\r\n            this.connector.target = this.mouse_rect;\r\n            this.connector.source = new_source;\r\n            this.connector.update();\r\n        }\r\n        if (this.connector) {\r\n            this.connector.setLineColor(POTENTIAL_ARROW_COLOUR);\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        if (typeof(this.connector) !== 'undefined') {\r\n            this.connector.target = this.connector.source;\r\n            this.connector.marker.hide();\r\n            this.connector.line.hide();\r\n        }\r\n    }\r\n\r\n    start_arrow(source_node) {\r\n        this.drawing_arrow_from = source_node;\r\n        if (this.connector) {\r\n            this.connector.setLineColor(DRAWING_ARROW_COLOUR);\r\n        }\r\n    }\r\n\r\n    draw_arrow(origin, destination, colour) {\r\n        var connector = origin.group.connectable({\r\n            container: this.links,\r\n            markers: this.markers,\r\n            specialCoords: true\r\n        }, destination.group);\r\n        connector.setLineColor(colour);\r\n\r\n        connector.source.on(\"deletenode\", () => {\r\n            connector.source.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector)\r\n        });\r\n        connector.target.on(\"deletenode\", () => {\r\n            connector.target.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector)\r\n        });\r\n\r\n        return connector\r\n    }\r\n\r\n    add_context_menu_to_arrow(connector, arrowObject) {\r\n        const show_context_menu = e => {\r\n            var graph_pos = document.getElementById(\"graph\").getBoundingClientRect();\r\n            this.edit_connector_type(connector, e.clientX - graph_pos.left, e.clientY - graph_pos.top, true, (new_colour) => {\r\n                arrowObject.colour = new_colour\r\n            }, arrowObject);\r\n            e.preventDefault();\r\n        };\r\n        connector.line.on(\"click\", show_context_menu);\r\n        connector.line.on(\"contextmenu\", show_context_menu);\r\n\r\n        connector.source.on(\"deletenode\", () => {\r\n            connector.source.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector, arrowObject)\r\n        });\r\n        connector.target.on(\"deletenode\", () => {\r\n            connector.target.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector, arrowObject)\r\n        });\r\n\r\n        // detect if the user changes the colour of this arrow\r\n        window.addEventListener('colourchange', (e) => {\r\n            if (e.detail.oldColour === arrowObject.colour) {\r\n                connector.setLineColor(e.detail.newColour)\r\n                arrowObject.colour = e.detail.newColour\r\n            }\r\n        })\r\n\r\n        // detect if all arrows of this colour were deleted\r\n        window.addEventListener('arrowdelete', (e) => {\r\n            if (e.detail.colour === arrowObject.colour) {\r\n                this.remove_arrow(connector, arrowObject)\r\n            }\r\n        })\r\n    }\r\n\r\n    complete_arrow(end_node) {\r\n        // no arrows to self\r\n        if (end_node === this.drawing_arrow_from) {\r\n            this.stop_drawing_arrow();\r\n            return;\r\n        }\r\n\r\n        var connector = this.draw_arrow(this.drawing_arrow_from, end_node, COMPLETED_ARROW_COLOUR)\r\n\r\n        var c1 = this.drawing_arrow_from.group.getScreenCoords('centre')\r\n        var c2 = end_node.group.getScreenCoords('centre')\r\n        var midpoint = {x: (c1.x + c2.x) / 2, y: (c1.y + c2.y) / 2}\r\n\r\n        // only add the arrow to the list of completed arrows once a colour is selected\r\n        // to prevent weird states being saved and loaded\r\n        const drawing_arrow_from_id = this.drawing_arrow_from.id\r\n        const colourWasSelected = (colour) => {\r\n            const id = this.getNewId()\r\n            const arrowObject = {\r\n                id: id,\r\n                origin: drawing_arrow_from_id,\r\n                destination: end_node.id,\r\n                colour: colour,\r\n            }\r\n            this.completed_arrows.push(arrowObject)\r\n\r\n            this.add_context_menu_to_arrow(connector, arrowObject)\r\n        }\r\n\r\n        this.edit_connector_type(connector, midpoint.x, midpoint.y, false, colourWasSelected);\r\n\r\n        this.shared_state.logger.logEvent({'type': 'arrow_create', 'id': connector.id, 'source': this.drawing_arrow_from.id, 'target': end_node.id});\r\n        this.stop_drawing_arrow();\r\n    }\r\n\r\n    getArrowByID(id) {\r\n        return this.completed_arrows.find(arrow => arrow.id === id)\r\n    }\r\n\r\n    getConnectorObjectConnecting(source, dest) {\r\n        // if there are multiple, this will just return the first\r\n        return this.connector_objs[source + \"->\" + dest]\r\n    }\r\n\r\n    addTempArrow(source, dest, colour, temp_id) {\r\n        const source_node = this.shared_state.graphPane.getNodeById(source)\r\n        const dest_node = this.shared_state.graphPane.getNodeById(dest)\r\n        if (!source_node || !dest_node) {\r\n            return\r\n        }\r\n        this.connector_objs[source + '->' + dest] = this.draw_arrow(source_node, dest_node, colour)\r\n        this.temp_arrows[temp_id] = source + '->' + dest\r\n    }\r\n\r\n    getNewId() {\r\n        this.arrow_id_counter++\r\n        return this.arrow_id_counter\r\n    }\r\n\r\n    changeArrowColour(entry, direction) {\r\n        const oldColour = entry.colour\r\n        var newColour = this.getNextAvailableColour(entry, direction)\r\n        if (!newColour) {\r\n            return\r\n        }\r\n        entry.colour = newColour\r\n\r\n        window.dispatchEvent(new CustomEvent('colourchange', {\r\n            detail: {\r\n                oldColour: oldColour,\r\n                newColour: newColour,\r\n            }\r\n        }))\r\n\r\n        this.shared_state.logger.logEvent({'type': 'update_arrow_colour', 'newColour': newColour});\r\n\r\n        return newColour\r\n    }\r\n\r\n    getNextAvailableColour(entry, direction) {\r\n        // find all the colours which are not used by arrowOptions other than this one\r\n        const availableColours = COLOURS.filter(colour => \r\n            !this.arrowOptions.find(option => option.colour === colour && option !== entry)\r\n        )\r\n\r\n        if (!availableColours) {\r\n            return undefined\r\n        } else {\r\n            const thisColourIndex = entry ? availableColours.indexOf(entry.colour) : 0\r\n            if (thisColourIndex !== -1) {\r\n                var nextIndex = (thisColourIndex + 1 * direction) % availableColours.length\r\n                if (nextIndex < 0) {\r\n                    nextIndex = availableColours.length - 1\r\n                }\r\n                return availableColours[nextIndex]\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrowOptions() {\r\n        const clickEditButton = (e, params) => {\r\n            const MAX_ARROW_TYPE_NAME_LENGTH = 50 // chars\r\n\r\n            var { colourCell, nameCell, buttonCell, underlyingEntry, transientEntry } = params\r\n\r\n            transientEntry.isClickable = false\r\n\r\n            var editButton = buttonCell.children[0]\r\n\r\n            const updateName = () => {\r\n                var newValue = input.value\r\n                if (newValue.length >= MAX_ARROW_TYPE_NAME_LENGTH) {\r\n                    newValue = newValue.substring(0, MAX_ARROW_TYPE_NAME_LENGTH)\r\n                }\r\n                if (newValue) {\r\n                    underlyingEntry.name = newValue\r\n                }\r\n\r\n                return newValue\r\n            }\r\n\r\n            const finishEditing = () => {\r\n                var newValue = updateName()\r\n                if (newValue) {\r\n                    nameCell.textContent = newValue\r\n                }\r\n\r\n                transientEntry.isClickable = true\r\n\r\n                colourCell.textContent = colourButton.textContent\r\n                colourCell.style.color = colourButton.style.color\r\n                \r\n                editButton.classList.remove('pure-button-active')\r\n                editButton.onclick = (e) => clickEditButton(e, params)\r\n            }\r\n\r\n            editButton.classList.add('pure-button-active')\r\n            editButton.onclick = finishEditing\r\n\r\n            var input = document.createElement(\"input\")\r\n            \r\n            input.style.width = (nameCell.getBoundingClientRect().width - 5).toString() + \"px\"\r\n            input.value = nameCell.textContent\r\n            input.addEventListener('keyup', (e) => {\r\n                if (e.key === 'Enter' && input.value) {\r\n                    finishEditing()\r\n                }\r\n            })\r\n            input.addEventListener('change', updateName)\r\n\r\n            nameCell.textContent = \"\"\r\n            nameCell.appendChild(input)\r\n\r\n            var colourButton = document.createElement(\"button\")\r\n            colourButton.className = 'pure-button'\r\n            colourButton.textContent = colourCell.textContent\r\n            colourCell.textContent = \"\"\r\n            colourCell.appendChild(colourButton)\r\n            colourButton.style.color = colourCell.style.color\r\n            colourButton.style.padding = 0\r\n            colourButton.addEventListener(\"click\", () => {\r\n                colourButton.style.color = this.changeArrowColour(underlyingEntry, 1)\r\n                transientEntry.colour = underlyingEntry.colour\r\n            })\r\n            colourButton.addEventListener(\"contextmenu\", (e) => {\r\n                colourButton.style.color = this.changeArrowColour(underlyingEntry, -1)  // on right click, scroll backwards through the colours\r\n                transientEntry.colour = underlyingEntry.colour\r\n                e.preventDefault()\r\n            })\r\n\r\n            input.focus()\r\n        }\r\n\r\n        const clickDeleteArrowTypeButton = (e, params) => {\r\n            var { row, underlyingEntries, underlyingEntry, transientEntry, selected, hidePopup } = params\r\n            transientEntry.isClickable = false\r\n            \r\n            if (window.confirm('Are you sure you want to delete all \"' + underlyingEntry.name + '\" arrows? This cannot be undone.')) {\r\n                // remove from underlyingEntries\r\n                var index = underlyingEntries.indexOf(underlyingEntry)\r\n                if (index !== -1) {\r\n                    underlyingEntries.splice(index, 1)\r\n                }\r\n\r\n                // remove row after 0 delay to prevent this click event being registered as a click outside the option popup\r\n                setTimeout(() => row.parentNode.removeChild(row), 0)\r\n\r\n                // tell all arrows of this colour to delete themselves\r\n                window.dispatchEvent(new CustomEvent('arrowdelete', {\r\n                    detail: {\r\n                        colour: underlyingEntry.colour,\r\n                    }\r\n                }))\r\n\r\n                this.shared_state.logger.logEvent({'type': 'delete_arrow_type', 'colour': underlyingEntry.colour})\r\n\r\n                // if the selected arrow type was deleted, hide the optionpopup\r\n                if (selected) {\r\n                    hidePopup()\r\n                }\r\n            }\r\n\r\n            transientEntry.isClickable = true\r\n        }\r\n\r\n        const arrowOptionsWithButtons = this.arrowOptions.map(entry => {\r\n            var entryWithButtons = {...entry}\r\n            entryWithButtons.buttons = [\r\n                {\r\n                    className: 'edit-icon',\r\n                    click: clickEditButton,\r\n                    underlyingEntry: entry,\r\n                },\r\n                {\r\n                    className: 'delete-icon',\r\n                    click: clickDeleteArrowTypeButton,\r\n                    underlyingEntry: entry,\r\n                    underlyingEntries: this.arrowOptions,\r\n                }\r\n            ]\r\n            return entryWithButtons\r\n        })\r\n        \r\n        return [\r\n            ...arrowOptionsWithButtons,\r\n            {'colour': 'black', 'name': ADD_ARROW_TYPE_MENU_ITEM, 'symbol': '+'},\r\n            {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n        ]\r\n    }\r\n\r\n    edit_connector_type(connector, popup_x, popup_y, hideOnClickOutside, onColourSelected, arrowObject) {\r\n        var prev_selected = undefined;\r\n        \r\n        const arrowOptions = this.getArrowOptions()\r\n\r\n        prev_selected = arrowOptions.find(entry => entry.colour === connector.line.attr('stroke') && entry.name !== 'Delete' && entry.name !== ADD_ARROW_TYPE_MENU_ITEM)\r\n        prev_selected = prev_selected ? prev_selected.name : undefined\r\n\r\n        const setArrowColour = (selected_option) => {\r\n            connector.setLineColor(selected_option.colour);\r\n            this.shared_state.logger.logEvent({'type': 'arrow_set_type', 'id': connector.id, 'new_type': selected_option.name});\r\n\r\n            if (onColourSelected) {\r\n                onColourSelected(selected_option.colour)\r\n            }\r\n        }\r\n\r\n        new OptionPopup(arrowOptions, popup_x, popup_y, hideOnClickOutside, (selected_option) => {\r\n            if (selected_option.name === \"Delete\") {\r\n                this.shared_state.logger.logEvent({'type': 'arrow_delete', 'id': connector.id});\r\n                this.remove_arrow(connector, arrowObject);\r\n            } else if (selected_option.name === ADD_ARROW_TYPE_MENU_ITEM) {\r\n                const colour = this.getNextAvailableColour(null, 1)\r\n\r\n                if (!colour) {\r\n                    toast.error(\"Maximum number of arrow types reached!\")\r\n                } else {\r\n                    const newRelation = {\r\n                        'name': 'New relation',\r\n                        'colour': colour,\r\n                        'symbol': \"→\",\r\n                    }\r\n                    this.arrowOptions.push(newRelation)\r\n                    this.shared_state.logger.logEvent({'type': 'add_arrow_type', 'colour': colour});\r\n\r\n                    if (!prev_selected) {\r\n                        setArrowColour(newRelation)\r\n                    }\r\n\r\n                    // open a new option popup to allow the user to select the new arrow type and edit it\r\n                    this.edit_connector_type(connector, popup_x, popup_y, true, onColourSelected, arrowObject)\r\n                }\r\n            } else {\r\n                setArrowColour(selected_option)\r\n            }\r\n        }, prev_selected);\r\n    }\r\n\r\n    remove_arrow(connector, arrowObject) {\r\n        if (connector && connector.line) {\r\n            connector.line.node.instance.delete_connectable(connector);\r\n        }\r\n\r\n        if (arrowObject) {\r\n            this.completed_arrows = this.completed_arrows.filter(arrow => arrow !== arrowObject)        \r\n        }\r\n    }\r\n\r\n    stop_drawing_arrow() {\r\n        this.drawing_arrow_from = false;\r\n        this.hide();\r\n    }\r\n}","import OptionPopup from \"./OptionPopup\";\r\n\r\nvar ARROW_HITBOX_MARGIN = 20;\r\n\r\nclass GraphNode {\r\n    constructor(params, nodes, mouse_follower, shared_state, focus_text_area, getNodesList, zoomCanvasTo) {\r\n        var { shortText, x, y, width, height, id, isOnGraph, longText, annotatedOrder } = params\r\n        this.id = id ? id : shared_state.getNodeId();\r\n\r\n        this.getNodesList = getNodesList\r\n        this.zoomCanvasTo = zoomCanvasTo\r\n        \r\n        this.group = nodes.group().translate(x, y);\r\n\r\n        this.dropShadow = this.group.rect(width, height).radius(5).addClass('node-drop-shadow')\r\n        this.arrow_hitbox = this.group.rect(width + 2 * ARROW_HITBOX_MARGIN, height + 2 * ARROW_HITBOX_MARGIN)\r\n            .translate(-ARROW_HITBOX_MARGIN, -ARROW_HITBOX_MARGIN).opacity(0).radius(10).addClass('arrow-hitbox');\r\n        \r\n        this.rect = this.group.rect(width, height).radius(5).addClass('node');\r\n        this.editRect = this.group.rect(width - 10, height - 10).radius(5).translate(5, 5).addClass('editing-node-rect')\r\n        this.text = this.group.text(\"\").addClass('node-text');\r\n        this.updateShortText(shortText)\r\n        this.updateLongText(longText)\r\n\r\n        this.setupRectDragging(this.rect, shared_state);\r\n        this.setupArrowHitbox(this.arrow_hitbox, mouse_follower);\r\n        const complete_arrow = (e) => {\r\n            if (mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.complete_arrow(this);\r\n            }\r\n        };\r\n        this.arrow_hitbox.on('mouseup', complete_arrow);\r\n        this.rect.on('mouseup', complete_arrow);\r\n        this.text.on('mouseup', complete_arrow);\r\n\r\n        this.setupHover(shared_state);\r\n        this.setupContextMenu(shared_state);\r\n\r\n        if (focus_text_area) {\r\n            this.editText(shared_state, !params.doNotDeleteIfEmptyText);\r\n        }\r\n        \r\n        this.setIsOnGraph(isOnGraph);\r\n\r\n        this.annotatedOrder = annotatedOrder\r\n        this.showAnnotatedOrder()\r\n\r\n        // don't log add node events if they are just loaded from a save\r\n        if (!params.isFromJSON) {\r\n            shared_state.logger.logEvent({'type': 'node_create', 'id': this.id});\r\n        }\r\n    }\r\n\r\n    static fromJSON(json, nodes, mouse_follower, shared_state, getNodesList, zoomCanvasTo) {\r\n        var params = json\r\n        params.x = json.screenCoords.x\r\n        params.y = json.screenCoords.y\r\n        params.width = 200\r\n        params.height = 42\r\n        params.isFromJSON = true\r\n        return new GraphNode(params, nodes, mouse_follower, shared_state, false, getNodesList, zoomCanvasTo)\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            shortText: this.shortText,\r\n            longText: this.longText,\r\n            screenCoords: this.group.getScreenCoords(),\r\n            isOnGraph: this.isOnGraph,\r\n            annotatedOrder: this.annotatedOrder,\r\n        }\r\n    }\r\n\r\n    setIsOnGraph(newVal) {\r\n        this.isOnGraph = newVal;\r\n        if (this.isOnGraph) {\r\n            this.rect.addClass(\"node-on-graph\");\r\n        } else {\r\n            this.rect.removeClass(\"node-on-graph\");\r\n        }\r\n    }\r\n\r\n    setupContextMenu(shared_state) {\r\n        var showOptionMenu = e => {\r\n            e.preventDefault();\r\n            \r\n            var entries = [\r\n                {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n            ]\r\n            var graph_pos = document.getElementById(\"graph\").getBoundingClientRect();\r\n            new OptionPopup(entries, e.clientX - graph_pos.left, e.clientY - graph_pos.top, true, (selected_option) => {\r\n                if (selected_option.name === \"Delete\") {\r\n                    this.delete(shared_state);\r\n                }\r\n            });\r\n            \r\n            return false;\r\n        };\r\n        this.rect.on('contextmenu', showOptionMenu);\r\n        this.text.on('contextmenu', showOptionMenu);\r\n    }\r\n\r\n    setupHover(shared_state) {\r\n        this.hoverers = []\r\n\r\n        const startHover = (e) => {\r\n            this.setHoverer(\"mouse_\" + e.target, true);\r\n            shared_state.getAllDocNodeRefs(this.id).forEach(ref => {\r\n                if (!ref) {\r\n                    return\r\n                }\r\n                ref.decoratedRef ? ref.decoratedRef.current.decoratedRef.current.setExternalHover(true) : ref.setExternalHover(true);\r\n            });\r\n        };\r\n        const endHover = (e) => {\r\n            this.setHoverer(\"mouse_\" + e.target, false);\r\n            shared_state.getAllDocNodeRefs(this.id).forEach(ref => {\r\n                if (!ref) {\r\n                    return\r\n                }\r\n                ref.decoratedRef ? ref.decoratedRef.current.decoratedRef.current.setExternalHover(false) : ref.setExternalHover(false);\r\n            });\r\n        };\r\n        this.rect.on('mouseenter', startHover);\r\n        this.text.on('mouseenter', startHover);\r\n        this.rect.on('mouseleave', endHover);\r\n        this.text.on('mouseleave', endHover);\r\n    }\r\n\r\n    setHoverer(hoverer, isHovering) {\r\n        if (isHovering) {\r\n            if (!this.hoverers.includes(hoverer)) {\r\n                this.hoverers.push(hoverer)\r\n            }\r\n        } else {\r\n            // remove the hoverer\r\n            var index = this.hoverers.indexOf(hoverer);\r\n            if (index !== -1) this.hoverers.splice(index, 1);\r\n        }\r\n\r\n        this.setHovered(this.hoverers.length > 0)\r\n    }\r\n\r\n    setHovered(isHovered) {        \r\n        if (isHovered) {\r\n            this.rect.addClass(\"hovered\");\r\n        } else {\r\n            this.rect.removeClass(\"hovered\");\r\n        }\r\n    }\r\n\r\n    // the hitbox for arrows is an invisible rect a bit bigger than the visible node rect\r\n    // but we only want to make the node itself draggable\r\n    // so we need to intercept drag events on the rect, and move the entire group instead!\r\n    setupRectDragging(rect, shared_state) {\r\n        this.setupGroupDragging(rect, shared_state, rect);\r\n        this.setupGroupDragging(this.text, shared_state, rect, true);\r\n        \r\n        this.text.click((e) => e.preventDefault());\r\n        var edit_text_if_not_just_dropped = () => { if (!rect.just_dropped) this.editText(shared_state) };\r\n        rect.click(edit_text_if_not_just_dropped);\r\n        this.text.click(edit_text_if_not_just_dropped);\r\n    }\r\n\r\n    setupGroupDragging(rect, shared_state, just_dropped_obj, center=false) {\r\n        rect.draggy(); // setup dragging on the rect\r\n        rect.on('mousedown', (e) => {\r\n            e.stopPropagation(); // don't pan when moving a node\r\n        });\r\n        just_dropped_obj.just_dropped = false;\r\n        rect.on('dragstart', (e) => {\r\n            var start_x = this.group.x();\r\n            var start_y = this.group.y();\r\n            document.activeElement.blur();\r\n            shared_state.draggedNode = {\r\n                id: this.id,\r\n                text: this.getShortText(),\r\n                longText: this.getLongText(),\r\n                resetPos: () => {\r\n                    this.group.move(start_x, start_y);\r\n                    this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n                },\r\n                node: this\r\n            };\r\n\r\n            this.dropShadow.translate(5, 5)\r\n            this.dropShadow.addClass('visible')\r\n            \r\n            rect.off('dragmove');\r\n            rect.on('dragmove', (e) => {\r\n                this.group.move(start_x + e.detail.delta.movedX, start_y + e.detail.delta.movedY);\r\n                if (center) {\r\n                    this.text.center(0.5 * this.rect.width(), 0.5 * this.rect.height());\r\n                } else {\r\n                    rect.x(0);\r\n                    rect.y(0);\r\n                }\r\n                this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n            });\r\n            rect.off('dragend');\r\n            rect.on('dragend', (e) => {\r\n                // prevent the textarea showing\r\n                // unless the drag amount was zero or just a tiny accidental drag\r\n                var x_diff = (this.group.x() - start_x);\r\n                var y_diff = (this.group.y() - start_y);\r\n                var nudge = 10;\r\n                if (x_diff > nudge || x_diff < -nudge || y_diff > nudge || y_diff < -nudge) {\r\n                    just_dropped_obj.just_dropped = true;\r\n                    setTimeout(() => { just_dropped_obj.just_dropped = false; }, 0.05);\r\n                }\r\n                shared_state.draggedNode = false;\r\n\r\n                this.dropShadow.translate(0, 0)\r\n                this.dropShadow.removeClass('visible')\r\n            });\r\n        });\r\n    }\r\n\r\n    // click/drag events on the arrow hitbox should start the arrow creation process\r\n    setupArrowHitbox(arrow_hitbox, mouse_follower) {\r\n        arrow_hitbox.on('mousemove', () => {\r\n            if (!mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.update_source(this.group);\r\n            }\r\n        });\r\n        arrow_hitbox.on('mouseleave', () => {\r\n            if (!mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.hide();\r\n            }\r\n        });\r\n        arrow_hitbox.on('mousedown', (e) => {\r\n            mouse_follower.start_arrow(this);\r\n            e.stopPropagation(); // don't pan when dragging an arrow\r\n        });\r\n    }\r\n\r\n    updateShortText(newShortText) {\r\n        this.shortText = newShortText.replace(/[\\r\\n\\v]+/g, '');\r\n        \r\n        const CHARS_PER_LINE = 21;\r\n        var formattedText = this.splitIntoLines(CHARS_PER_LINE, this.shortText);\r\n\r\n        this.text.text(formattedText.join(\"\\n\"));\r\n        this.resizeRect(formattedText.length);\r\n    }\r\n\r\n    updateLongText(newLongText) {\r\n        this.longText = newLongText;\r\n    }\r\n\r\n    splitIntoLines(charsPerLine, text) {\r\n        var formattedText = [];\r\n        var line = \"\";\r\n        text.split(\" \").forEach(word => {\r\n            var segments = [];\r\n            if (word.length > charsPerLine) {\r\n                for (let i = 0; i < word.length; i += charsPerLine - 1) {\r\n                    if (segments.length > 0) {\r\n                        segments[segments.length - 1] += \"-\"; // append a '-' onto the end of unfinished strings\r\n                    }\r\n                    segments.push(word.substring(i, Math.min(i + charsPerLine, word.length)));\r\n                }\r\n            }\r\n            else {\r\n                segments = [word];\r\n            }\r\n            segments.forEach(segment => {\r\n                if ((line + segment).length < charsPerLine) {\r\n                    var space = line.length > 0 ? \" \" : \"\";\r\n                    line += space + segment;\r\n                }\r\n                else {\r\n                    formattedText.push(line);\r\n                    line = segment;\r\n                }\r\n            });\r\n        });\r\n        formattedText.push(line);\r\n        return formattedText;\r\n    }\r\n\r\n    // resize the rect so that the text fits on it\r\n    resizeRect(numLinesOfText) {\r\n        this.rect.width(200);\r\n        const rectHeight = numLinesOfText * 21 + 20\r\n        this.rect.height(rectHeight);\r\n        this.text.center(0.5 * this.rect.width(), 0.5 * this.rect.height());\r\n        this.dropShadow.height(rectHeight)\r\n        this.editRect.height(rectHeight - 10)\r\n\r\n        this.arrow_hitbox.size(this.rect.width() + ARROW_HITBOX_MARGIN * 2, this.rect.height() + ARROW_HITBOX_MARGIN * 2);\r\n\r\n        this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n    }\r\n\r\n    getShortText() {\r\n        return this.shortText;\r\n    }\r\n\r\n    getLongText() {\r\n        return this.longText;\r\n    }\r\n\r\n    showAnnotatedOrder() {\r\n        if (this.annotatedOrder) {\r\n            this.annotatedOrderText = this.group.text(this.annotatedOrder.toString())\r\n        }\r\n    }\r\n\r\n    editText(shared_state, delete_if_empty_text = false) {\r\n        document.activeElement.blur(); // remove focus from everything\r\n\r\n        if (shared_state.orderAnnotate) {\r\n            if (this.annotatedOrder) {\r\n                shared_state.annotatedNumbers = shared_state.annotatedNumbers.filter(num => num !== this.annotatedOrder)\r\n                this.annotatedOrder = undefined\r\n                this.annotatedOrderText.remove()\r\n            } else {\r\n                const num = shared_state.getNextAnnotateNum()\r\n                this.annotatedOrder = num\r\n                shared_state.annotatedNumbers.push(num)\r\n                this.showAnnotatedOrder()\r\n            }\r\n            return\r\n        }\r\n\r\n        this.zoomCanvasTo(1, {x: this.group.cx(), y: this.group.cy()}, () => {\r\n            var textarea = document.querySelector('#nodeedit');\r\n            textarea.value = this.getShortText();\r\n\r\n            const preEditText = this.getShortText()\r\n\r\n            var screen_coords = this.rect.getScreenCoords();\r\n            textarea.style.left = screen_coords.x + \"px\";\r\n            textarea.style.top = screen_coords.y + \"px\";\r\n            textarea.style.display = \"inline-block\";\r\n            textarea.focus();\r\n\r\n            textarea.style.width = \"180px\";\r\n            textarea.style.height = 'auto';\r\n            textarea.style.height = (textarea.scrollHeight) + 'px';\r\n\r\n            this.text.hide();\r\n\r\n            this.editRect.addClass('visible')\r\n            this.setHoverer('editNodeDirectly', true)\r\n\r\n            var save_changes = () => {\r\n                this.updateShortText(textarea.value);\r\n                shared_state.updateDocShortText(this.id, this.getShortText());\r\n            };\r\n            var save_and_hide = () => {\r\n                save_changes();\r\n                textarea.style.display = \"none\";\r\n                if (delete_if_empty_text && (!this.text.text() || this.text.text() === \"\")) {\r\n                    this.delete(shared_state);\r\n                }\r\n                this.text.show();\r\n                this.updateShortText(this.shortText);\r\n\r\n                if (this.getShortText() !== preEditText) {\r\n                    shared_state.logger.logEvent({'type': 'node_edit_short_text', 'id': this.id, 'text': this.shortText});\r\n                }\r\n\r\n                this.editRect.removeClass('visible')\r\n                this.setHoverer('editNodeDirectly', false)\r\n            };\r\n            textarea.onblur = save_and_hide;\r\n            textarea.onkeyup = (e) => {\r\n                if (e.key === \"Escape\" || e.key === \"Esc\" || e.key === \"Enter\") {\r\n                    e.preventDefault();\r\n                    document.activeElement.blur();\r\n                } else {\r\n                    save_changes();\r\n                }\r\n            };\r\n        })\r\n    }\r\n\r\n    delete(shared_state) {\r\n        shared_state.removeGraphNode(this.id);\r\n        \r\n        // remove from the list of nodes (used for saving)\r\n        const nodesList = this.getNodesList()\r\n        var index = nodesList.indexOf(this);\r\n        if (index !== -1) {\r\n            nodesList.splice(index, 1)\r\n        } else {\r\n            console.log('node not found in this.nodesList when deleting');\r\n        }        \r\n\r\n        this.group.remove();\r\n\r\n        // delete arrows\r\n        this.group.node.dispatchEvent(new CustomEvent(\"deletenode\"));\r\n\r\n        shared_state.logger.logEvent({'type': 'node_delete', 'id': this.id});\r\n    }\r\n}\r\n\r\nexport default GraphNode;","import { DropTarget } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../dragtypes\";\r\n\r\nconst graphTarget = {\r\n    canDrop(props, monitor) {\r\n        const item = monitor.getItem()\r\n        return item.node.type !== 'section' && !item.node.findDescendant(node => node.type === 'link')\r\n    },\r\n\r\n    drop(props, monitor, component) {\r\n        return { droppedOnGraph: true, position: monitor.getClientOffset() }\r\n    },\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDropTarget: connect.dropTarget(),\r\n        // You can ask the monitor about the current drag state:\r\n        itemType: monitor.getItemType(),\r\n    }\r\n}\r\n\r\nexport default DropTarget(ItemTypes.BLOCK, graphTarget, collect)","import React from 'react';\r\nimport './GraphPane.css';\r\nimport SVG from 'svg.js';\r\nimport 'svg.panzoom.js';\r\nimport 'svg.draggy.js';\r\nimport './svg.connectable.js';\r\nimport MouseFollower from './MouseFollower.js';\r\nimport GraphNode from './GraphNode.js';\r\nimport DropifyGraphPane from './DropifyGraphPane.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nclass GraphPane extends React.Component {\r\n    componentDidMount() {\r\n        this.props.sharedState.getSavedGraph((json) => {\r\n            this.nodesList = [];\r\n\r\n            this.props.sharedState.graphPane = this;\r\n\r\n            this.$el = document.querySelector(\"#graph\")\r\n\r\n            var svg = new SVG(this.$el).size(\"100%\", \"100%\").panZoom({ zoomMin: 0.2, zoomMax: 1, zoomFactor: 0.1 }); // just pan, no zoom\r\n            this.svg = svg\r\n            this.zoomCanvasTo = (level, pos, cb) => {\r\n                if (Math.abs(svg.zoom() - level) < 0.01) { // it doesn't zoom to the exact number\r\n                    if (cb) { cb() }\r\n                } else {\r\n                    const runner = svg.animate({duration: 100, ease: '>'})\r\n                        .zoom(level, pos)\r\n                    \r\n                    if (cb) { runner.after(cb) }\r\n                }\r\n            }\r\n\r\n            svg.zoom(1)\r\n\r\n            SVG.extend(SVG.Element, {\r\n                getScreenCoords: function (zone) {\r\n                    var root_point = this.doc().node.getBoundingClientRect()\r\n                    var point = this.node.getBoundingClientRect()\r\n\r\n                    if (zone === 'centre') {\r\n                        return {\r\n                            x: (point.left + point.right) / 2 - root_point.left,\r\n                            y: (point.top + point.bottom) / 2 - root_point.top\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            x: point.x - root_point.left,\r\n                            y: point.y - root_point.top\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n            var links = svg.group();\r\n            var markers = svg.group();\r\n            var nodes = svg.group();\r\n            this.nodesSvgGroup = nodes\r\n\r\n            this.numTempNodes = 0\r\n\r\n            const json_connections = json ? json.connections : undefined\r\n            var mouse_follower = MouseFollower.fromJSON(json_connections, this.props.sharedState, svg, links, markers, links);\r\n            this.mouse_follower = mouse_follower\r\n\r\n            // add new nodes on mouse click\r\n            svg.on('dblclick', (e) => {\r\n                // only clicks on background and not when dragging\r\n                if (e.target !== svg.node && !mouse_follower.drawing_arrow_from) {\r\n                    return;\r\n                }\r\n\r\n                var x = e.clientX\r\n                if (x + 200 > window.innerWidth) {\r\n                    x = window.innerWidth - 200\r\n                }\r\n                var y = e.clientY\r\n                if (y + 60 > window.innerHeight) {\r\n                    y = window.innerHeight - 60\r\n                }\r\n\r\n                this.addNodeAtScreenLocation(svg, nodes, mouse_follower, \"\", x, y, true);\r\n            });\r\n\r\n            this.setupTextDropping(svg, nodes, mouse_follower);\r\n\r\n            const blurActiveElement = (e) => {\r\n                document.activeElement.blur();\r\n            }\r\n            svg.on('panStart', blurActiveElement)\r\n            svg.on('zoom', blurActiveElement)\r\n\r\n            var textarea = document.querySelector('#nodeedit');\r\n            textarea.setAttribute('style', 'height:' + (textarea.scrollHeight) + 'px;overflow-y:hidden;');\r\n            textarea.addEventListener(\"input\", (e) => {\r\n                textarea.style.height = 'auto';\r\n                textarea.style.height = (textarea.scrollHeight) + 'px';\r\n            });\r\n\r\n            this.props.sharedState.addGraphNode = (text, x, y, doNotDeleteIfEmptyText) => {\r\n                if (x + 200 > window.innerWidth) {\r\n                    x = window.innerWidth - 200\r\n                }\r\n                if (y + 60 > window.innerHeight) {\r\n                    y = window.innerHeight - 60\r\n                }\r\n                return this.addNodeAtScreenLocation(svg, nodes, mouse_follower, text, x, y, true, doNotDeleteIfEmptyText)\r\n            }\r\n            if (json && json.nodes) {\r\n                this.loadNodesFromJSON(json.nodes, mouse_follower, nodes)\r\n            }\r\n\r\n            this.getNodeById = this.getNodeById.bind(this)\r\n            mouse_follower.draw_loaded_arrows(this.getNodeById)\r\n\r\n            if (this.nodesList.length === 0) {\r\n                this.addNoNodesIndicator(svg, nodes, mouse_follower);\r\n            }\r\n        })\r\n    }\r\n\r\n    getNodeById(id) {\r\n        return this.nodesList.find(node => node.id.toString() === id.toString())\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            nodes: this.nodesList.map(node => node.toJSON()),\r\n            connections: this.mouse_follower.toJSON()\r\n        }\r\n    }\r\n\r\n    loadNodesFromJSON(json, mouse_follower, nodes) {\r\n        this.nodesList = json.map(nodeJSON => GraphNode.fromJSON(nodeJSON, nodes, mouse_follower, this.props.sharedState, () => this.nodesList, this.zoomCanvasTo))\r\n        // temp\r\n        console.log(\"num nodes: \" + this.nodesList.length)\r\n    }\r\n\r\n    explodeNodes() {\r\n        const factor = 0.1\r\n        this.nodesList.forEach((node) => {\r\n            node.group.move(\r\n                node.group.x() + node.group.x() * factor, \r\n                node.group.y() + node.group.y() * factor\r\n            )\r\n            node.group.node.dispatchEvent(new CustomEvent(\"dragmove\")) // update arrows\r\n        })\r\n    }\r\n\r\n    addTempNode(id) {\r\n        // this is to visualise nodes that were created then deleted, and are now being viewed in the log explore timeline\r\n        var node = this.addNodeAtScreenLocation(this.svg, this.nodesSvgGroup, this.mouse_follower, \"?\", 0, this.numTempNodes * 150, false, true, id, true)\r\n        this.numTempNodes++\r\n\r\n        return node\r\n    }\r\n\r\n    addNoNodesIndicator(svg, nodes, mouse_follower) {\r\n        this.noNodesIndicator = svg.text(\"No nodes created\").addClass(\"indicator-text\").attr({x: \"40%\", y: \"45%\"});\r\n        this.noNodesIndicator.on('dblclick', (e) => {\r\n            this.addNodeAtScreenLocation(svg, nodes, mouse_follower, \"\", e.clientX, e.clientY, true);\r\n        });\r\n    }\r\n\r\n    setupTextDropping(svg, nodes, mouse_follower) {\r\n        this.$el.addEventListener(\"dragover\", (e) => {\r\n            e.preventDefault();\r\n        });\r\n\r\n        this.$el.addEventListener(\"drop\", (e) => {\r\n            e.preventDefault();\r\n            if (!e.dataTransfer.types.includes(\"text/plain\")) {\r\n                return // the dropped thing is probably a whole block, which is handled by React-DnD in DragifyGraph.js\r\n            }\r\n            \r\n            var data = e.dataTransfer.getData(\"Text\");\r\n\r\n            if (data.includes('\\n')) {\r\n                toast.error('You can\\'t add multiple paragraphs to the graph at once')\r\n                return\r\n            }\r\n\r\n            if (!this.props.sharedState.canAddLinkAtSelection()) {\r\n                toast.error('You can\\'t add the same node to the graph twice!')\r\n                return\r\n            }\r\n\r\n            var x = e.clientX\r\n            if (x + 200 > window.innerWidth) {\r\n                x = window.innerWidth - 200\r\n            }\r\n            var y = e.clientY\r\n            if (y + 60 > window.innerHeight) {\r\n                y = window.innerHeight - 60\r\n            }\r\n            var node = this.addNodeAtScreenLocation(svg, nodes, mouse_follower, data, x, y, false);\r\n            this.props.sharedState.addLinkAtSelection(node.id, node);\r\n            this.props.sharedState.logger.logEvent({'type': 'node_create_from_doc', 'node_id': node.id, 'text': data});\r\n            document.activeElement.blur();\r\n        });\r\n    }\r\n\r\n    addNodeAtScreenLocation(svg, nodes, mouse_follower, text, x, y, focus_text_area, doNotDeleteIfEmptyText=false, id=undefined, isSvgCoords=false) {\r\n        var point = svg.point(x, y);\r\n        if (isSvgCoords) { // don't convert screen > svg coords\r\n            point = {x: x, y: y}\r\n        }\r\n        const params = {\r\n            shortText: text,\r\n            longText: \"\", \r\n            x: point.x,\r\n            y: point.y,\r\n            width: 200,\r\n            height: 42,\r\n            isOnGraph: false,\r\n            id: id, // set automatically\r\n            doNotDeleteIfEmptyText: doNotDeleteIfEmptyText\r\n        }\r\n        var node = new GraphNode(params, nodes, mouse_follower, this.props.sharedState, focus_text_area, () => this.nodesList, this.zoomCanvasTo);\r\n        this.nodesList.push(node);\r\n\r\n        if (this.noNodesIndicator) {\r\n            this.noNodesIndicator.hide();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.$el.somePlugin('destroy');\r\n    }\r\n\r\n    render() {\r\n        return this.props.connectDropTarget(\r\n            <div id=\"graph\" className=\"pane\" ref={el => this.el = el}>\r\n                <textarea id='nodeedit'></textarea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DropifyGraphPane(GraphPane);","import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('writeReasonDb');\r\ndb.version(3).stores({ projects: '++id,name' }); // NB: this is just the *indexed* properties, not all of them!\r\n\r\nexport default db;","import db from './db.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst EVENT_TYPES_WHICH_DO_NOT_MAKE_STATE_DIRTY = [\r\n    'session_start',\r\n    'document_content_detailed',\r\n    'document_content_markdown',\r\n]\r\n\r\nexport default class Logger {\r\n    shouldLogToConsole = false;\r\n\r\n    constructor(db_id, params) {\r\n        this.db_id = db_id;\r\n        this.conditions = params;\r\n        this.logToConsole(\"Logging begin, db_id \" + db_id + \"\\nParams \" + JSON.stringify(params, null, 1));\r\n\r\n        // used for tracking whether changes have been made since last save\r\n        // obviously, does not track events which are not logged, like typing in the document\r\n        this.stateIsDirty = false\r\n\r\n        this.logEvent({'type': 'session_start'})\r\n    }\r\n\r\n    logEvent(event) {\r\n        if (!EVENT_TYPES_WHICH_DO_NOT_MAKE_STATE_DIRTY.includes(event.type)) {\r\n            this.stateIsDirty = true\r\n        }\r\n\r\n        if (event.type === 'save') {\r\n            this.stateIsDirty = false\r\n        }\r\n\r\n        this.getLog(log => {\r\n            if (log.events === undefined) {\r\n                log.events = {}\r\n            }\r\n    \r\n            if (log.events[event.type] === undefined) {\r\n                log.events[event.type] = []\r\n            }\r\n            event.timestamp = new Date()\r\n            log.events[event.type].push(event)\r\n            this.setLog(log)\r\n\r\n            this.logToConsole(\"Logging event: \" + JSON.stringify(event))\r\n        })\r\n    }\r\n\r\n    // keep a history of the save states so that we can look back at how the project developed\r\n    logSaveState(save, forceLog=false) {\r\n        this.getLog(log => {\r\n            if (log.saves === undefined) {\r\n                log.saves = []\r\n            }\r\n\r\n            // don't store this save if we have stored a save <3 minutes ago\r\n            // to prevent multiple clicks of the save button taking up lots of space\r\n            const timestamp = new Date()\r\n            const THREE_MINUTES = 3 * 60 * 1000; // ms\r\n            if (forceLog || !log.saves.find(save => (timestamp - save.timestamp < THREE_MINUTES))) {\r\n                log.saves.push({\r\n                    timestamp: timestamp,\r\n                    ...save,\r\n                })\r\n                this.setLog(log)\r\n            }\r\n        })\r\n    }\r\n\r\n    getLog(callback) {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then((project) => {\r\n                callback(project.log ? project.log : {})\r\n            })\r\n    }\r\n\r\n    setLog(log) {\r\n        db.table('projects')\r\n            .update(this.db_id, { log: log })\r\n            .catch(err => {\r\n                toast.error('Logging error: ' + err)\r\n                console.log('Logging error: ' + err)\r\n            })\r\n    }\r\n\r\n    logToConsole(msg) {\r\n        if (this.shouldLogToConsole) {\r\n            console.log(msg);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Text } from 'slate';\r\nimport Html from 'slate-html-serializer'\r\nimport Logger from './logging'\r\nimport db from './db.js'\r\nimport { toast } from 'react-toastify';\r\nimport { pdf, Document, Page, Text as PdfText, StyleSheet, Font } from '@react-pdf/renderer';\r\nimport CrimsonText from './assets/CrimsonText-Regular.ttf'\r\nimport CrimsonTextBold from './assets/CrimsonText-Bold.ttf'\r\n\r\n\r\nexport default class SharedState {\r\n    constructor(db_id, params) {\r\n        if (!params.logExplore) {\r\n            this.logger = new Logger(db_id, params)\r\n        } else {\r\n            this.logger = {logEvent: (x, y) => {} }\r\n        }\r\n        this.condition = params.condition;\r\n        this.params = params;\r\n        \r\n        this.node_id_counter = 0;\r\n        this.slate_id_counter = 10\r\n        this.map = {};\r\n        this.map_recycle_bin = {};\r\n        this.db_id = db_id\r\n        this.orderAnnotate = false\r\n        this.annotatedNumbers = []\r\n\r\n        // this.editor_ref and this.graphPane set in the editor and graphpane\r\n        this.editor_ref = undefined;\r\n        this.graphPane = undefined;\r\n\r\n        // log entire document content every 60 seconds\r\n        if (!this.params.logExplore) {\r\n            this.intervalLogger = window.setInterval(() => {\r\n                this.logger.logEvent({'type': 'document_content_markdown', 'content': this.getArgumentMarkdown()});\r\n            }, 60000);\r\n        }\r\n        \r\n        this.downloadExperimentData = this.downloadExperimentData.bind(this);\r\n        this.editorHasLoaded = this.editorHasLoaded.bind(this);\r\n        this.save = this.save.bind(this)\r\n        this.mapToJSON = this.mapToJSON.bind(this)\r\n        this.exportPDF = this.exportPDF.bind(this)\r\n        this.exploreNext = this.exploreNext.bind(this)\r\n        this.explorePrev = this.explorePrev.bind(this)\r\n        this.exploreLog = this.exploreLog.bind(this)\r\n        this.makeNodeReport = this.makeNodeReport.bind(this)\r\n        this.getNextAnnotateNum = this.getNextAnnotateNum.bind(this)\r\n        this.exportAnnotatedLog = this.exportAnnotatedLog.bind(this)\r\n        this.explodeNodes = this.explodeNodes.bind(this)\r\n\r\n        // when the tab is closed, if the document has been edited, warn before closing\r\n        window.onbeforeunload = (e) => {\r\n            if (process.env.NODE_ENV !== 'development' && this.getStateIsDirty()) { // disable in development for webpack hot reloading\r\n                e.preventDefault()\r\n                e.returnValue = '' // for Chrome\r\n            }\r\n        }\r\n    }\r\n\r\n    exportAnnotatedLog() {\r\n        const save = {\r\n            map: this.mapToJSON(),\r\n            node_id_counter: this.node_id_counter,\r\n            doc_value: this.getEditor().getValue().toJSON(),\r\n            graph_value: this.graphPane.toJSON(),\r\n        }\r\n        this.downloadJSON(save, this.params.logExplore.project.filename + \"__order_annotated.json\")\r\n    }\r\n\r\n    getNextAnnotateNum() {\r\n        if (this.annotatedNumbers.length === 0) {\r\n            return 1\r\n        } else {\r\n            // check for a gap\r\n            this.annotatedNumbers.sort((a, b) => a - b)\r\n            var prev = 0\r\n            this.annotatedNumbers.forEach(annotatedNum => {\r\n                if (prev + 1 !== annotatedNum) {\r\n                    return prev + 1\r\n                }\r\n                prev = annotatedNum\r\n            })\r\n            \r\n            // if no gaps\r\n            return this.annotatedNumbers[this.annotatedNumbers.length - 1] + 1\r\n        }\r\n    }\r\n\r\n    viewFactSheet() {\r\n        const scenario = localStorage.getItem('scenario')\r\n        if (!scenario) {\r\n            toast.error('Fact sheet not found. Please re-open Write Reason using the link in the email we sent you.')\r\n            return\r\n        }\r\n\r\n        const factSheetURL = scenario + '_factsheet.pdf'\r\n        window.open(factSheetURL, '_blank')  // open in new tab\r\n    }\r\n\r\n    // called by editor once the database saved value has been set as the document.value\r\n    editorHasLoaded() {\r\n        this.getProjectThen(project => {\r\n            this.node_id_counter = project.node_id_counter ? project.node_id_counter : 0\r\n            this.map = project.map ? this.mapFromJSON(project.map) : {}\r\n            this.getEditor().mapHasLoaded()\r\n            this.projectName = project.name\r\n        })\r\n        \r\n        this.lastSavedDocumentState = this.getEditor().getValue().document // editor is definitely not dirty right now\r\n    }\r\n\r\n    downloadThisLog() {\r\n        const save = {\r\n            map: this.mapToJSON(),\r\n            node_id_counter: this.node_id_counter,\r\n            doc_value: this.getEditor().getValue().toJSON(),\r\n            graph_value: this.graphPane.toJSON(),\r\n        }\r\n        this.params.logExplore.project.log.saves.push(save)\r\n        this.downloadJSON({projects: [{\r\n            map: this.mapToJSON(),\r\n            node_id_counter: this.node_id_counter,\r\n            doc_value: this.getEditor().getValue().toJSON(),\r\n            graph_value: this.graphPane.toJSON(),\r\n            log: this.params.logExplore.project.log,\r\n        }]}, \"x.json\")\r\n    }\r\n\r\n    save(cb=undefined, forceLog=false) {\r\n        const changes = {\r\n            map: this.mapToJSON(),\r\n            node_id_counter: this.node_id_counter,\r\n            doc_value: this.getEditor().getValue().toJSON(),\r\n            graph_value: this.graphPane.toJSON(),\r\n        }\r\n        db.table('projects')\r\n            .update(this.db_id, changes)\r\n            .then((idExists) => {\r\n                if (!idExists) {\r\n                    const message = 'Save error: file with ID ' + this.db_id.toString() + ' does not exist!'\r\n                    console.log(message)\r\n                    toast.error(message)\r\n                } else {\r\n                    toast.info('Changes saved!')\r\n                    this.lastSavedDocumentState = this.getEditor().getValue().document\r\n                    this.logger.logSaveState(changes, forceLog)\r\n                }\r\n            }).catch(err => {\r\n                toast.error('Save error: ' + err.toString())\r\n            })\r\n            \r\n        this.logger.logEvent({'type': 'save'})\r\n\r\n        if (cb) {\r\n            cb()\r\n        }\r\n    }\r\n\r\n    getStateIsDirty() {\r\n        return this.logger.stateIsDirty || (\r\n            this.getEditor() && this.getEditor().getValue() && this.getEditor().getValue().document !== this.lastSavedDocumentState\r\n        ) \r\n    }\r\n\r\n    explorePrev() {\r\n        if (this.params.logExplore.saveIndex === 0) {\r\n            return\r\n        }\r\n        \r\n        this.exploreLog(this.params.logExplore.project, this.params.logExplore.saveIndex - 1)\r\n    }\r\n\r\n    exploreNext() {\r\n        if (this.params.logExplore.saveIndex === this.params.logExplore.project.log.saves.length - 1) {\r\n            return\r\n        }\r\n\r\n        this.exploreLog(this.params.logExplore.project, this.params.logExplore.saveIndex + 1)\r\n    }\r\n\r\n    exploreLog(project, saveIndex) {\r\n        const params = { condition: 'graph', logExplore: {project: project, saveIndex: saveIndex}, transitionToEditor: this.params.transitionToEditor }\r\n        const sharedState = new SharedState(-1, params)\r\n        this.params.transitionToEditor(sharedState, true)\r\n    }\r\n\r\n    makeNodeReport() {\r\n        const changes = {\r\n            map: this.mapToJSON(),\r\n            node_id_counter: this.node_id_counter,\r\n            doc_value: this.getEditor().getValue().toJSON(),\r\n            graph_value: this.graphPane.toJSON(),\r\n        }\r\n        this.downloadJSON(changes, this.params.logExplore.project.filename + \"_ANNOTATED.json\")\r\n\r\n        const nodeReport = {linkedTexts: [], unlinkedTexts: []}\r\n        const value = this.getEditor().getValue()\r\n        value.document.getBlocks().forEach(block => {\r\n            if (block.type === 'body' || block.type === 'link' || block.type === 'section') {\r\n                nodeReport.linkedTexts.push(block.text)\r\n            } else {\r\n                block.nodes.forEach(node => {\r\n                    if (!node.text) {\r\n                        return\r\n                    }\r\n                    if (node.type === 'link') {\r\n                        nodeReport.linkedTexts.push(node.text)\r\n                    } else {\r\n                        nodeReport.unlinkedTexts.push(node.text)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        nodeReport.linked = nodeReport.linkedTexts.join('\\n')\r\n        nodeReport.unlinked = nodeReport.unlinkedTexts.join('\\n')\r\n        \r\n        nodeReport.linkedCharsProportion = nodeReport.linked.length / (nodeReport.linked.length + nodeReport.unlinked.length)\r\n        \r\n        const countWords = (str) => str.trim().split(/\\s+/).length\r\n        nodeReport.linkedWords = countWords(nodeReport.linked)\r\n        nodeReport.unlinkedWords = countWords(nodeReport.unlinked)\r\n        nodeReport.linkedWordProportion = nodeReport.linkedWords / (nodeReport.linkedWords + nodeReport.unlinkedWords)\r\n\r\n        nodeReport.rawValue = value\r\n\r\n        var nodeReports = localStorage.getItem('nodeReports') ? JSON.parse(localStorage.getItem('nodeReports')) : {}\r\n        nodeReports[this.params.logExplore.project.filename] = nodeReport\r\n        localStorage.setItem('nodeReports', JSON.stringify(nodeReports))\r\n    }\r\n\r\n    getProjectThen(cb) {\r\n        if (this.params.logExplore) {\r\n            const logExplore = this.params.logExplore\r\n            cb(logExplore.project.log.saves[logExplore.saveIndex])\r\n        } else {\r\n            db.table('projects')\r\n                .get(this.db_id)\r\n                .then(project => {\r\n                    cb(project)\r\n                })\r\n        }\r\n    }\r\n\r\n    getSavedDocValue = async function(onDataLoad) {\r\n        this.getProjectThen(project => {\r\n            onDataLoad(project.doc_value)\r\n        })\r\n    }\r\n\r\n    getSavedGraph = async function(onDataLoad) {\r\n        this.getProjectThen(project => {\r\n            onDataLoad(project.graph_value)\r\n        })\r\n    }\r\n\r\n    mapToJSON() {\r\n        var mapJson = {}\r\n        const document = this.getEditor().value.document\r\n        for (const id in this.map) {\r\n            let doc_nodes = {};\r\n            ['section', 'long', 'short'].forEach(part => {\r\n                const docNodeObjects = this.getDocNodes(id)\r\n                if (docNodeObjects && docNodeObjects[part]) {\r\n                    const path = document.getPath(docNodeObjects[part])\r\n                    if (path) {\r\n                        doc_nodes[part] = path.toArray()\r\n                    }\r\n                } \r\n            })\r\n\r\n            mapJson[id] = {\r\n                graph_node: this.getGraphNode(id) ? this.getGraphNode(id).id : undefined,\r\n                doc_nodes: doc_nodes\r\n            }\r\n        }\r\n\r\n        return mapJson\r\n    }\r\n\r\n    mapFromJSON(json) {\r\n        this.map = {}\r\n        for (const id in json) {\r\n            if (json[id].graph_node) {\r\n                const graphNode = this.graphPane.getNodeById(id)\r\n                if (graphNode) {\r\n                    this.addGraphMapping(id, graphNode)\r\n                } else {\r\n                    toast.error(\"Error when loading: could not find graph node with ID \" + id)\r\n                }\r\n            }\r\n\r\n            if (json[id].doc_nodes) {\r\n                for (const part in json[id].doc_nodes) {\r\n                    const path = json[id].doc_nodes[part]\r\n                    \r\n                    const document = this.getEditor().value.document\r\n                    if (document.hasNode(path)) {\r\n                        this.setLinkMapping(id, document.getNode(path), part)\r\n                    } else {\r\n                        console.log(document);\r\n                        \r\n                        toast.error(\"Error when loading: could not find \" + part + \" with ID \" + id)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.map\r\n    }\r\n\r\n    downloadExperimentData() {\r\n        // save first to log the latest document version\r\n        this.save(() => {\r\n            db.table('projects')\r\n            .toArray(projects => {\r\n                const data = {\r\n                    timestamp: new Date(),\r\n                    preTaskSubmission: localStorage.getItem('preTaskSubmission'),\r\n                    projects: projects,\r\n                }\r\n                this.downloadJSON(data, 'Write Reason logs.json')\r\n                \r\n            }).catch(err => {\r\n                toast.error(\"Error downloading logs: \" + err)\r\n            })\r\n        }, true)\r\n    }\r\n\r\n    getArgumentHTML() {\r\n        const parentStyleIs = (node, styleToCheck) => {\r\n            const parent = this.getEditor().value.document.getParent(node.key)\r\n            return parent && parent.data.get(\"nodeStyle\") === styleToCheck\r\n        }\r\n\r\n        const RULES = [\r\n            {\r\n                serialize: (node, children) => {\r\n                    if ([\"block\", \"inline\"].includes(node.object)) {\r\n                        switch(node.type) {\r\n                            case 'paragraph':\r\n                            case '':\r\n                                return <p>{children}</p>\r\n\r\n                            case 'heading':\r\n                                return <h2>{children}</h2>\r\n                            \r\n                            case 'section':\r\n                                return <div>{children}</div>\r\n                            \r\n                            case 'body':\r\n                                if (parentStyleIs(node, \"Heading only\")) {\r\n                                    return <p></p>\r\n                                } else {\r\n                                    return <p>{children}</p>\r\n                                }\r\n\r\n                            case 'link':\r\n                                if (node.object === \"inline\") {\r\n                                    return <span>{children}</span>\r\n                                } else {\r\n                                    if (parentStyleIs(node, \"Body only\")) {\r\n                                        return <p></p>\r\n                                    } else {\r\n                                        return <h2>{children}</h2>\r\n                                    }\r\n                                }\r\n\r\n                            default:\r\n                                return undefined\r\n                        }\r\n                    } else if(node.object === 'string') {\r\n                        return node.text\r\n                    }\r\n                } \r\n            }\r\n        ]\r\n\r\n        const serializer = new Html({rules: RULES})\r\n        return serializer.serialize(this.getEditor().value)\r\n    }\r\n\r\n    downloadJSON(json, filename) {\r\n        const file = new Blob([JSON.stringify(json, null, 2)], {type: 'text/plain'})\r\n        this.downloadBlob(file, filename)\r\n    }\r\n\r\n    downloadBlob(blob, filename) {\r\n        const element = document.createElement(\"a\");\r\n        element.href = URL.createObjectURL(blob);\r\n        element.download = filename;\r\n        document.body.appendChild(element); // Required for this to work in FireFox\r\n        element.click();\r\n    }\r\n\r\n    exportPDF() {\r\n        this.logger.getLog(log => {\r\n            this.getReactPdfDocument().then(file => {      \r\n                this.downloadBlob(file, this.projectName + \".pdf\")\r\n            })\r\n        })\r\n    }\r\n\r\n    getReactPdfDocument() {\r\n        const markdown = this.getArgumentMarkdown()\r\n\r\n        Font.register({family: 'Crimson Text', fonts: [\r\n            {src: CrimsonText},\r\n            {src: CrimsonTextBold, fontWeight: 800}\r\n        ]})\r\n\r\n        const styles = StyleSheet.create({\r\n            page: {\r\n                padding: 80\r\n            },\r\n            text: {\r\n                fontFamily: \"Crimson Text\",\r\n                width: \"100%\",\r\n                fontSize: \"12pt\",\r\n                paddingBottom: 8,\r\n            },\r\n            heading: {\r\n                fontFamily: \"Crimson Text\",\r\n                textDecoration: \"underline\",\r\n                fontWeight: 800,\r\n                width: \"100%\",\r\n                fontSize: \"12pt\"\r\n            }\r\n        })\r\n\r\n        const document = (\r\n            <Document>\r\n                <Page style={styles.page}>\r\n                    {markdown.split('\\n').map(line => {                        \r\n                        if (line.startsWith('##')) { // markdown heading\r\n                            line = line.substring('##'.length)\r\n                            return <PdfText style={styles.heading}>{line}</PdfText>\r\n                        }\r\n\r\n                        return <PdfText style={styles.text}>{line}</PdfText>\r\n                        }\r\n                    )}\r\n                </Page>\r\n            </Document>\r\n        )\r\n        return pdf(document).toBlob()\r\n    }\r\n\r\n    getArgumentMarkdown() {\r\n        var output = this.getArgumentHTML()\r\n        \r\n        var tagReplacements = [\r\n            {regex: /<p>\\s*<\\/p>/g},  // special rule for removing empty paragraphs without inserting a newline\r\n\r\n            {regex: /<p>/g},\r\n            {regex: /<\\/p>/g, replace: \"\\n\\n\"},\r\n            {regex: /<div>/g},\r\n            {regex: /<\\/div>/g},\r\n            {regex: /<span>/g},\r\n            {regex: /<\\/span>/g},\r\n            {regex: /<h2>/g, replace: \"## \"},\r\n            {regex: /<\\/h2>/g, replace: \"\\n\"},\r\n        ]\r\n        tagReplacements.forEach((replacement) => {\r\n            output = output.replace(replacement.regex, replacement.replace ? replacement.replace : \"\")\r\n        })\r\n\r\n        // unescape HTML entities, eg replace '&amp' with '&'\r\n        var element = document.createElement(\"span\")\r\n        element.innerHTML = output\r\n        output = element.innerText\r\n\r\n        return output\r\n    }\r\n\r\n    finishCondition() {\r\n        window.onbeforeunload = undefined // remove the warning about closing the tab\r\n        window.clearInterval(this.intervalLogger)\r\n    }\r\n\r\n    getEditor() {\r\n        return this.editor_ref.current;\r\n    }\r\n\r\n    getNodeId() {\r\n        this.node_id_counter++;\r\n        return this.node_id_counter;\r\n    }\r\n\r\n    canAddLinkAtSelection() {\r\n        const value = this.getEditor().value;\r\n        const is_in_linked_block = value.blocks.some(block => (block.type === 'link' || block.type === 'section' || block.type === 'body'));\r\n        const is_in_linked_inline = value.inlines.some(inline => (inline.type === 'link'));\r\n        return !is_in_linked_block && !is_in_linked_inline;\r\n    }\r\n\r\n    addLinkAtSelection(id, graph_node) {\r\n        this.getEditor().wrapLinkAtSelection(id);\r\n        this.addGraphMapping(id, graph_node);\r\n    }\r\n\r\n    addGraphMapping(id, graph_node) {\r\n        graph_node.setIsOnGraph(true);\r\n        this.map[id] = { graph_node: graph_node };\r\n    }\r\n\r\n    setLinkMapping(id, doc_node, long_or_short) {\r\n        if (!this.map[id]) {\r\n            // uh oh, this should exist\r\n            this.map[id] = {}\r\n\r\n            // maybe the mapping was deleted and re-added with ctrl-Z\r\n            // if so, hopefully it's stored as recently deleted\r\n            this.checkRecycleBinForGraphNode(id)\r\n        }\r\n\r\n        if (this.map[id].doc_nodes === undefined) {\r\n            this.map[id].doc_nodes = {};\r\n        }\r\n        this.map[id].doc_nodes[long_or_short] = doc_node;\r\n    }\r\n\r\n    getGraphNodeAndDocNode(id) {\r\n        return this.map[id];\r\n    }\r\n\r\n    checkRecycleBinForGraphNode(id) {\r\n        if (!this.map[id]) {\r\n            this.map[id] = {}\r\n        }\r\n\r\n        if (this.map[id].graph_node) {\r\n            // no need to restore\r\n            return;\r\n        }\r\n\r\n        const prev_version = this.map_recycle_bin[id]\r\n        if (prev_version && prev_version.graph_node) {\r\n            console.log('restored from recycle');\r\n            \r\n            this.addGraphMapping(id, prev_version.graph_node)\r\n        }\r\n    }\r\n\r\n    getGraphNode(id) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            return map.graph_node;\r\n        }\r\n    }\r\n\r\n    removeGraphNode(id) {\r\n        if (this.getDocNodes(id)) {\r\n            Object.values(this.getDocNodes(id)).forEach(node => {\r\n                this.getEditor().removeGraphLink(node);\r\n            })\r\n            this.map[id] = undefined;\r\n        }\r\n    }\r\n\r\n    removeDocNode(id) {\r\n        var map = this.getGraphNodeAndDocNode(id)\r\n        if (map) {\r\n            if (map.graph_node) {\r\n                map.graph_node.setIsOnGraph(false);\r\n            }\r\n            \r\n            this.map_recycle_bin[id] = this.map[id]\r\n            this.map[id] = undefined\r\n        }\r\n    }\r\n\r\n    getDocNodes(id) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            return map.doc_nodes;\r\n        }\r\n    }\r\n\r\n    getDocNodeShortText(id) {\r\n        const docNode = this.getDocNodes(id);\r\n        if (docNode) {\r\n            return docNode.short;\r\n        }\r\n    }\r\n\r\n    getDocNodeLongText(id) {\r\n        const docNode = this.getDocNodes(id);\r\n        if (docNode) {\r\n            return docNode.long;\r\n        }\r\n    }\r\n\r\n    getDocNodeRef(id, long_or_short) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map && map.doc_link_node) {\r\n            return map.doc_link_node[long_or_short].current;\r\n        }\r\n    }\r\n\r\n    getAllDocNodeRefs(id) {\r\n        var docNodes = [];\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            [\"long\", \"short\", \"section\"].forEach(long_or_short => {\r\n                if (map.doc_link_node && map.doc_link_node[long_or_short]) {\r\n                    docNodes.push(map.doc_link_node[long_or_short].current)\r\n                }\r\n            })\r\n        }\r\n        return docNodes;\r\n    }\r\n\r\n    registerLinkNode(id, ref, long_or_short) {\r\n        if (this.map[id].doc_link_node === undefined) {\r\n            this.map[id].doc_link_node = {};\r\n        }\r\n        this.map[id].doc_link_node[long_or_short] = ref;\r\n    }\r\n\r\n    // check whether a graph node's doc node still exists\r\n    updateIsOnGraphStatus(id) {\r\n        var docNode = this.getDocNodeShortText(id);\r\n        if (!docNode) {\r\n            return false\r\n        }\r\n\r\n        if (docNode && !this.getEditor().value.document.hasNode(docNode.key)) {\r\n            // tell the graph node that there is no doc node any more, for whatever reason\r\n            this.removeDocNode(id)\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    updateDocShortText(id, newText) {\r\n        var docNode = this.getDocNodeShortText(id);\r\n        \r\n        if (docNode) {\r\n            var editor = this.getEditor();\r\n\r\n            if (this.updateIsOnGraphStatus(id)) {\r\n                // replace any text with newText\r\n                docNode.nodes.forEach(child => {\r\n                    editor.removeNodeByKey(child.key);\r\n                });\r\n                editor.insertNodeByKey(docNode.key, 0, Text.create({text: newText}));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGraphShortText(id, newText) {\r\n        var graphNode = this.getGraphNode(id);\r\n        \r\n        if (graphNode) {\r\n            graphNode.updateShortText(newText);            \r\n        }\r\n    }\r\n\r\n    updateGraphLongText(id, newText) {\r\n        var graphNode = this.getGraphNode(id);\r\n        \r\n        if (graphNode) {\r\n            graphNode.updateLongText(newText);            \r\n        }\r\n    }\r\n\r\n    explodeNodes() {\r\n        this.graphPane.explodeNodes()\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class LogLoadButton extends Component {\r\n    render() {\r\n        const src = process.env.PUBLIC_URL + '/thumbnails/' + this.props.participant_id + '.png'\r\n        return (\r\n            <div className='log-load-button' onClick={() => {this.props.loadLog(this.props.participant_id)}}>\r\n                <img src={src} className='log-load-img' alt={\"P\" + this.props.participant_id + \" map thumbnail\"}/>\r\n\r\n                <p>P{this.props.participant_id}</p>\r\n            </div>\r\n        );\r\n      }\r\n}","import React, { Component } from 'react';\r\nimport './LoadProject.css'\r\nimport db from '../../db.js'\r\nimport SharedState from '../../shared_state.js';\r\nimport LogLoadButton from './LogLoadButton.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class LoadProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: []\r\n        };\r\n        this.loadProject = this.loadProject.bind(this)\r\n        this.updateProjectsFromDb = this.updateProjectsFromDb.bind(this)\r\n        this.onDropLogFiles = this.onDropLogFiles.bind(this)\r\n        this.exploreLog = this.exploreLog.bind(this)\r\n        \r\n        document.title = \"Write Reason\"\r\n\r\n        // skip the project select screen if the autoload prop is supplied, instead load project with that id\r\n        if (process.env.NODE_ENV === 'development' && this.props.autoload) {\r\n            this.loadProject(this.props.autoload)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (process.env.NODE_ENV !== 'development' || !this.props.autoload) {\r\n            this.updateProjectsFromDb()\r\n        }\r\n    }\r\n\r\n    updateProjectsFromDb() {\r\n        // todo - only retrieve relevant rows from projects table?\r\n        db.table('projects')\r\n            .toArray(projects => {\r\n                this.setState({ projects })\r\n            }).catch(err => {\r\n                toast.error(\"Error when loading projects: \" + err)\r\n            })\r\n    }\r\n\r\n    loadProject(id) {\r\n        const params = { condition: 'graph' }\r\n        const sharedState = new SharedState(id, params)\r\n        this.props.transitionToEditor(sharedState)\r\n    }\r\n\r\n    deleteProject(id) {\r\n        if (window.confirm('Are you sure you want to delete this project? This cannot be undone.')) {\r\n            db.table('projects')\r\n                .delete(id)\r\n                .then(() => {\r\n                    this.updateProjectsFromDb()\r\n                })\r\n        }\r\n    }\r\n\r\n    onDropLogFiles(files) {\r\n        files.forEach((file) => {\r\n            const reader = new FileReader()\r\n      \r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                const stored = localStorage.getItem('logsToExplore') || JSON.stringify({logs: []})\r\n                const allLogs = JSON.parse(stored).logs\r\n\r\n                var newLog = JSON.parse(reader.result)\r\n                newLog.filename = file.name\r\n                newLog.projects.forEach(project => project.filename = file.name)\r\n                allLogs.push(newLog)\r\n                localStorage.setItem('logsToExplore', JSON.stringify({logs: allLogs}))\r\n            }\r\n            reader.readAsText(file)\r\n        })\r\n    }\r\n\r\n    exploreLog(project, saveIndex) {\r\n        const params = { condition: 'graph', logExplore: {project: project, saveIndex: saveIndex}, transitionToEditor: this.props.transitionToEditor }\r\n        const sharedState = new SharedState(-1, params)\r\n        this.props.transitionToEditor(sharedState)\r\n    }\r\n    \r\n    render() {\r\n        const participant_ids = [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 21, 22, 23, 25, 26]\r\n\r\n        const loadLog = (id) => {\r\n            import('../../assets/logs/' + id + '.json')\r\n            .then((log) => {\r\n                console.log(log)\r\n                this.exploreLog(log.projects[0], log.projects[0].log.saves.length - 1)\r\n            })\r\n            document.title = \"P\" + id + \" - Write Reason\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"load-project\">\r\n                <div className=\"logs-grid\">\r\n                    {\r\n                        participant_ids.map(id => <LogLoadButton participant_id={id} loadLog={loadLog} key={id}/>)\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n}","import React, { Component } from 'react';\r\nimport './ExperimentalControls.css';\r\n\r\nexport default class ExperimentControls extends Component {\r\n    render() {\r\n        if (this.props.sharedState.params.logExplore) {\r\n            return (\r\n                <div className=\"experiment-controls\">\r\n                    <button className='pure-button button-primary' onClick={this.props.backToMenu}>Back</button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class TimelineEntry extends Component {\r\n    render() {\r\n        let theClass = \"\"\r\n        if (this.props.log.type.includes('doc')) {\r\n            theClass = 'red'\r\n        }\r\n\r\n        if (this.props.log.type.includes('node')) {\r\n            theClass = 'blue'\r\n        }\r\n\r\n        if (this.props.log.type.includes('doc_create_from_node') || this.props.log.type.includes('doc_node_change_format')) {\r\n            theClass = 'yellow'\r\n        }\r\n\r\n        if (this.props.log.type.includes('arrow')) {\r\n            theClass = 'green'\r\n        }\r\n\r\n        if (this.props.isExploreHead) {\r\n            theClass += ' explore-head pure-button-active'\r\n        }\r\n\r\n        return (\r\n        <button className={theClass} onClick={this.props.onClick}>\r\n            {this.props.log.type} <i>{this.props.log.id && (this.props.log.id.toString().length < 4 ?\r\n                                                                this.props.log.id : \r\n                                                                this.props.log.source && this.props.log.source + \" → \" + this.props.log.target)}</i><br/>\r\n            {this.props.timestampFormatted}\r\n        </button>\r\n        );\r\n      }\r\n}","import React, { Component } from 'react'\r\nimport TimelineEntry from './TimelineEntry'\r\nimport { Block } from 'slate'\r\n\r\nexport default class LogExploreTimeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exploreHead: undefined\r\n        }\r\n\r\n        this.moveExploreHead = this.moveExploreHead.bind(this)\r\n        this.exploreEvent = this.exploreEvent.bind(this)\r\n        this.setDocValue = this.setDocValue.bind(this)\r\n        this.handleKeyDown = this.handleKeyDown.bind(this)\r\n    }\r\n\r\n    moveExploreHead(event) {\r\n        const graph = document.getElementById('graph')\r\n        graph.classList.add('timeline-explore-mode')\r\n\r\n        const orderedLogs = this.props.sharedState.params.logExplore.project.orderedLogs\r\n\r\n        if (!orderedLogs) {\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            exploreHead: event\r\n        })\r\n\r\n        var pastExploreHead = false\r\n        var lastDocChangeContent = \"empty\"\r\n        for (let i = 0; i < orderedLogs.length; i++) {\r\n            this.exploreEvent(orderedLogs[i], pastExploreHead)\r\n\r\n            if (orderedLogs[i].type === 'doc_change' && !pastExploreHead) {\r\n                lastDocChangeContent = orderedLogs[i].content\r\n            }\r\n\r\n            if (orderedLogs[i] === event) {\r\n                pastExploreHead = true\r\n                \r\n                this.setDocValue(lastDocChangeContent)\r\n            }\r\n        }\r\n    }\r\n\r\n    setDocValue(text) {\r\n        const editor = this.props.sharedState.getEditor()\r\n\r\n        editor.moveToRangeOfDocument()\r\n        editor.delete()\r\n        editor.moveToStartOfDocument()\r\n\r\n        const blockToInsert = Block.create({object: 'block', type: ''})\r\n        const section = editor.value.document.getParent(editor.value.startBlock.key);\r\n        const sectionParent = editor.value.document.getParent(section.key);     \r\n        if (sectionParent) {\r\n            const sectionIndex = sectionParent.nodes.indexOf(section);\r\n            editor.insertNodeByKey(sectionParent.key, sectionIndex, blockToInsert);\r\n            editor.moveBackward(1)\r\n        }\r\n\r\n        editor.insertText(text)\r\n    }\r\n\r\n    exploreEvent(event, hasNotBeenExplored) {\r\n        const graphPane = this.props.sharedState.graphPane\r\n        var node\r\n\r\n        const updateSvgElement = (element) => {\r\n            if (!element) {\r\n                return\r\n            }\r\n\r\n            if (hasNotBeenExplored) {\r\n                element.removeClass('has-been-explored')\r\n            } else {\r\n                element.addClass('has-been-explored')\r\n            }\r\n        }\r\n\r\n        switch (event.type) {\r\n            case 'node_create':\r\n                node = graphPane.getNodeById(event.id)\r\n                if (node) {\r\n                    updateSvgElement(node.rect)\r\n                } else if (!hasNotBeenExplored) {\r\n                    node = graphPane.addTempNode(event.id)\r\n                    if (node) {\r\n                        updateSvgElement(node.rect)\r\n                    }\r\n                }\r\n                break\r\n            \r\n            case 'node_delete':\r\n                if (!hasNotBeenExplored) {\r\n                    node = graphPane.getNodeById(event.id)\r\n                    if (node) {\r\n                        node.delete(this.props.sharedState)\r\n                        graphPane.numTempNodes--\r\n                    }\r\n                }\r\n                break\r\n            \r\n            case 'arrow_create':\r\n                const arrow = graphPane.mouse_follower.getConnectorObjectConnecting(event.source, event.target)\r\n                if (arrow) {\r\n                    updateSvgElement(arrow.line)\r\n                } else if (!hasNotBeenExplored) {\r\n                    graphPane.mouse_follower.addTempArrow(event.source, event.target, \"black\", event.id)\r\n                }\r\n                break\r\n            \r\n            case 'arrow_delete':\r\n                if (hasNotBeenExplored) {\r\n                    break\r\n                }\r\n\r\n                const sourceDestString = graphPane.mouse_follower.temp_arrows[event.id]\r\n                if (sourceDestString) {\r\n                    graphPane.mouse_follower.remove_arrow(graphPane.mouse_follower.connector_objs[sourceDestString], undefined)\r\n                    graphPane.mouse_follower.connector_objs[sourceDestString] = undefined\r\n                }\r\n                break\r\n\r\n            case 'node_edit_short_text':\r\n                node = graphPane.getNodeById(event.id)\r\n                if (node && !hasNotBeenExplored) {\r\n                    node.updateShortText(event.text)\r\n                }\r\n                break\r\n\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    handleKeyDown(e) {\r\n        var shift = undefined\r\n        if (e.keyCode === 39) { // right arrow\r\n            shift = 1\r\n        } else if (e.keyCode === 37) { // left arrow\r\n            shift = -1\r\n        }\r\n\r\n        if (shift !== undefined) {\r\n            const orderedLogs = this.props.sharedState.params.logExplore.project.orderedLogs\r\n            if (!orderedLogs) {\r\n                return\r\n            }\r\n\r\n            for (let i = 0; i < orderedLogs.length; i++) {\r\n                if (this.state.exploreHead === orderedLogs[i]) {\r\n                    if (i + shift > 0 && i + shift < orderedLogs.length) {\r\n                        this.moveExploreHead(orderedLogs[i + shift])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const project = this.props.sharedState.params.logExplore.project\r\n        if (!project.orderedLogs) {\r\n            const markdown_events = project.log.events.document_content_markdown\r\n            project.log.events.doc_change = [] \r\n            markdown_events.forEach((e, index) => {\r\n                if (index === 0 || markdown_events[index - 1].content !== e.content) {\r\n                    project.log.events.doc_change.push({type: 'doc_change', content: e.content, timestamp: e.timestamp})\r\n                }})\r\n            project.log.events.doc_change.forEach(e => e.type = 'doc_change')\r\n\r\n            project.orderedLogs = [].concat.apply([], Object.values(project.log.events)).filter(e => e.type !== 'document_content_markdown')\r\n            project.orderedLogs.sort(function(a,b){\r\n                return new Date(a.timestamp) - new Date(b.timestamp);\r\n            })\r\n        }\r\n        const logs = project.orderedLogs\r\n\r\n        return (\r\n            <div className=\"timeline\" onKeyDown={this.handleKeyDown}>\r\n                <p className=\"timeline-description\">This timeline shows in what order the participant built their map and text.\r\n                <br/>Click on an event to see which elements had been created at that time.</p>\r\n                <p>{project.filename}</p>\r\n                {logs.map((log, index) => {\r\n                        const getDate = (timestamp) => timestamp.substring(\"2020-\".length, \"2020-07-21\".length)\r\n                        const time = log.timestamp.substring(\"2020-07-21T\".length, \"2020-07-21T12:51:45\".length)\r\n\r\n                        const makeEntry = () => <TimelineEntry\r\n                            onClick={() => this.moveExploreHead(log)}\r\n                            log={log}\r\n                            timestampFormatted={time}\r\n                            sharedState={this.props.sharedState}\r\n                            isExploreHead={this.state.exploreHead === log}\r\n                        />\r\n\r\n                        if (index === 0 || getDate(log.timestamp) !== getDate(logs[index - 1].timestamp)) {\r\n                            return <>\r\n                                <p><b>{getDate(log.timestamp)}</b></p>\r\n                                {makeEntry()}\r\n                            </>\r\n                        } else {\r\n                            return makeEntry()\r\n                        }\r\n                    }\r\n                )}\r\n            </div>\r\n        );\r\n      }\r\n}","import React, { Component } from 'react';\r\nimport './ExperimentalControls.css';\r\n\r\nexport default class SlideOutPane extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const addClosed = (cn) => {\r\n            return cn + (this.state.open ? \"\" : \" closed\")\r\n        }\r\n        return (\r\n            <>\r\n                <button className={addClosed(\"pure-button timeline-toggle-button\")} onClick={() => {\r\n                    this.setState({open: !this.state.open})\r\n                    const graph = document.getElementById('graph')\r\n                    graph.classList.remove('timeline-explore-mode')\r\n                }}>\r\n                    {this.state.open ? \"Hide timeline\" : \"Show timeline\"}\r\n                </button>\r\n                <div className={addClosed(\"slide-out-pane\")}>\r\n                    {this.props.children}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class ExperimentInfo extends Component {\r\n    render() {\r\n        // eslint-disable-next-line no-useless-concat\r\n        const emailAddress = 'ab' + '390' + '@st-andrews' + '.ac.uk' // concat to avoid having the raw email address in git\r\n\r\n        const scenario = localStorage.getItem('scenario')\r\n\r\n        var question;\r\n        if (scenario === 'biohacking') {\r\n            question = <b>QUESTION: Should greater regulatory control be exerted over genetic biohacking?</b>\r\n        } else if (scenario === 'sharedSpace') {\r\n            question = <b>QUESTION: Should “shared spaces” in urban planning be promoted?</b>\r\n        } else {\r\n            toast.error(\"Question not found. Please re-open Write Reason using the link in the email we sent you.\")\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <h2>Instructions for study participants</h2>\r\n                <p>Thank you for participating in this study!</p>\r\n\r\n                <h3>Before you start</h3>\r\n                <p>Watch the “How to use” video on the home page.</p>\r\n\r\n                <h3>The task</h3>\r\n\r\n                <p>Your task is to decide where you stand on the question below, and write an essay justifying your view. Use Write Reason for all parts of the task.</p>\r\n\r\n                {question}\r\n\r\n                <p>Write in the style of a short academic essay. You may not have heard of this topic before - don't worry, the fact sheet has all the information you need on it!</p>\r\n\r\n                <h3>How to work on the task</h3>\r\n                <ol>\r\n                    <li>First, <a href=\"#factsheet\" onClick={(e) => {e.preventDefault(); this.props.sharedState.viewFactSheet()}}>click here to read the fact sheet</a></li>\r\n                    <li>Spend around 1 hour 40 minutes on this task, over the next week</li>\r\n                    <li>Aim for around 700 words as a very rough guide - though it's fine to exceed this!</li>\r\n                    <li>Whenever you work on the task record it in the diary. <a href='/diary_template.csv' download>Download a blank diary here</a></li>\r\n                    <li>Please <b>do not enter any personal information</b> when using Write Reason</li>\r\n                    <li>Your work will be saved in your browser on this computer when you press \"Save\"</li>\r\n                </ol>\r\n\r\n                <h3>What to do when you're finished</h3>\r\n                <ol>\r\n                    <li>Press the \"Export logs\" button in the bottom right of the screen, and keep the downloaded file somewhere safe</li>\r\n                    <li>Make sure your diary is filled out</li>\r\n                    <li>Email us at <a href={'mailto:' + emailAddress + '?subject=Write Reason task complete'}>{emailAddress}</a> to arrange a short interview about your experiences!\r\n                        During the interview you will send us the logs and your diary</li>\r\n                    <li>You will receive a £20 Amazon voucher to thank you for your time</li>\r\n                </ol>\r\n\r\n                <p>Your contribution to our research is incredibly valuable, thank you!</p>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class PreTaskSection extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            q1: '',\r\n            q2: '',\r\n            q3: '',\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event, question) {\r\n        this.setState({ [question] : event.target.value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const questions = [this.state.q1, this.state.q2, this.state.q3]\r\n        var shouldReturn = false\r\n        questions.forEach(questionValue => {\r\n            if (!shouldReturn && (!questionValue || questionValue === \"\")) {\r\n                alert(\"Please enter an answer for all three questions\")\r\n                shouldReturn = true\r\n                return\r\n            }\r\n        })\r\n        if (shouldReturn) {\r\n            return\r\n        }\r\n\r\n        if (window.confirm(\"Are you ready submit your answers? You cannot undo this action\")) {\r\n            localStorage.setItem('preTaskSubmission', JSON.stringify(this.state))\r\n            this.props.transitionToMenu()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // eslint-disable-next-line no-useless-concat\r\n        var emailAddress = 'ab' + '390' + '@st-andrews' + '.ac.uk' // concat to avoid having the raw email address in git\r\n        return (\r\n            <div className='intro-section'>\r\n                <h3 style={{paddingTop: \"40px\"}}>Thank you for participating in this experiment!</h3>\r\n                <ol className=\"steps\">\r\n                    <li>\r\n                        <p>Before we begin, please complete this <a href=\"https://standrews.eu.qualtrics.com/jfe/form/SV_9tYNKrCBK8uHOiV\">short, anonymous demographics\r\n                            questionnaire</a> if you have not done so already.</p>\r\n                    </li>\r\n                    <li>\r\n                        <p> Then, write a paragraph (at least 2 sentences) answering each of the questions below:</p>\r\n\r\n                        <form onSubmit={this.handleSubmit} className=\"pure-form pure-form-stacked\">\r\n                            <label>When you write an essay, what do you aim to produce?</label>\r\n                            <textarea className=\"pure-input-1\" rows=\"10\" value={this.state.value} onChange={(e) => this.handleChange(e, \"q1\")} placeholder=\"Your answer...\" />\r\n                            <label>What makes a good essay?</label>\r\n                            <textarea className=\"pure-input-1\" rows=\"10\" value={this.state.value} onChange={(e) => this.handleChange(e, \"q2\")} placeholder=\"Your answer...\" />\r\n                            <label>What do you think are the possible purposes of writing an essay?</label>\r\n                            <textarea className=\"pure-input-1\" rows=\"10\" value={this.state.value} onChange={(e) => this.handleChange(e, \"q3\")} placeholder=\"Your answer...\" />\r\n                            <input className=\"pure-button button-primary\" type=\"submit\" value=\"Submit answer\" />\r\n                        </form>\r\n\r\n                    </li>\r\n                </ol>\r\n\r\n                <p><i>Any questions? Get in touch at <a href={'mailto:' + emailAddress + '?subject=Write Reason question'}>{emailAddress}</a>.</i></p>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Logo from '../../assets/logo.png'\r\nimport \"video-react/dist/video-react.css\"\r\n\r\nexport default class IntroSection extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className='intro-section'>\r\n                <a href=\"https://adambinks.me/write-reason/\"><img src={Logo} className='logo' alt=\"Write Reason\"/></a>\r\n\r\n                <p>Explore the representations created by participants in our study.</p>\r\n                <p><em>These data were collected by Adam Binks, Alice Toniolo and Miguel Nacenta, from consenting study participants, and are shared in an anonymised form as approved by University of St Andrews <a href=\"https://www.st-andrews.ac.uk/research/environment/committees/utrec/\">UTREC</a> (approval code CS14896).</em></p>\r\n            </div>\r\n        );\r\n      }\r\n}","/* eslint-disable no-fallthrough */\r\n/* eslint-disable default-case */\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport DocPane from './components/doc/DocPane.js';\r\nimport GraphPane from './components/graph/GraphPane.js';\r\nimport SplitPane from 'react-split-pane';\r\nimport LoadProject from './components/loadproject/LoadProject.js';\r\nimport { DndProvider } from 'react-dnd'\r\nimport Backend from 'react-dnd-html5-backend'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport SaveButton from './components/experiment/SaveButton';\r\nimport LogExploreTimeline from './components/experiment/LogExploreTimeline';\r\nimport SlideOutPane from './components/experiment/SlideOutPane';\r\nimport ExperimentInfo from './components/experiment/ExperimentInfo';\r\nimport PreTaskSection from './components/loadproject/PreTaskSection';\r\nimport IntroSection from './components/loadproject/IntroSection';\r\nimport Modal from 'react-modal'\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nModal.setAppElement('#root')\r\nconst modalStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      maxWidth              : '40%',\r\n      maxHeight             : '90%',\r\n      padding               : '50px'\r\n    }\r\n  }\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var startPhase = 'loadproject'\r\n\r\n        this.state = {\r\n            phase: startPhase,\r\n            params: undefined\r\n        }\r\n\r\n        this.transitionToEditor = this.transitionToEditor.bind(this)\r\n        this.transitionToMenu = this.transitionToMenu.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.location.search) {\r\n            const urlParams = new URLSearchParams(window.location.search)\r\n            const scenario = urlParams.get('scenario')\r\n\r\n            if (scenario !== 'biohacking' && scenario !== 'sharedSpace') {\r\n                console.error('Unrecognised scenario ' + scenario)\r\n            } else {\r\n                localStorage.setItem('scenario', scenario)\r\n                console.log(localStorage.getItem('scenario'))\r\n            }\r\n        }\r\n\r\n        this.getStorageUsed()\r\n    }\r\n\r\n    transitionToEditor(newSharedState, resetFirst) {\r\n        if (resetFirst) {\r\n            this.setState({phase: \"reset\", sharedState: undefined})\r\n            window.setTimeout(() => {\r\n                this.setState({ \r\n                    sharedState: newSharedState,\r\n                    phase: \"editor\"\r\n                })\r\n            }, 0)\r\n        } else {\r\n            this.setState({ \r\n                sharedState: newSharedState,\r\n                phase: \"editor\"\r\n            })\r\n        }\r\n    }\r\n\r\n    transitionToMenu() {\r\n        if (this.state.sharedState) {\r\n            this.state.sharedState.finishCondition()\r\n        }\r\n        this.setState({\r\n            sharedState: undefined,\r\n            phase: \"loadproject\"\r\n        })\r\n    }\r\n\r\n    getStorageUsed() {\r\n        navigator.storage && navigator.storage.estimate().then(estimate => {\r\n            if (!estimate) {\r\n                return\r\n            }\r\n\r\n            var storageUsed = estimate.usage / estimate.quota * 100\r\n            if (storageUsed < 0.00000005) {\r\n                storageUsed = 0 // prevent 10e-16 sort of thing\r\n            }\r\n            storageUsed = storageUsed.toPrecision(2)\r\n\r\n            this.setState({ storageUsed })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (isMobile) {\r\n            return (\r\n                <p>Write Reason is designed for non-mobile devices. Please access from a laptop or desktop computer.</p>\r\n            )\r\n        }\r\n\r\n        switch(this.state.phase) {\r\n            case \"pretask\":\r\n                return (\r\n                    <PreTaskSection transitionToMenu={this.transitionToMenu} />\r\n                )\r\n            case \"loadproject\":\r\n                return (\r\n                    <>\r\n                        <IntroSection />\r\n                        <LoadProject transitionToEditor={this.transitionToEditor} autoload={false} />\r\n                        <footer>\r\n                            {this.state.storageUsed && <p>Storage used: {this.state.storageUsed}%</p>}\r\n                            <p><b>Privacy notice</b>: This webpage simply downloads the Write Reason application to your browser. Once loaded, \r\n                            everything runs locally in your browser. No data is sent back to the server.</p>\r\n                        </footer>\r\n                    </>\r\n                )\r\n            case \"editor\":\r\n                return (\r\n                    <div className=\"App\">\r\n                        <Modal\r\n                            isOpen={this.state.modalIsOpen}\r\n                            style={modalStyles}\r\n                            contentLabel=\"Experiment information\"\r\n                            onRequestClose={() => this.setState({ modalIsOpen: false })}\r\n                        >\r\n                            <ExperimentInfo sharedState={this.state.sharedState}/>\r\n                            <button className=\"pure-button\" onClick={() => this.setState({ modalIsOpen: false })}>Close</button>\r\n                        </Modal>\r\n\r\n                        <DndProvider backend={Backend}>\r\n                            <SplitPane split=\"vertical\" defaultSize=\"50%\">\r\n                                <DocPane sharedState={this.state.sharedState} />\r\n                                <GraphPane sharedState={this.state.sharedState} />\r\n                            </SplitPane>\r\n                            {\r\n                                this.state.sharedState.params.logExplore && <SlideOutPane><LogExploreTimeline sharedState={this.state.sharedState}/></SlideOutPane>\r\n                            }\r\n                            <SaveButton \r\n                                sharedState={this.state.sharedState}\r\n                                backToMenu={this.transitionToMenu} \r\n                                showExperimentInfo={() => this.setState({ modalIsOpen: true })}\r\n                            />\r\n                        </DndProvider>\r\n\r\n                        <ToastContainer\r\n                            position=\"bottom-center\"\r\n                            autoClose={5000}\r\n                            hideProgressBar\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable={false}\r\n                            pauseOnHover\r\n                        />\r\n                    </div>\r\n                );\r\n            \r\n            case \"reset\":\r\n                // hacky way to destroy and recreate all components\r\n                return (\r\n                    <p>...</p>\r\n                )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}