{"version":3,"sources":["components/graph/OptionPopup.js","components/doc/GraphPlugin.js","components/doc/NodeSwitch.js","components/doc/nodes/LinkNode.js","components/doc/nodes/BodyNode.js","dragtypes.js","components/doc/DragifyBlock.js","components/doc/DropifyBlock.js","components/doc/nodes/SectionNode.js","components/doc/LoggingPlugin.js","components/doc/nodes/PlainBlockNode.js","components/doc/SlateComponents.js","components/doc/HoveringMenu.js","components/doc/Schema.js","components/doc/DocEditor.js","components/graph/svg.connectable.js","components/doc/NodePlugin.js","components/doc/ReorderPlugin.js","components/doc/DocPane.js","components/graph/MouseFollower.js","components/graph/GraphNode.js","components/graph/DropifyGraphPane.js","components/graph/GraphPane.js","db.js","components/loadproject/ProjectsList.js","logging.js","shared_state.js","components/loadproject/LoadProject.js","components/experiment/SaveButton.js","App.js","serviceWorker.js","index.js"],"names":["OptionPopup","entries","x","y","shouldHideOnClickOutside","callback","selected","undefined","parent","div","document","createElement","classList","add","appendChild","this","generateTable","style","left","top","getElementById","setTimeout","hideOnClickOutside","table","forEach","entry","isClickable","row","insertRow","name","selectItem","e","remove","colourCell","insertCell","textContent","symbol","color","colour","fontSize","padding","nameCell","addEventListener","buttons","buttonEntry","buttonCell","button","innerHTML","className","onclick","click","underlyingEntry","transientEntry","underlyingEntries","element","outsideClickListener","event","elem","contains","target","offsetWidth","offsetHeight","getClientRects","length","removeClickListener","removeEventListener","addSection","draggedNode","editor","initialNodeStyle","getSharedState","addGraphMapping","id","node","console","log","insertSectionBlock","text","longText","logger","logEvent","link","Block","create","type","data","node_id","nodes","Text","body","section","nodeStyle","insertBlock","moveToEndOfNode","handleMouseUp","clickedNode","resetPos","getGraphNode","value","focus","getParent","toast","error","showNodeSwitchMenu","entriesToHide","filter","includes","preventDefault","clientX","clientY","selectedEntry","get","deleteNode","old","new","setNodeByKey","key","newStyle","moveToRangeOfNode","convertFromInline","shortText","getBlocksByType","prev","getPreviousBlock","next","getNextBlock","insertNodeByKey","wrapBlockByKey","removeNodeByKey","insertInline","insertText","convertToInline","querySelector","removeDocNode","LinkNode","props","state","hover","externalHover","setHover","bind","newHover","sharedState","nodeId","setHoverer","setState","isHovered","selection","cursorInside","getDescendantsAtRange","classes","linkStyle","attributes","children","onMouseEnter","onMouseLeave","onContextMenu","Component","BodyNode","selectNode","isEmpty","onMouseDown","ItemTypes","blockSource","canDrag","isCollapsed","beginDrag","endDrag","monitor","component","didDrop","dropResult","getDropResult","droppedOnGraph","graphNode","addGraphNode","position","moveTo","blockIndex","indexOf","indexShift","insertBefore","indexDroppedOn","moveNodeByKey","parentKey","DragSource","connect","connectDragSource","dragSource","dragPreview","isDragging","blockTarget","innerDiv","mouse","getClientOffset","outerDiv","ReactDOM","findDOMNode","outerRect","getBoundingClientRect","item","innerRect","offset","newState","height","overHalf","drop","blockParent","DropTarget","connectDropTarget","dropTarget","isOver","isOverCurrent","shallow","canDrop","itemType","getItemType","DragifyBlock","DropifyBlock","blocks","some","block","verbose","getNodeStyleClass","onMouseOver","onMouseUp","ref","LoggingPlugin","options","onCopy","content","fragment","onCut","onPaste","transfer","getEventTransfer","paste_type","content_html","html","Button","React","forwardRef","active","reversed","cx","css","Icon","textLines","map","toArray","join","Menu","MarkButton","icon","isActive","setBlocks","HoverMenu","root","window","createPortal","HoveringMenu","menuRef","createRef","componentDidMount","updateMenu","componentDidUpdate","menu","current","isBlurred","removeAttribute","rect","getSelection","getRangeAt","opacity","pageYOffset","pageXOffset","width","render","schema","inlines","normalize","code","unwrapInlineByKey","object","match","min","max","moveBlockAfterSection","child","linkNode","find","textNode","getLastText","insertTextByKey","addMissing","hasChildTypes","push","blockToMove","sectionToMoveAfter","sectionIndex","nodeType","getShortText","getLongText","index","addBlock","plugins","findEventRange","select","inline","onBlur","deselect","commands","removeGraphLink","hasNode","section_index","child_index","getChild","wrapLinkAtSelection","wrapInline","renderInline","getRefAndId","renderBlock","refAndId","moveToStartOfNode","onDrop","getLinkInlines","the_doc","filterDescendants","textNoNewlines","replace","fragmentInlines","docInlines","usedIds","usedId","inlineWithId","onChange","updateFunc","updateGraphShortText","updateGraphLongText","update","updateText","checkRecycleBinForGraphNode","onKeyDown","startBlock","start","end","isExpanded","getNodesAtRange","updateIsOnGraphStatus","isAtEndOfNode","nextBlock","prevBlock","blockToInsert","sectionParent","moveBackward","relevantBlock","long_or_short","setLinkMapping","registerLinkNode","NodePlugin","renderEditor","Fragment","emptyValue","Value","fromJSON","DocEditor","mapHasLoaded","queries","getValue","editor_ref","getSavedDocValue","savedValue","editorHasLoaded","plainClass","condition","placeholder","spellCheck","DocPane","_typeof","Symbol","iterator","obj","constructor","prototype","t","n","r","s","o","u","require","a","i","f","Error","l","exports","call","1","module","Id","SetOrGet","IterateObject","Deffy","_connections","_betweenTwoBubbles","container","markers","connectable","elmTarget","con","k","kk","marker","addClass","markerId","line","path","attr","fill","stroke","specialCoords","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","d","source","toString","ids","id1","id2","reverse","_","computeLineCoordinates","cons","output","sT","transform","tT","sB","bbox","tB","x1","y1","x2","y2","cy","dx","Math","abs","dy","dd","out","ex","ey","sqrt","xDiff","yDiff","padEllipse","xR1","xR2","yR1","yR2","elmS","elmT","tagName","parseFloat","getAttribute","sx","sy","ux","uy","isNaN","results","plot","on","setLineColor","c","SVG","extend","Element","delete_connectable","dispatchEvent","CustomEvent","2","Typpy","input","def","empty","3","arguments","is","str","String","NaN","toLowerCase","4","random","substr","5","fn","keys","Array","isArray","Object","6","field","7","apply","8","COLOURS","DEFAULT_ARROW_OPTIONS","MouseFollower","shared_state","svg","connectables_container","links","drawing_arrow_from","connector","arrow_id_counter","completed_arrows","mouse_rect","group","point","move","stop_drawing_arrow","arrows","arrowOptions","get_node","arrow","originNode","origin","destinationNode","destination","draw_arrow","add_context_menu_to_arrow","new_source","show","hide","source_node","instance","remove_arrow","arrowObject","show_context_menu","graph_pos","edit_connector_type","new_colour","detail","oldColour","newColour","end_node","c1","getScreenCoords","c2","midpoint","drawing_arrow_from_id","getNewId","direction","getNextAvailableColour","availableColours","option","thisColourIndex","nextIndex","clickEditButton","params","editButton","finishEditing","newValue","substring","removeChild","colourButton","changeArrowColour","clickDeleteArrowTypeButton","confirm","splice","parentNode","arrowOptionsWithButtons","entryWithButtons","popup_x","popup_y","onColourSelected","prev_selected","getArrowOptions","selected_option","json","mf","ARROW_HITBOX_MARGIN","GraphNode","mouse_follower","focus_text_area","getNodesList","isOnGraph","getNodeId","translate","arrow_hitbox","radius","updateShortText","updateLongText","setupRectDragging","setupArrowHitbox","complete_arrow","setupHover","setupContextMenu","editText","setIsOnGraph","screenCoords","newVal","removeClass","showOptionMenu","delete","hoverers","startHover","getAllDocNodeRefs","decoratedRef","setExternalHover","endHover","hoverer","isHovering","setHovered","setupGroupDragging","edit_text_if_not_just_dropped","just_dropped","just_dropped_obj","center","draggy","stopPropagation","start_x","start_y","activeElement","blur","off","delta","movedX","movedY","x_diff","y_diff","update_source","start_arrow","newShortText","formattedText","splitIntoLines","resizeRect","newLongText","charsPerLine","split","word","segments","segment","space","numLinesOfText","size","delete_if_empty_text","textarea","screen_coords","display","scrollHeight","save_changes","updateDocShortText","save_and_hide","onblur","onkeyup","removeGraphNode","nodesList","DropifyGraphPane","getItem","findDescendant","getSavedGraph","graphPane","$el","panZoom","zoomMin","zoomMax","root_point","doc","json_connections","connections","addNodeAtScreenLocation","setupTextDropping","setAttribute","loadNodesFromJSON","getNodeById","draw_loaded_arrows","addNoNodesIndicator","toJSON","nodeJSON","noNodesIndicator","dataTransfer","types","getData","canAddLinkAtSelection","addLinkAtSelection","el","db","Dexie","version","stores","projects","FilesList","project","onClick","loadProject","renameProject","duplicateProject","deleteProject","Logger","shouldLogToConsole","conditions","logToConsole","JSON","stringify","getLog","events","timestamp","Date","setLog","parse","retrieveLog","localStorage","setItem","getStorageString","msg","Number","SharedState","db_id","onDataLoad","then","doc_value","graph_value","node_id_counter","slate_id_counter","map_recycle_bin","intervalLogger","setInterval","getEditor","getArgumentMarkdown","downloadExperimentData","save","mapFromJSON","changes","mapToJSON","idExists","info","message","catch","err","mapJson","doc_nodes","part","docNodeObjects","getDocNodes","getPath","graph_node","getNode","argument","logs","getExperimentData","file","Blob","href","URL","createObjectURL","download","getExperimentId","parentStyleIs","styleToCheck","RULES","serialize","Html","rules","regex","replacement","clearInterval","is_in_linked_block","is_in_linked_inline","doc_node","prev_version","getGraphNodeAndDocNode","values","docNode","short","long","doc_link_node","docNodes","getDocNodeShortText","newText","LoadProject","addProject","updateProjectsFromDb","autoload","transitionToEditor","prompt","newName","ExperimentControls","backToMenu","App","phase","transitionToMenu","newSharedState","finishCondition","DndProvider","backend","Backend","defaultSize","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Boolean","location","hostname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52655372.chunk.js","sourcesContent":["export default class OptionPopup {\r\n    constructor(entries, x, y, shouldHideOnClickOutside, callback, selected=undefined, parent=undefined) {\r\n        var div = document.createElement(\"div\");\r\n        div.classList.add(\"option-popup-div\");\r\n        div.appendChild(this.generateTable(entries, div, callback, selected));\r\n        div.style.left = x + \"px\";\r\n        div.style.top = y + \"px\";\r\n\r\n        if (parent === undefined) {\r\n            parent = document.getElementById(\"graph\");\r\n        }\r\n        parent.appendChild(div);\r\n\r\n        if (shouldHideOnClickOutside) {\r\n            setTimeout(() => this.hideOnClickOutside(div), 0.01);\r\n        }\r\n    }\r\n\r\n    generateTable(entries, div, callback, selected) {\r\n        var table = document.createElement(\"table\");\r\n        entries.forEach(entry => {\r\n            entry.isClickable = entry.isClickable !== undefined ? entry.isClickable : true\r\n\r\n            var row = table.insertRow();\r\n            row.classList.add(\"option-row\");\r\n            if (entry.name === selected) {\r\n                row.classList.add(\"option-row-selected\");\r\n            }\r\n\r\n            const selectItem = (e) => {\r\n                if (entry.isClickable) {                    \r\n                    callback(entry);\r\n                    div.remove();\r\n                }\r\n            }\r\n\r\n            var colourCell = row.insertCell();\r\n            colourCell.textContent = entry.symbol;\r\n            colourCell.style.color = entry.colour;\r\n            colourCell.style.fontSize = \"150%\";\r\n            colourCell.style.padding = '10px'\r\n            \r\n            var nameCell = row.insertCell();\r\n            nameCell.classList.add('option-cell')\r\n            nameCell.textContent = entry.name\r\n\r\n            colourCell.addEventListener('click', selectItem)\r\n            nameCell.addEventListener('click', selectItem)\r\n\r\n            if (entry.buttons) {\r\n                entry.buttons.forEach(buttonEntry => {\r\n                    var buttonCell = row.insertCell()\r\n                    var button = document.createElement('BUTTON')\r\n                    button.innerHTML = '<p class=\"' + buttonEntry.className + '\"></p>'\r\n                    button.className = \"pure-button\"\r\n                    button.style.padding = \"0px 10px 0px 10px\"\r\n                    buttonCell.appendChild(button)\r\n                    button.onclick = (e) => buttonEntry.click(e, {colourCell, nameCell, buttonCell, underlyingEntry: buttonEntry.underlyingEntry, \r\n                            transientEntry: entry, underlyingEntries: buttonEntry.underlyingEntries, row})\r\n                })\r\n            }\r\n        });\r\n\r\n        return table;\r\n    }\r\n\r\n    hideOnClickOutside(element) {\r\n        const isVisible = elem => !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n\r\n        const outsideClickListener = event => {\r\n            if (!element.contains(event.target) && isVisible(element)) {\r\n              element.remove();\r\n              removeClickListener()\r\n            }\r\n        }\r\n    \r\n        const removeClickListener = () => {\r\n            document.removeEventListener('click', outsideClickListener)\r\n        }\r\n    \r\n        document.addEventListener('click', outsideClickListener)\r\n        document.addEventListener('contextmenu', outsideClickListener)\r\n    }\r\n}","import { Block, Text } from 'slate';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function GraphPlugin(options) {\r\n    return {\r\n        onMouseUp(event, editor, next) {\r\n            var draggedNode = editor.getSharedState().draggedNode;\r\n\r\n            if (draggedNode) {\r\n                draggedNode.resetPos();\r\n\r\n                if (editor.getSharedState().getGraphNode(draggedNode.id)) {\r\n                    toast.error('You can\\'t add the same node twice!')\r\n                    console.log('Duplicate - editor')\r\n                } else {\r\n                    const target = editor.findEventRange(event)\r\n                    if (target) {\r\n                        editor.select(target)\r\n\r\n                        // prevent insertion inside an inline link\r\n                        // (insertion inside a section is fixed by schema)\r\n                        const linkNode = editor.value.inlines.find(inline => inline.type === 'link')\r\n                        if (linkNode) {\r\n                            editor.moveToEndOfNode(linkNode)\r\n                        }\r\n\r\n                        addSection(draggedNode, editor)\r\n                    }\r\n                }\r\n            }\r\n            next();\r\n        },\r\n        \r\n        onBlur(event, editor, next) {\r\n            editor.deselect();\r\n            next();\r\n        },\r\n\r\n        commands: {\r\n            removeGraphLink(editor, node) {\r\n                const document = editor.value.document\r\n                if (!document.hasNode(node.key)) {\r\n                    console.log('couldnt remove graph link, node doesnt exist');\r\n                    \r\n                    return\r\n                }\r\n\r\n                if (node.type === \"section\") {\r\n                    // move the children out from inside this section to be after it\r\n                    const section_index = editor.value.document.nodes.indexOf(node)\r\n                    if (section_index !== -1) {\r\n                        var child_index = 0;\r\n                        node.nodes.forEach(child => {\r\n                            if (!document.hasNode(child.key)) {\r\n                                return\r\n                            }\r\n\r\n                            const nodeStyle = node.data.get(\"nodeStyle\")\r\n                            if ((child_index === 0 && nodeStyle === \"Body only\") || (child_index === 1 && nodeStyle === \"Heading only\")) {\r\n                                editor.removeNodeByKey(child.key)\r\n                            } else {\r\n                                editor.moveNodeByKey(child.key, editor.value.document.key, section_index + child_index + 1)\r\n                            }\r\n                            child_index ++\r\n                        });\r\n                    }\r\n                    editor.removeNodeByKey(node.key)\r\n                } else if (editor.value.document.getChild(node.key) || node.object === \"inline\") {           \r\n                    editor.setNodeByKey(node.key, {\"type\": \"\"})\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function addSection(draggedNode, editor, initialNodeStyle=\"Heading and body\") {\r\n    editor.getSharedState().addGraphMapping(draggedNode.id, draggedNode.node)\r\n\r\n    console.log(draggedNode);\r\n    \r\n\r\n    insertSectionBlock(editor, draggedNode.id, draggedNode.text, draggedNode.longText, initialNodeStyle)\r\n\r\n    editor.getSharedState().logger.logEvent({\r\n        'type': 'doc_create_from_node', \r\n        'node_id': draggedNode.id, \r\n        'short_text': draggedNode.text, \r\n        'long_text': draggedNode.longText\r\n    });\r\n}\r\n\r\nexport function insertSectionBlock(editor, id, text, longText, initialNodeStyle) {\r\n    var link = Block.create({\r\n        type: 'link',\r\n        data: {node_id: id},\r\n        nodes: [Text.create({text: text})]\r\n    })\r\n\r\n    var body = Block.create({\r\n        type: 'body',\r\n        data: {node_id: id},\r\n        nodes: [Text.create({text: longText})]\r\n    })\r\n\r\n    var section = Block.create({\r\n        type: 'section',\r\n        data: {node_id: id, nodeStyle: initialNodeStyle},\r\n        nodes: [link, body]\r\n    })    \r\n    \r\n    editor.insertBlock(section);\r\n    editor.moveToEndOfNode(section)\r\n\r\n    return section\r\n}\r\n\r\nexport function handleMouseUp(editor, clickedNode) {\r\n    var draggedNode = editor.getSharedState().draggedNode;\r\n\r\n    if (draggedNode) {\r\n        draggedNode.resetPos();\r\n\r\n        if (editor.getSharedState().getGraphNode(draggedNode.id)) {\r\n            toast.error('You can\\'t add the same node twice!')\r\n            console.log('Duplicate - node');\r\n            \r\n        } else {\r\n            const { value } = editor\r\n            const { document } = value\r\n            editor.focus()\r\n\r\n            if (clickedNode.type === \"body\" || clickedNode.type === \"link\") {\r\n                clickedNode = document.getParent(clickedNode);\r\n            }\r\n\r\n            editor.moveToEndOfNode(clickedNode);\r\n\r\n            addSection(draggedNode, editor);\r\n\r\n            editor.getSharedState().draggedNode = false;\r\n            return true;\r\n        }\r\n    }\r\n}","import { Block } from 'slate';\r\nimport OptionPopup from '../graph/OptionPopup.js'\r\nimport { insertSectionBlock } from './GraphPlugin.js';\r\n\r\nexport const showNodeSwitchMenu = (event, node, editor, entriesToHide) => {\r\n    var entries = [\r\n        {'colour': 'black', 'name': 'Inline', 'symbol': \"⌶\"},\r\n        {'colour': 'black', 'name': 'Heading and body', 'symbol': \"▤\"},\r\n        {'colour': 'black', 'name': 'Heading only', 'symbol': \"▔\"},\r\n        {'colour': 'black', 'name': 'Body only', 'symbol': \"▂\"},\r\n        {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n    ]\r\n\r\n    if (entriesToHide) {\r\n        entries = entries.filter((entry) => {return !entriesToHide.includes(entry.name)})\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    const onOptionSelect = (selectedEntry) => {\r\n        const selected = selectedEntry.name\r\n        if (selected === \"Delete\") {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"doc_node_delete\",\r\n                id: node.data.get(\"node_id\")\r\n            });\r\n            deleteNode(node, editor);\r\n        } else {\r\n            var nodeStyle = node.data.get(\"nodeStyle\")\r\n            if (!nodeStyle) {\r\n                nodeStyle = \"Inline\"\r\n            }\r\n\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"doc_node_change_format\",\r\n                old: nodeStyle,\r\n                new: selected,\r\n                id: node.data.get(\"node_id\")\r\n            });\r\n\r\n            if (nodeStyle !== \"Inline\" && selected !== \"Inline\") {\r\n                editor.setNodeByKey(node.key, { data: {node_id: node.data.get(\"node_id\"), nodeStyle: selected} })\r\n            } else if (nodeStyle === \"Inline\" && selected !== \"Inline\") {\r\n                convertFromInline(node, editor, selected)\r\n            }  else if (nodeStyle !== \"Inline\" && selected === \"Inline\") {\r\n                convertToInline(node, editor, selected)\r\n            }\r\n        }\r\n    }\r\n\r\n    new OptionPopup(entries, event.clientX, event.clientY, true, onOptionSelect, node.data.get('nodeStyle'), document.querySelector(\".App\"))\r\n}\r\n\r\nexport function deleteNode(node, editor) {\r\n    editor.getSharedState().removeDocNode(node.data.get(\"node_id\"))\r\n\r\n    editor.removeNodeByKey(node.key)\r\n}\r\n\r\nfunction convertFromInline(node, editor, newStyle) {\r\n    editor.moveToRangeOfNode(node);\r\n    const parent = editor.value.document.getParent(node.key)\r\n    if (parent && parent.text === node.text) {\r\n        editor.moveToRangeOfNode(parent)\r\n    }\r\n    insertSectionBlock(editor, node.data.get(\"node_id\"), node.text, \"\", newStyle)    \r\n}\r\n\r\nfunction convertToInline(node, editor) {\r\n    const shortText = node.getBlocksByType(\"link\").get(0).text;\r\n    // need to get 0th child because previous of section is the body inside it\r\n    const prev = editor.value.document.getPreviousBlock(node.nodes.get(0).key)\r\n    const next = editor.value.document.getNextBlock(node.nodes.get(1).key)\r\n\r\n    const getEmptyParagraph = () => Block.create({\r\n        type: 'paragraph'\r\n    })\r\n\r\n    // if doc only contains this section, add an empty paragraph at the start to prevent emptying the doc\r\n    if (!prev && !next) {\r\n        editor.insertNodeByKey(editor.value.document.key, 0, getEmptyParagraph())\r\n    }\r\n\r\n    editor.moveToRangeOfNode(node)\r\n\r\n    // don't merge with prev block if prev is another section - wrap it in a fresh paragraph instead\r\n    if ((prev && (prev.type === \"section\" || prev.type === \"body\")) || (!prev && next && (next.type === \"section\" || next.type === \"link\"))) {\r\n        editor.wrapBlockByKey(node.key, \"paragraph\")\r\n        editor.removeNodeByKey(node.key)\r\n    } else {\r\n        editor.removeNodeByKey(node.key)\r\n    }\r\n\r\n    editor.insertInline({\r\n            type: \"link\",\r\n            data: {node_id: node.data.get(\"node_id\"), nodeStyle: \"Inline\"},\r\n        })\r\n        .insertText(shortText)\r\n}\r\n\r\nexport const getNodeStyleClass = (verbose) => {\r\n    switch (verbose) {\r\n        case \"Heading only\":\r\n            return \" hide-body\"\r\n\r\n        case \"Body only\":\r\n            return \" hide-heading\"\r\n    \r\n        default:\r\n            return \"\";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { showNodeSwitchMenu } from '../NodeSwitch';\r\n\r\nclass LinkNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false,\r\n        }\r\n        \r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {     \r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"link_mouse\", newHover);\r\n        }\r\n\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.props.editor;\r\n        const { document, selection } = value;\r\n        var cursorInside = document.getDescendantsAtRange(selection).contains(this.props.node)\r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"link_cursor\", cursorInside)\r\n        }\r\n        \r\n        var hoverClass = (this.state.externalHover || cursorInside) ? \" hovered\" : \"\";\r\n        var classes = \"node-link\" + hoverClass;\r\n\r\n        if (this.props.linkStyle === \"heading\") {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}>\r\n                    <u><b>{this.props.children}</b></u>\r\n                </p>\r\n            );\r\n\r\n        } else if (this.props.linkStyle === \"inline\") {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}\r\n                        onMouseEnter={() => this.setHover(true)} \r\n                        onMouseLeave={() => this.setHover(false)}\r\n                        onContextMenu={(e) => showNodeSwitchMenu(e, this.props.node, this.props.editor)}>\r\n                    {this.props.children}\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default LinkNode;","import React, { Component } from 'react';\r\n\r\nexport default class BodyNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n        this.selectNode = props.selectNode;\r\n    }\r\n\r\n    setHover(newHover) {\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        var hoverClass = (this.state.externalHover || this.state.hover) ? \" hovered\" : \"\";\r\n        var classes = \"node-body\" + hoverClass + (this.props.isEmpty ? \" placeholder\" : \"\");\r\n\r\n        const { value } = this.props.editor;\r\n        const { document, selection } = value;\r\n        var cursorInside = document.getDescendantsAtRange(selection).contains(this.props.node)\r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"body_cursor\", cursorInside);\r\n            node.setHoverer(\"body_mouse\", this.state.hover);\r\n        }\r\n\r\n        if (this.props.isEmpty) {\r\n                return (\r\n                    <p className={classes} {...this.props.attributes} onMouseDown={this.selectNode}>\r\n                        Type some text...{this.props.children}\r\n                    </p>\r\n                );\r\n        } else {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}>\r\n                    {this.props.children}\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n}","export const ItemTypes = {\r\n    BLOCK: \"block\",\r\n}","import { DragSource } from 'react-dnd';\r\nimport { ItemTypes } from '../../dragtypes';\r\nimport { addSection } from './GraphPlugin.js'\r\n\r\nconst blockSource = {\r\n    canDrag(props) {\r\n        // don't drag if there is a non-collapsed selection, so it doesn't interfere with dragging selections to graph\r\n        return props.editor.value.selection.isCollapsed\r\n    },\r\n\r\n    beginDrag(props) {\r\n      // Return the data describing the dragged item\r\n      const item = { id: props.node.id, node: props.node }\r\n      return item\r\n    },\r\n\r\n    endDrag(props, monitor, component) {\r\n        if (!monitor.didDrop()) {            \r\n            return\r\n        }\r\n\r\n        const dropResult = monitor.getDropResult()\r\n        const sharedState = props.editor.getSharedState()\r\n\r\n        if (dropResult.droppedOnGraph) {\r\n            const graphNode = sharedState.addGraphNode('', dropResult.position.x, dropResult.position.y)\r\n            const draggedNode = {\r\n                id: props.node.data.get('node_id'),\r\n                node: graphNode,\r\n                text: \"\",\r\n                longText: props.node.text\r\n            }\r\n            props.editor.moveTo(props.node.key)\r\n            \r\n            addSection(draggedNode, props.editor, \"Body only\")\r\n            props.editor.removeNodeByKey(props.node.key)\r\n        } else {\r\n            const document = props.editor.value.document;\r\n            const blockParent = document.getParent(props.node.key);\r\n            const blockIndex = blockParent.nodes.indexOf(props.node);\r\n            const indexShift = (dropResult.insertBefore ? 1 : 0) - (dropResult.indexDroppedOn > blockIndex ? 1 : 0)\r\n\r\n            props.editor.moveNodeByKey(props.node.key, dropResult.parentKey, dropResult.indexDroppedOn + indexShift)\r\n\r\n            sharedState.logger.logEvent({\r\n                'type': 'reorder',\r\n                'id': props.node.data.get('node_id'),\r\n                'old_index': blockIndex,\r\n                'new_index': dropResult.indexDroppedOn + indexShift,\r\n            });\r\n        }\r\n    },\r\n  }\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDragSource: connect.dragSource(),\r\n        dragPreview: connect.dragPreview(),\r\n        isDragging: monitor.isDragging(),\r\n    }\r\n}\r\n\r\nexport default DragSource(ItemTypes.BLOCK, blockSource, collect)","import ReactDOM from 'react-dom';\r\nimport { DropTarget } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../dragtypes\";\r\n\r\nconst blockTarget = {\r\n    hover(props, monitor, component) {\r\n        const mouse = monitor.getClientOffset();\r\n\r\n        // calculate based on height of firstChild because if this is the last node in the doc, its outer div expands to fill the remaining vertical space\r\n        const outerDiv = ReactDOM.findDOMNode(component)        \r\n        const outerRect = outerDiv.getBoundingClientRect()\r\n        \r\n        var innerDiv;\r\n        for (let item of outerDiv.children) {\r\n            if (item.classList.contains('plain-block') || item.classList.contains('section')) {\r\n                innerDiv = item;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!innerDiv) {\r\n            console.log('error: couldn\\'t find the inner div!');\r\n            return\r\n        }\r\n        const innerRect = innerDiv.getBoundingClientRect()       \r\n    \r\n        // subtract offset of the innerRect from the outerRect, to prevent the insertion of the drag indicator from affecting things\r\n        const offset = (innerRect.y - outerRect.y)\r\n        var newState = false\r\n        if (mouse.y + offset > (innerRect.y + innerRect.height / 2)) {\r\n            newState = true\r\n        }\r\n        if (component.state.overHalf !== newState) {\r\n            component.setState({overHalf: newState});\r\n        }\r\n    },\r\n\r\n    drop(props, monitor, component) {\r\n        const document = props.editor.value.document;\r\n        const blockParent = document.getParent(props.node.key);\r\n        const blockIndex = blockParent.nodes.indexOf(props.node);\r\n        return { droppedOnGraph: false, parentKey: blockParent.key, indexDroppedOn: blockIndex, insertBefore: component.state.overHalf }\r\n    },\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDropTarget: connect.dropTarget(),\r\n        // You can ask the monitor about the current drag state:\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({ shallow: true }),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType(),\r\n    }\r\n}\r\n\r\nexport default DropTarget(ItemTypes.BLOCK, blockTarget, collect)","import React, { Component } from 'react';\r\nimport DragifyBlock from '../DragifyBlock';\r\nimport DropifyBlock from '../DropifyBlock';\r\nimport { handleMouseUp } from '../GraphPlugin';\r\nimport { showNodeSwitchMenu, getNodeStyleClass } from '../NodeSwitch';\r\n\r\nclass SectionNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false,\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {     \r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"section_mouse\", newHover);\r\n        }\r\n\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        const { isOverCurrent, connectDropTarget, connectDragSource, isDragging } = this.props;\r\n\r\n        const value = this.props.editor.value\r\n        var cursorInside = value.blocks && value.blocks.some(block => block === this.props.node || this.props.node.nodes.includes(block))\r\n\r\n        var hoverClass = (this.state.externalHover || cursorInside) ? \" hovered\" : \"\";\r\n        var classes = \"section plain-block \" + hoverClass  + (isDragging ? \" display-none\" : \"\");\r\n        classes += getNodeStyleClass(this.props.node.data.get(\"nodeStyle\"))\r\n        \r\n\r\n        return connectDropTarget(\r\n            <div className='block-outer-div'>\r\n                {(isOverCurrent && !this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                <div className={classes} {...this.props.attributes} \r\n                        onMouseEnter={() => this.setHover(true)} onMouseOver={() => this.setHover(true)} onMouseLeave={() => this.setHover(false)} \r\n                        onMouseUp={() => {handleMouseUp(this.props.editor, this.props.node) && this.setState({hover: false})}}\r\n                        onContextMenu={(e) => showNodeSwitchMenu(e, this.props.node, this.props.editor)}\r\n                        ref={connectDragSource}>\r\n                    {this.props.children}\r\n                </div>\r\n                {(isOverCurrent && this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                {(this.state.hover && this.props.editor.getSharedState().draggedNode) && <div className=\"drop-indicator\" />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragifyBlock(DropifyBlock(SectionNode))","\r\nimport { getEventTransfer } from 'slate-react';\r\n\r\nexport default function LoggingPlugin(options) {\r\n    return {\r\n        onCopy(event, editor, next) {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"copy\",\r\n                content: editor.value.fragment.text\r\n            });\r\n            \r\n            next();\r\n        },\r\n\r\n        onCut(event, editor, next) {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"cut\",\r\n                content: editor.value.fragment.text\r\n            });\r\n            \r\n            next();\r\n        },\r\n\r\n        onPaste(event, editor, next) {\r\n            var transfer = getEventTransfer(event);\r\n\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"paste\",\r\n                paste_type: transfer.type,\r\n                content: transfer.fragment ? transfer.fragment.text : \"\",\r\n                content_html: transfer.fragment ? \"\" : transfer.html  // only include if there is no fragment (pasted from external)\r\n            });\r\n            \r\n            next();\r\n        },\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DragifyBlock from '../DragifyBlock';\r\nimport DropifyBlock from '../DropifyBlock';\r\nimport { handleMouseUp } from '../GraphPlugin';\r\n\r\nclass PlainBlockNode extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {\r\n        this.setState({hover: newHover});\r\n    }\r\n\r\n    render() {\r\n        const { isOverCurrent, connectDropTarget, connectDragSource, isDragging } = this.props\r\n\r\n        const classes = \"plain-block \" + (isDragging ? \" display-none\" : \"\")\r\n\r\n        return connectDropTarget(\r\n            <div className='block-outer-div'>\r\n                {(isOverCurrent && !this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                <div className={classes} {...this.props.attributes} \r\n                        onMouseUp={() => {handleMouseUp(this.props.editor, this.props.node) && this.setState({hover: false})}} \r\n                        onMouseEnter={() => this.setHover(true)} onMouseOver={() => this.setHover(true)} onMouseLeave={() => this.setHover(false)}\r\n                        ref={connectDragSource}>\r\n                    {this.props.children}\r\n                </div>\r\n                {(isOverCurrent && this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                {(this.state.hover && this.props.editor.getSharedState().draggedNode) && <div className=\"drop-indicator\" />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragifyBlock(DropifyBlock(PlainBlockNode))","import React from 'react'\r\nimport { cx, css } from 'emotion'\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ className, active, reversed, ...props }, ref) => (\r\n    <span\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        className,\r\n        css`\r\n          cursor: pointer;\r\n          color: ${reversed\r\n            ? active ? 'white' : '#aaa'\r\n            : active ? 'black' : '#ccc'};\r\n        `\r\n      )}\r\n    />\r\n  )\r\n)\r\n\r\nexport const EditorValue = React.forwardRef(\r\n  ({ className, value, ...props }, ref) => {\r\n    const textLines = value.document.nodes\r\n      .map(node => node.text)\r\n      .toArray()\r\n      .join('\\n')\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...props}\r\n        className={cx(\r\n          className,\r\n          css`\r\n            margin: 30px -20px 0;\r\n          `\r\n        )}\r\n      >\r\n        <div\r\n          className={css`\r\n            font-size: 14px;\r\n            padding: 5px 20px;\r\n            color: #404040;\r\n            border-top: 2px solid #eeeeee;\r\n            background: #f8f8f8;\r\n          `}\r\n        >\r\n          Slate's value as text\r\n        </div>\r\n        <div\r\n          className={css`\r\n            color: #404040;\r\n            font: 12px monospace;\r\n            white-space: pre-wrap;\r\n            padding: 10px 20px;\r\n            div {\r\n              margin: 0 0 0.5em;\r\n            }\r\n          `}\r\n        >\r\n          {textLines}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport const Icon = React.forwardRef(({ className, ...props }, ref) => (\r\n  <span\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      'material-icons',\r\n      className,\r\n      css`\r\n        font-size: 18px;\r\n        vertical-align: text-bottom;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Instruction = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        white-space: pre-wrap;\r\n        margin: 0 -20px 10px;\r\n        padding: 10px 20px;\r\n        font-size: 14px;\r\n        background: #f8f8e8;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Menu = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        & > * {\r\n          display: inline-block;\r\n        }\r\n\r\n        & > * + * {\r\n          margin-left: 15px;\r\n        }\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Toolbar = React.forwardRef(({ className, ...props }, ref) => (\r\n  <Menu\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        position: relative;\r\n        padding: 1px 18px 17px;\r\n        margin: 0 -20px;\r\n        border-bottom: 2px solid #eee;\r\n        margin-bottom: 20px;\r\n      `\r\n    )}\r\n  />\r\n))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { css } from 'emotion'\r\nimport { Button, Icon, Menu } from './SlateComponents.js'\r\n\r\n// adapted from https://github.com/ianstormtaylor/slate/blob/master/site/examples/hovering-toolbar.js\r\n\r\nconst MarkButton = ({ editor, type, icon }) => {\r\n  const { value } = editor\r\n  const isActive = value.blocks && value.blocks.some(block => block.type === type)\r\n  return (\r\n    <Button\r\n      reversed\r\n      active={isActive}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        editor.setBlocks((isActive ? \"paragraph\" : type))\r\n\r\n        editor.getSharedState().logger.logEvent({\r\n          'type': 'set_title' + (isActive ? \"_disabled\" : \"_enabled\"),\r\n      });\r\n      }}\r\n    >\r\n      <Icon>{icon}</Icon>\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst HoverMenu = React.forwardRef(({ editor }, ref) => {\r\n  const root = window.document.getElementById('root')\r\n  return ReactDOM.createPortal(\r\n    <Menu\r\n      ref={ref}\r\n      className={css`\r\n        padding: 8px 7px 6px;\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: -10000px;\r\n        left: -10000px;\r\n        margin-top: -6px;\r\n        opacity: 0;\r\n        background-color: #222;\r\n        border-radius: 4px;\r\n        transition: opacity 0.25s;\r\n      `}\r\n    >\r\n      <MarkButton editor={editor} type=\"heading\" icon=\"Heading\" />\r\n    </Menu>,\r\n    root\r\n  )\r\n})\r\n\r\n\r\nclass HoveringMenu extends React.Component {\r\n\r\n  menuRef = React.createRef()\r\n\r\n  componentDidMount = () => {\r\n    this.updateMenu()\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    this.updateMenu()\r\n  }\r\n\r\n  updateMenu = () => {\r\n    const menu = this.menuRef.current\r\n    if (!menu) return\r\n\r\n    const value = this.props.editor.value\r\n    const { fragment, selection } = value\r\n\r\n    if (selection.isBlurred || selection.isCollapsed || fragment.text === '') {\r\n      menu.removeAttribute('style')\r\n      return\r\n    }\r\n\r\n    const native = window.getSelection()\r\n    const range = native.getRangeAt(0)\r\n    const rect = range.getBoundingClientRect()\r\n    menu.style.opacity = 1\r\n    menu.style.top = `${rect.top + window.pageYOffset - menu.offsetHeight}px`\r\n\r\n    menu.style.left = `${rect.left +\r\n      window.pageXOffset -\r\n      menu.offsetWidth / 2 +\r\n      rect.width / 2}px`\r\n  }\r\n\r\n  render = (props, editor, next) => {\r\n    return (\r\n        <HoverMenu ref={this.menuRef} editor={this.props.editor} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default function HoveringMenuPlugin(options) {\r\n    return {\r\n        renderEditor (props, editor, next) {\r\n            const children = next()\r\n            return (\r\n              <React.Fragment>\r\n                {children}\r\n                <HoveringMenu editor={editor} />\r\n              </React.Fragment>\r\n            )\r\n          },\r\n\r\n        renderBlock (props, editor, next) {\r\n            switch (props.node.type) {\r\n            case 'heading':\r\n                return <u><b>{props.children}</b></u>\r\n            default:\r\n                return next()\r\n            }\r\n        },\r\n    }\r\n}","import { Block, Text } from 'slate';\r\n\r\nexport const schema = {\r\n    inlines: {\r\n        link: {\r\n            parent: [{type: ''}, {type: 'paragraph'}],\r\n\r\n            normalize: (editor, error) => {\r\n                switch (error.code) {\r\n                    case 'parent_type_invalid':\r\n                        editor.unwrapInlineByKey(error.node.key)\r\n                        return\r\n\r\n                    default:\r\n                        console.log(\"unhandled link inline err \" + error);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    blocks: {\r\n        section: {\r\n            parent: {object: \"document\"},\r\n            nodes: [\r\n                {\r\n                    match: {type: 'link'},\r\n                    min: 1,\r\n                    max: 1,\r\n                },\r\n                {\r\n                    match: {type: 'body'},\r\n                    min: 1,\r\n                    max: 1,\r\n                }\r\n            ],\r\n\r\n            normalize: (editor, error) => {\r\n                switch (error.code) {\r\n                    case 'child_max_invalid':\r\n                        // if we somehow end up with multiple headings/bodies inside the section, make it a paragraph move it after the section                     \r\n                        // this can happen if the enter key is pressed (splits the current node)\r\n                        moveBlockAfterSection(editor, error.child, error.node)\r\n                        editor.setNodeByKey(error.child.key, 'paragraph')\r\n                        return\r\n\r\n                    case 'child_type_invalid':\r\n                        // if we somehow end up with a paragraph inside the section, put the content in the heading instead                     \r\n                        if (error.child.object === \"text\" || error.child.type === \"paragraph\") {\r\n                            const linkNode = error.node.nodes.find(node => node.type === 'link')\r\n                            if (linkNode) {\r\n                                const textNode = linkNode.getLastText()\r\n                                const offset = textNode.text ? textNode.text.length : 0\r\n                                editor.insertTextByKey(textNode.key, offset, error.child.text)\r\n                            } else {\r\n                                addMissing(editor, error, \"link\", error.child.text)\r\n                            }\r\n                        }\r\n\r\n                        editor.removeNodeByKey(error.child.key)\r\n                        \r\n                        return\r\n                    \r\n                    case 'child_min_invalid':\r\n                        var hasChildTypes = [];\r\n                        error.node.nodes.forEach(node => {\r\n                            hasChildTypes.push(node.type)\r\n                        })\r\n                        \r\n                        if (!hasChildTypes.includes(\"link\")) {\r\n                            addMissing(editor, error, \"link\")\r\n                        }\r\n\r\n                        if (!hasChildTypes.includes(\"body\")) {\r\n                            addMissing(editor, error, \"body\")\r\n                        }\r\n\r\n                        return\r\n                    \r\n                    case 'parent_object_invalid':\r\n                        // a section has ended up inside another section - shift it out\r\n                        moveBlockAfterSection(editor, error.node, error.parent)\r\n                        return\r\n\r\n                    default:\r\n                        console.log(\"unhandled section schema err \" + error);\r\n                        \r\n                        return\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nfunction moveBlockAfterSection(editor, blockToMove, sectionToMoveAfter) {\r\n    const sectionIndex = editor.value.document.nodes.indexOf(sectionToMoveAfter)\r\n    if (sectionIndex === -1) {\r\n        return\r\n    }\r\n    editor.moveNodeByKey(blockToMove.key, editor.value.document.key, sectionIndex + 1)\r\n}\r\n\r\nfunction addMissing(editor, error, nodeType, text=\"\") {\r\n    const node_id = error.node.data.get(\"node_id\")\r\n    const graphNode = editor.getSharedState().getGraphNode(node_id)\r\n    if (!text) {\r\n        text = nodeType === \"link\" ? graphNode.getShortText() : graphNode.getLongText()\r\n    }\r\n    const index = nodeType === \"link\" ? 0 : 1\r\n\r\n    addBlock(editor, error.node, nodeType, index, node_id, text)\r\n}\r\n\r\nfunction addBlock(editor, parent, nodeType, index, id, text) {\r\n    var block = Block.create({\r\n        type: nodeType,\r\n        data: {node_id: id},\r\n        nodes: [Text.create({'text': text})]\r\n    })\r\n    editor.insertNodeByKey(parent.key, index, block);\r\n    \r\n}","import React from 'react';\r\nimport { Editor } from 'slate-react';\r\nimport { Value } from 'slate';\r\nimport NodePlugin from './NodePlugin.js';\r\nimport GraphPlugin from './GraphPlugin.js';\r\nimport LoggingPlugin from './LoggingPlugin.js';\r\nimport ReorderPlugin from './ReorderPlugin.js';\r\nimport HoveringMenu from './HoveringMenu.js';\r\nimport { schema } from './Schema.js'\r\n\r\nconst plugins = {\r\n    'graph': [\r\n        LoggingPlugin(),\r\n        GraphPlugin(),\r\n        NodePlugin(),\r\n        ReorderPlugin(),\r\n    ],\r\n    'plain': [\r\n        LoggingPlugin(),\r\n        HoveringMenu(),\r\n    ]\r\n};\r\n\r\nconst emptyValue = Value.fromJSON({\r\n    document: {\r\n        nodes: [\r\n            {\r\n                object: 'block',\r\n                type: 'paragraph',\r\n                nodes: [\r\n                    {\r\n                        object: 'text',\r\n                        text: '',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n});\r\n\r\nclass DocEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.props.sharedState.editor_ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const sharedState = this.props.sharedState\r\n        sharedState.getSavedDocValue((savedValue) => {\r\n            this.setState({\r\n                value: savedValue ? Value.fromJSON(savedValue) : emptyValue\r\n            }, sharedState.editorHasLoaded)\r\n        })\r\n    }\r\n\r\n    state = {\r\n        value: undefined, // don't display editor until the db's saved document loads\r\n        mapHasLoaded: false, // force a refresh of the component once the sharedState.map has loaded so section refs are hooked up to graph nodes\r\n    }\r\n    \r\n    queries = {\r\n        getSharedState: () => {\r\n            return this.props.sharedState;\r\n        },\r\n        getValue: () => {\r\n            return this.state.value;\r\n        },\r\n        mapHasLoaded: () => {\r\n            this.setState({ mapHasLoaded: true })\r\n        }\r\n    }\r\n\r\n    onChange = ({ value }) => {\r\n        this.setState({ value })\r\n    }\r\n\r\n    render() {\r\n        const plainClass = this.props.sharedState.condition === \"plain\" ? \" slate-editor-no-graph\" : \"\"\r\n\r\n        if (this.state.value !== undefined) {\r\n            return <Editor\r\n                className={\"slate-editor\" + plainClass}\r\n                key={this.state.mapHasLoaded ? \"map-loading\" : \"map-loaded\"}\r\n                ref={this.props.sharedState.editor_ref}\r\n                schema={schema}\r\n                plugins={plugins[this.props.sharedState.condition]}\r\n                queries={this.queries}\r\n                value={this.state.value}\r\n                onChange={this.onChange}\r\n                placeholder=\"Write your document here...\"\r\n                spellCheck={false}\r\n            />\r\n        } else {\r\n            return <p></p>\r\n        }\r\n    }\r\n}\r\n\r\nexport default DocEditor;","import SVG from 'svg.js';\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\n(function e(t, n, r) {\r\n    function s(o, u) {\r\n        if (!n[o]) {\r\n            if (!t[o]) {\r\n                // eslint-disable-next-line no-sequences\r\n                var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\r\n            }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\r\n                var n = t[o][1][e];return s(n ? n : e);\r\n            }, l, l.exports, e, t, n, r);\r\n        }return n[o].exports;\r\n    }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {\r\n        s(r[o]);\r\n    }return s;\r\n})({ 1: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Id = require(\"idy\"),\r\n            SetOrGet = require(\"set-or-get\"),\r\n            IterateObject = require(\"iterate-object\"),\r\n            Deffy = require(\"deffy\");\r\n\r\n        // Internal cache\r\n        var _connections = {},\r\n            _betweenTwoBubbles = {},\r\n            container = null,\r\n            markers = null;\r\n\r\n        function delete_connectable(con) {\r\n            con.line.remove();\r\n            con.marker.remove();\r\n\r\n            _connections[con.source.id()] = _connections[con.source.id()].filter(e => e !== con);\r\n            _connections[con.target.id()] = _connections[con.target.id()].filter(e => e !== con);\r\n\r\n            var toString = function() {\r\n                var ids = [con.source.id(), con.target.id()],\r\n                    id1 = ids.join(\"->\"),\r\n                    id2 = ids.reverse().join(\"->\");\r\n\r\n                con._ = con.id = id1;\r\n\r\n                if (_betweenTwoBubbles[id2]) {\r\n                    con._ = id2;\r\n                    return id2;\r\n                }\r\n\r\n                con.id = id1;\r\n                return id1;\r\n            }\r\n\r\n            _betweenTwoBubbles[toString()] = _betweenTwoBubbles[toString()].filter(e => e !== con);\r\n            con.source.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any other connectables looking for drag events\r\n        }\r\n\r\n        /**\r\n         * connectable\r\n         * Connects two elements.\r\n         *\r\n         * @name connectable\r\n         * @function\r\n         * @param {Object} options An object containing the following fields:\r\n         *\r\n         *  - `container` (SVGElement): The line elements container.\r\n         *  - `markers` (SVGElement): The marker elements container.\r\n         *  - `padEllipse` (Boolean): If `true`, the line coordinates will be placed with a padding.\r\n         *\r\n         * @param {SVGElement} elmTarget The target SVG element.\r\n         * @return {Object} The connectable object containing:\r\n         *\r\n         *  - `source` (SVGElement): The source element.\r\n         *  - `target` (SVGElement): The target element.\r\n         *  - `line` (SVGElement): The line element.\r\n         *  - `marker` (SVGElement): The marker element.\r\n         *  - [`computeLineCoordinates` (Function)](#computelinecoordinatescon)\r\n         *  - [`update` (Function)](#update)\r\n         *  - [`setLineColor` (Function)](#setlinecolorcolor-c)\r\n         */\r\n        function connectable(options, elmTarget) {\r\n\r\n            var con = {};\r\n\r\n            if (elmTarget === undefined) {\r\n                elmTarget = options;\r\n                options = {};\r\n            }\r\n\r\n            container = options.container || container;\r\n            var elmSource = this;\r\n            markers = options.markers || markers;\r\n\r\n            options.k = options.k || 100;\r\n            options.kk = options.kk || 10;\r\n\r\n            var marker = markers.marker(10, 10).addClass('connector-marker'),\r\n                markerId = \"triangle-\" + Id(),\r\n                line = container.path().attr(\"marker-end\", \"url(#\" + markerId + \")\").fill(\"none\").stroke({width: 3});\r\n            \r\n            if (options.specialCoords) {\r\n                line.addClass('connector-line');\r\n            }\r\n\r\n            marker.attr({\r\n                id: markerId,\r\n                viewBox: \"0 0 10 10\",\r\n                refX: \"0\",\r\n                refY: \"5\",\r\n                markerUnits: \"strokeWidth\",\r\n                markerWidth: \"4\",\r\n                markerHeight: \"5\"\r\n            });\r\n\r\n            marker.path().attr({\r\n                d: \"M 0 0 L 10 5 L 0 10 z\"\r\n            });\r\n\r\n            // Append the SVG elements\r\n            con.source = elmSource;\r\n            con.target = elmTarget;\r\n            con.line = line;\r\n            con.marker = marker;\r\n\r\n\r\n            if (options.specialCoords) {\r\n                // remove this when node is deleted\r\n                // con.source.on(\"deletenode\", () => con.source.node.instance.delete_connectable(con));\r\n                // con.target.on(\"deletenode\", () => con.target.node.instance.delete_connectable(con));\r\n            }\r\n\r\n            SetOrGet(_connections, con.source.id(), []).push(con);\r\n            SetOrGet(_connections, con.target.id(), []).push(con);\r\n\r\n            SetOrGet(_betweenTwoBubbles, {\r\n                toString: function toString() {\r\n                    var ids = [con.source.id(), con.target.id()],\r\n                        id1 = ids.join(\"->\"),\r\n                        id2 = ids.reverse().join(\"->\");\r\n\r\n                    con._ = con.id = id1;\r\n\r\n                    if (_betweenTwoBubbles[id2]) {\r\n                        con._ = id2;\r\n                        return id2;\r\n                    }\r\n\r\n                    con.id = id1;\r\n                    return id1;\r\n                }\r\n            }, []).push(con);\r\n            \r\n\r\n            /**\r\n             * computeLineCoordinates\r\n             * The function that computes the new coordinates.\r\n             * It can be overriden with a custom function.\r\n             *\r\n             * @name computeLineCoordinates\r\n             * @function\r\n             * @param {Connectable} con The connectable instance.\r\n             * @return {Object} An object containing the `x1`, `x2`, `y1` and `y2` coordinates.\r\n             */\r\n            con.computeLineCoordinates = function (cons) {\r\n\r\n                var output = [],\r\n                    l = cons.length;\r\n\r\n                IterateObject(cons, function (con, i) {\r\n\r\n                    var sT = con.source.transform(),\r\n                        tT = con.target.transform(),\r\n                        sB = con.source.bbox(),\r\n                        tB = con.target.bbox(),\r\n                        x1 = sT.x + sB.width / 2,\r\n                        y1 = sT.y + sB.height / 2,\r\n                        x2 = tT.x + tB.width / 2,\r\n                        y2 = tT.y + tB.height / 2,\r\n                        cx = (x1 + x2) / 2,\r\n                        cy = (y1 + y2) / 2,\r\n                        dx = Math.abs((x1 - x2) / 2),\r\n                        dy = Math.abs((y1 - y2) / 2),\r\n                        dd = null,\r\n                        out = {\r\n                        x1: x1,\r\n                        y1: y1,\r\n                        x2: x2,\r\n                        y2: y2,\r\n                        ex: x1,\r\n                        ey: y1\r\n                    };\r\n\r\n                    if (i !== (l - 1) / 2) {\r\n                        dd = Math.sqrt(dx * dx + dy * dy);\r\n                        out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                        out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                    }\r\n                    output.push(out);\r\n                });\r\n\r\n                return output;\r\n            };\r\n\r\n            if (options.specialCoords) {\r\n                con.computeLineCoordinates = function (cons) {\r\n\r\n                    var output = [],\r\n                        l = cons.length;\r\n\r\n                    IterateObject(cons, function (con, i) {\r\n\r\n                        var sT = con.source.transform(),\r\n                            tT = con.target.transform(),\r\n                            sB = con.source.bbox(),\r\n                            tB = con.target.bbox(),\r\n                            x1 = sT.x + sB.width / 2,\r\n                            y1 = sT.y + sB.height / 2 - 20;\r\n\r\n                        var xDiff = sT.x - tT.x;\r\n                        var yDiff = sT.y - tT.y;\r\n                        var x2, y2;\r\n                        if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n                            y2 = tT.y + tB.height / 2 - 20;\r\n                            if (xDiff < 0) {\r\n                                x2 = tT.x - 10;\r\n                            } else {\r\n                                x2 = tT.x + tB.width - 30;\r\n                            }\r\n                        } else {\r\n                            x2 = tT.x + tB.width / 2 - 20;\r\n                            if (yDiff < 0) {\r\n                                y2 = tT.y - 10;\r\n                            } else {\r\n                                y2 = tT.y + tB.height - 30;\r\n                            }\r\n                        }\r\n\r\n                        var cx = (x1 + x2) / 2,\r\n                            cy = (y1 + y2) / 2,\r\n                            dx = Math.abs((x1 - x2) / 2),\r\n                            dy = Math.abs((y1 - y2) / 2),\r\n                            dd = null,\r\n                            out = {\r\n                            x1: x1,\r\n                            y1: y1,\r\n                            x2: x2,\r\n                            y2: y2,\r\n                            ex: x1,\r\n                            ey: y1\r\n                        };\r\n\r\n                        if (i !== (l - 1) / 2) {\r\n                            dd = Math.sqrt(dx * dx + dy * dy);\r\n                            out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                            out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                        }\r\n                        output.push(out);\r\n                    });\r\n\r\n                    return output;\r\n                };\r\n            }\r\n\r\n            if (options.padEllipse) {\r\n                con.computeLineCoordinates = function (cons) {\r\n\r\n                    var output = [],\r\n                        l = cons.length;\r\n\r\n                    IterateObject(cons, function (con, i) {\r\n\r\n                        var elmS = con.source.node.querySelector(\"ellipse\") || con.source.node.querySelector(\"circle\"),\r\n                            elmT = con.target.node.querySelector(\"ellipse\") || con.target.node.querySelector(\"circle\"),\r\n                            xR1,\r\n                            xR2,\r\n                            yR1,\r\n                            yR2,\r\n                            sT = con.source.transform(),\r\n                            tT = con.target.transform()\r\n\r\n                        if (elmS.tagName === \"circle\") {\r\n                            xR1 = yR1 = parseFloat(elmS.getAttribute(\"r\"));\r\n                            xR2 = yR2 = parseFloat(elmT.getAttribute(\"r\"));\r\n                        } else {\r\n                            xR1 = parseFloat(elmS.getAttribute(\"rx\"));\r\n                            yR1 = parseFloat(elmS.getAttribute(\"ry\"));\r\n\r\n                            xR2 = parseFloat(elmT.getAttribute(\"rx\"));\r\n                            yR2 = parseFloat(elmT.getAttribute(\"ry\"));\r\n                        }\r\n\r\n                        // Get centers\r\n                        var sx = sT.x + xR1 / 2,\r\n                            sy = sT.y + yR1 / 2,\r\n                            tx = tT.x + xR2 / 2,\r\n                            ty = tT.y + yR2 / 2\r\n\r\n                        // Calculate distance from source center to target center\r\n                        ,\r\n                            dx = tx - sx,\r\n                            dy = ty - sy,\r\n                            d = Math.sqrt(dx * dx + dy * dy)\r\n\r\n                        // Construct unit vector between centers\r\n                        ,\r\n                            ux = dx / d,\r\n                            uy = dy / d\r\n\r\n                        // Point on source circle\r\n                        ,\r\n                            cx1 = sx + xR1 * ux,\r\n                            cy1 = sy + yR1 * uy\r\n\r\n                        // Point on target circle\r\n                        ,\r\n                            cx2 = sx + (d - xR2 - 5) * ux,\r\n                            cy2 = sy + (d - yR2 - 5) * uy;\r\n\r\n                        var x1 = cx1 + xR1 / 2,\r\n                            y1 = cy1 + yR1 / 2,\r\n                            x2 = cx2 + xR2 / 2,\r\n                            y2 = cy2 + yR2 / 2\r\n                        // TODO\r\n                        //  , step = (Math.PI / 2 / l) * (i % 2 !== 0 ? 1 : -1)\r\n                        //  , angle = 0\r\n                        ;\r\n\r\n                        //if (i !== (l - 1) / 2) {\r\n                        //    angle = step * (i + 1);\r\n                        //}\r\n\r\n\r\n                        //var xC1 = (sT.x + xR1)\r\n                        //  , yC1 = (sT.y + yR1)\r\n                        //  , xC2 = (tT.y + xR2)\r\n                        //  , yC2 = (tT.y + yR2)\r\n                        //  , ddx1 = x1 - xC1\r\n                        //  , ddy1 = y1 - yC1\r\n                        //  , ddx2 = x2 - xC2\r\n                        //  , ddy2 = y2 - yC2\r\n                        //  , cosAngle = Math.cos(angle)\r\n                        //  , sinAngle = Math.sin(angle)\r\n                        //  , cosAngleM = Math.cos(-angle)\r\n                        //  , sinAngleM = Math.sin(-angle)\r\n                        //  ;\r\n\r\n                        // TODO This should change the points to arrange them on the circle\r\n                        //\r\n                        // x1 = ddx1 * cosAngle - ddy1 * sinAngle + xC1;\r\n                        // y1 = ddx1 * sinAngle + ddy1 * cosAngle + yC1;\r\n\r\n                        // x2 = ddx2 * cosAngleM - ddy2 * sinAngle + xC2;\r\n                        // y2 = ddx2 * sinAngleM + ddy2 * cosAngle + yC2;\r\n\r\n                        // ===================\r\n                        // x1 = cx1 + ddx1 * Math.cos(angle) - ddy1 * Math.sin(angle)\r\n                        // y1 = cy1 + ddx1 * Math.sin(angle) - ddy1 * Math.cos(angle)\r\n\r\n                        //x2 = cx2 + ddx2 * Math.cos(angle) - ddy2 * Math.sin(angle) + xR2\r\n                        //y2 = cy2 + ddx2 * Math.sin(angle) - ddy2 * Math.cos(angle) + yR2\r\n\r\n                        var cx = (x1 + x2) / 2,\r\n                            cy = (y1 + y2) / 2,\r\n                            dd = null,\r\n                            out = {\r\n                            x1: x1,\r\n                            y1: y1,\r\n                            x2: x2,\r\n                            y2: y2,\r\n                            ex: x1,\r\n                            ey: y1\r\n                        };\r\n\r\n                        if (isNaN(out.x1)) {\r\n                            out.x1 = sT.x + xR1 * 2;\r\n                            out.y1 = sT.y + yR1 / 2;\r\n                            out.x2 = sT.x;\r\n                            out.y2 = out.y1;\r\n                            out.ex = (out.x1 + out.x2) / 2;\r\n                            out.ey = out.y1 - options.kk * (i + 1);\r\n                        } else {\r\n                            dx = Math.abs((x1 - x2) / 2);\r\n                            dy = Math.abs((y1 - y2) / 2);\r\n\r\n                            if (i !== (l - 1) / 2) {\r\n                                dd = Math.sqrt(dx * dx + dy * dy);\r\n                                out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                                out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                            }\r\n                        }\r\n\r\n                        output.push(out);\r\n                    });\r\n\r\n                    return output;\r\n                };\r\n            }\r\n\r\n            elmSource.cons = elmSource.cons || [];\r\n            elmSource.cons.push(con);\r\n\r\n            /**\r\n             * update\r\n             * Updates the line coordinates.\r\n             *\r\n             * @name update\r\n             * @function\r\n             * @return {undefined}\r\n             */\r\n            con.update = function () {\r\n                var cons = Deffy(_betweenTwoBubbles[con._], []),\r\n                    results = con.computeLineCoordinates(cons);\r\n\r\n                IterateObject(results, function (r, i) {\r\n                    cons[i].line.plot(\"M\" + r.x1 + \" \" + r.y1 + \" Q\" + r.ex + \" \" + r.ey + \" \" + r.x2 + \" \" + r.y2);\r\n                });\r\n            };\r\n\r\n            con.update();\r\n            elmSource.on(\"dragmove\", con.update);\r\n            elmTarget.on(\"dragmove\", con.update);\r\n\r\n            /**\r\n             * setLineColor\r\n             * Sets the line color.\r\n             *\r\n             * @name setLineColor\r\n             * @function\r\n             * @param {String} color The new color.\r\n             * @param {Connectable} c The connectable instance.\r\n             * @return {undefined}\r\n             */\r\n            con.setLineColor = function (color, c) {\r\n                c = c || this;\r\n                c.line.stroke(color);\r\n                c.marker.fill(color);\r\n            };\r\n\r\n            return con;\r\n        }\r\n\r\n        if (typeof SVG === \"function\") {\r\n            SVG.extend(SVG.Element, {\r\n                connectable: connectable,\r\n                delete_connectable: delete_connectable\r\n            });\r\n        } else if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") {\r\n            throw new Error(\"SVG.js is not loaded but it is required.\");\r\n        }\r\n\r\n        module.exports = connectable;\r\n    }, { \"deffy\": 2, \"idy\": 4, \"iterate-object\": 5, \"set-or-get\": 6 }], 2: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Typpy = require(\"typpy\");\r\n\r\n        /**\r\n         * Deffy\r\n         * Computes a final value by providing the input and default values.\r\n         *\r\n         * @name Deffy\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Anything|Function} def The default value or a function getting the\r\n         * input value as first argument.\r\n         * @param {Object|Boolean} options The `empty` value or an object containing\r\n         * the following fields:\r\n         *\r\n         *  - `empty` (Boolean): Handles the input value as empty field (`input || default`). Default is `false`.\r\n         *\r\n         * @return {Anything} The computed value.\r\n         */\r\n        function Deffy(input, def, options) {\r\n\r\n            // Default is a function\r\n            if (typeof def === \"function\") {\r\n                return def(input);\r\n            }\r\n\r\n            options = Typpy(options) === \"boolean\" ? {\r\n                empty: options\r\n            } : {\r\n                empty: false\r\n            };\r\n\r\n            // Handle empty\r\n            if (options.empty) {\r\n                return input || def;\r\n            }\r\n\r\n            // Return input\r\n            if (Typpy(input) === Typpy(def)) {\r\n                return input;\r\n            }\r\n\r\n            // Return the default\r\n            return def;\r\n        }\r\n\r\n        module.exports = Deffy;\r\n    }, { \"typpy\": 3 }], 3: [function (require, module, exports) {\r\n        /**\r\n         * Typpy\r\n         * Gets the type of the input value or compares it\r\n         * with a provided type.\r\n         *\r\n         * Usage:\r\n         *\r\n         * ```js\r\n         * Typpy({}) // => \"object\"\r\n         * Typpy(42, Number); // => true\r\n         * Typpy.get([], \"array\"); => true\r\n         * ```\r\n         *\r\n         * @name Typpy\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Constructor|String} target The target type.\r\n         * It could be a string (e.g. `\"array\"`) or a\r\n         * constructor (e.g. `Array`).\r\n         * @return {String|Boolean} It returns `true` if the\r\n         * input has the provided type `target` (if was provided),\r\n         * `false` if the input type does *not* have the provided type\r\n         * `target` or the stringified type of the input (always lowercase).\r\n         */\r\n        function Typpy(input, target) {\r\n            if (arguments.length === 2) {\r\n                return Typpy.is(input, target);\r\n            }\r\n            return Typpy.get(input, true);\r\n        }\r\n\r\n        /**\r\n         * Typpy.is\r\n         * Checks if the input value has a specified type.\r\n         *\r\n         * @name Typpy.is\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Constructor|String} target The target type.\r\n         * It could be a string (e.g. `\"array\"`) or a\r\n         * constructor (e.g. `Array`).\r\n         * @return {Boolean} `true`, if the input has the same\r\n         * type with the target or `false` otherwise.\r\n         */\r\n        Typpy.is = function (input, target) {\r\n            return Typpy.get(input, typeof target === \"string\") === target;\r\n        };\r\n\r\n        /**\r\n         * Typpy.get\r\n         * Gets the type of the input value. This is used internally.\r\n         *\r\n         * @name Typpy.get\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Boolean} str A flag to indicate if the return value\r\n         * should be a string or not.\r\n         * @return {Constructor|String} The input value constructor\r\n         * (if any) or the stringified type (always lowercase).\r\n         */\r\n        Typpy.get = function (input, str) {\r\n\r\n            if (typeof input === \"string\") {\r\n                return str ? \"string\" : String;\r\n            }\r\n\r\n            if (null === input) {\r\n                return str ? \"null\" : null;\r\n            }\r\n\r\n            if (undefined === input) {\r\n                return str ? \"undefined\" : undefined;\r\n            }\r\n\r\n            // eslint-disable-next-line no-self-compare\r\n            if (input !== input) {\r\n                return str ? \"nan\" : NaN;\r\n            }\r\n\r\n            return str ? input.constructor.name.toLowerCase() : input.constructor;\r\n        };\r\n\r\n        module.exports = Typpy;\r\n    }, {}], 4: [function (require, module, exports) {\r\n        /**\r\n         * Idy\r\n         * Generates a random id and potentially unique.\r\n         *\r\n         * @name Idy\r\n         * @function\r\n         * @param {Number} length The id length (default: 10).\r\n         * @return {String} The generated id.\r\n         */\r\n        function Idy(length) {\r\n            length = length || 10;\r\n            return Math.random().toString(35).substr(2, length);\r\n        }\r\n\r\n        module.exports = Idy;\r\n    }, {}], 5: [function (require, module, exports) {\r\n        /**\r\n         * IterateObject\r\n         * Iterates an object. Note the object field order may differ.\r\n         *\r\n         * @name IterateObject\r\n         * @function\r\n         * @param {Object} obj The input object.\r\n         * @param {Function} fn A function that will be called with the current value, field name and provided object.\r\n         * @return {Function} The `IterateObject` function.\r\n         */\r\n        function IterateObject(obj, fn) {\r\n            var i = 0,\r\n                keys = [];\r\n\r\n            if (Array.isArray(obj)) {\r\n                for (; i < obj.length; ++i) {\r\n                    if (fn(obj[i], i, obj) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                keys = Object.keys(obj);\r\n                for (; i < keys.length; ++i) {\r\n                    if (fn(obj[keys[i]], keys[i], obj) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        module.exports = IterateObject;\r\n    }, {}], 6: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Deffy = require(\"deffy\");\r\n\r\n        /**\r\n         * SetOrGet\r\n         * Sets or gets an object field value.\r\n         *\r\n         * @name SetOrGet\r\n         * @function\r\n         * @param {Object|Array} input The cache/input object.\r\n         * @param {String|Number} field The field you want to update/create.\r\n         * @param {Object|Array} def The default value.\r\n         * @return {Object|Array} The field value.\r\n         */\r\n        function SetOrGet(input, field, def) {\r\n            return input[field] = Deffy(input[field], def);\r\n        }\r\n\r\n        module.exports = SetOrGet;\r\n    }, { \"deffy\": 7 }], 7: [function (require, module, exports) {\r\n        arguments[4][2][0].apply(exports, arguments);\r\n    }, { \"dup\": 2, \"typpy\": 8 }], 8: [function (require, module, exports) {\r\n        arguments[4][3][0].apply(exports, arguments);\r\n    }, { \"dup\": 3 }] }, {}, [1]);","import React from 'react';\r\nimport LinkNode from './nodes/LinkNode.js'\r\nimport BodyNode from './nodes/BodyNode.js'\r\nimport SectionNode from './nodes/SectionNode.js'\r\nimport { Block } from 'slate'\r\nimport { getEventTransfer } from 'slate-react';\r\nimport { deleteNode } from './NodeSwitch.js'\r\n\r\nexport default function LinkPlugin(options) {\r\n    return {\r\n        commands: {\r\n            wrapLinkAtSelection(editor, node_id) {\r\n                return editor.wrapInline({\r\n                    type: \"link\",\r\n                    data: { \"node_id\": node_id, \"nodeStyle\": \"Inline\" }\r\n                });\r\n            }\r\n        },\r\n\r\n        renderInline(props, editor, next) {\r\n            if (props.node.type === 'link') {\r\n                var { ref, id } = getRefAndId(props, editor, \"short\");\r\n\r\n                return <LinkNode ref={ref} {...props} linkStyle=\"inline\" sharedState={editor.getSharedState()} nodeId={id}/>\r\n            }\r\n\r\n            return next();\r\n        },\r\n\r\n        renderBlock(props, editor, next) {\r\n            var refAndId;\r\n\r\n            if (props.node.type === 'body') {\r\n                refAndId = getRefAndId(props, editor, \"long\");\r\n\r\n                // set up the placeholder text to only appear when the body is empty and no text is selected\r\n                var isEmpty = !props.node.text\r\n\r\n                var selectNode = () => {\r\n                    setTimeout(() => {editor.focus(); editor.moveToStartOfNode(props.node);}, 0)\r\n                }\r\n\r\n                return <BodyNode\r\n                            ref={refAndId.ref}\r\n                            {...props}\r\n                            sharedState={editor.getSharedState()}\r\n                            nodeId={refAndId.id}\r\n                            isEmpty={isEmpty}\r\n                            selectNode={selectNode}\r\n                        />\r\n\r\n            } else if (props.node.type === 'link') {\r\n                refAndId = getRefAndId(props, editor, \"short\");\r\n\r\n                return <LinkNode\r\n                            ref={refAndId.ref}\r\n                            {...props}\r\n                            linkStyle=\"heading\"\r\n                            sharedState={editor.getSharedState()}\r\n                            nodeId={refAndId.id}\r\n                        />\r\n\r\n            } else if (props.node.type === 'section') {\r\n                refAndId = getRefAndId(props, editor, \"section\");\r\n\r\n                return <SectionNode\r\n                    ref={refAndId.ref}\r\n                    {...props}\r\n                    sharedState={editor.getSharedState()}\r\n                    nodeId={refAndId.id}\r\n                />\r\n            }\r\n\r\n            return next();\r\n        },\r\n\r\n        onDrop(event, editor, next) {\r\n            // suppress drop events\r\n            // do not call next()\r\n        },\r\n\r\n        onPaste(event, editor, next) {\r\n            const getLinkInlines = (the_doc) => the_doc.filterDescendants(node => node.type === 'link' && node.object === 'inline')\r\n\r\n            var transfer = getEventTransfer(event);\r\n\r\n            if (transfer.type === \"fragment\") {\r\n\r\n                // if pasting into a link or body, just paste plain text, not a fragment\r\n                if (editor.value.blocks.some(block => block.type === \"link\" || block.type === \"body\")) {\r\n                    const textNoNewlines = transfer.fragment.text.replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                    editor.insertText(textNoNewlines)\r\n\r\n                    // NB: no next() call, so this plugin must be the last one in the stack that handles onPaste()\r\n                    return\r\n                }\r\n\r\n                const fragmentInlines = getLinkInlines(transfer.fragment)\r\n\r\n                if (fragmentInlines) {\r\n                    const docInlines = getLinkInlines(editor.value.document)\r\n                    const usedIds = []\r\n                    docInlines.forEach(inline => {usedIds.push({key: inline.key, id: inline.data.get(\"node_id\")})})\r\n                    \r\n                    // let the paste happen so we can operate on the document instead of inline\r\n                    next()\r\n\r\n                    // if an inline in the pasted content has the same id as one in the document, unwrap the pasted inline\r\n                    fragmentInlines.forEach(inline => {\r\n                        usedIds.forEach(usedId => {\r\n                            const id = inline.data.get(\"node_id\")\r\n                            if (usedId.id === id) {\r\n                                const inlinesWithId = editor.value.document.filterDescendants(node => node.type === 'link' && node.object === 'inline' && node.data.get('node_id') === id)\r\n                                inlinesWithId.forEach(inlineWithId => {\r\n                                    if (inlineWithId.key !== usedId.key) {\r\n                                        editor.unwrapInlineByKey(inlineWithId.key)\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            } else {\r\n                next()\r\n            }\r\n        },\r\n\r\n        onChange(editor, next) {\r\n            // update all node texts (both link and body)\r\n            const sharedState = editor.getSharedState();\r\n            [\r\n                {nodeType: 'link', updateFunc: sharedState.updateGraphShortText.bind(sharedState)},\r\n                {nodeType: 'body', updateFunc: sharedState.updateGraphLongText.bind(sharedState)}\r\n            ].forEach( update =>\r\n                editor.value.blocks.forEach(block => {\r\n                    const updateText = (linkNode) => {\r\n                        // if we've just emptied an inline text node, we should delete the node and its link to the graph\r\n                        // also if we ever have a link node disconnected from the graph, just remove it to restore legal state\r\n                        const id = linkNode.data.get('node_id')\r\n                        sharedState.checkRecycleBinForGraphNode(id) // in case there was an undo and redo, we should restore the graph link\r\n                        if (linkNode.object === 'inline' && (linkNode.text === \"\" || !sharedState.getGraphNode(id))) {\r\n                            deleteNode(linkNode, editor)\r\n                        } else {\r\n                            update.updateFunc(linkNode.data.get(\"node_id\"), linkNode.text)\r\n                        }\r\n                    }\r\n\r\n                    var linkNodes = block.filterDescendants(node => node.type === update.nodeType)\r\n                    linkNodes.forEach(updateText)\r\n\r\n                    if (block.type === update.nodeType) {\r\n                        updateText(block)\r\n                    }\r\n                })\r\n            )\r\n\r\n            next()\r\n        },\r\n\r\n        onKeyDown(e, editor, next) {\r\n            const { value } = editor\r\n            const { document, selection, startBlock} = value\r\n            const { start, end } = selection\r\n\r\n            // if a whole section (block or inline) is deleted, tell the graph node\r\n            if ((e.key === 'Backspace' || e.key === 'Delete') && selection.isExpanded) {\r\n                document.getNodesAtRange(selection).forEach(node => {\r\n                    if (node.type === 'section' || node.type === 'link') {\r\n                        // it's not certain whether the section will be deleted, as it may only be partially selected\r\n                        // so check in 0 seconds, once the deletion happens, whether that's the case\r\n                        setTimeout(() => {\r\n                            editor.getSharedState().updateIsOnGraphStatus(node.data.get('node_id'))\r\n                        }, 0)\r\n                    }\r\n                })\r\n            }\r\n\r\n            // prevent delete key from merging body and link blocks with next\r\n            if (e.key === \"Delete\") {\r\n                if (startBlock && value.selection.isCollapsed && value.selection.end.isAtEndOfNode(startBlock)) {\r\n                    const nextBlock = document.getNextBlock(start.key)\r\n                    if (nextBlock && (nextBlock.type === \"body\" || nextBlock.type === \"link\" || nextBlock.type === \"section\")) {\r\n                        editor.moveToStartOfNode(nextBlock);\r\n                        if (startBlock.text === \"\") {\r\n                            editor.removeNodeByKey(startBlock.key)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \r\n            }\r\n\r\n            // prevent backspace from merging body and link blocks with previous\r\n            if (e.key === 'Backspace') {\r\n                const prevBlock = document.getPreviousBlock(start.key)\r\n                if (startBlock && start.offset === 0 && prevBlock && (startBlock.type === \"body\" || startBlock.type === \"link\")) {\r\n                    if (prevBlock) {\r\n                        editor.moveToEndOfNode(prevBlock);\r\n                        if (startBlock.text === \"\") {\r\n                            editor.removeNodeByKey(startBlock.key)\r\n                        } else if (prevBlock.text === \"\") {\r\n                            editor.removeNodeByKey(prevBlock.key)\r\n                         }\r\n                    }\r\n                    return editor\r\n                }\r\n            }\r\n\r\n            if (e.key === 'Enter') {\r\n                if (value.inlines.some(inline => inline.type === 'link')) {\r\n                    return // do nothing to avoid splitting the link\r\n                }\r\n\r\n                // when enter is pressed inside a link *block* (not inline), just go to body\r\n                if (startBlock && startBlock.type === \"link\" && start.key === end.key) {\r\n                    // unless the offset is 0, in which case insert a block before and go to that\r\n                    if (start.offset === 0) {\r\n                        const blockToInsert = Block.create({object: 'block', type: ''})\r\n                        const section = document.getParent(startBlock.key);\r\n                        const sectionParent = document.getParent(section.key);                    \r\n                        const sectionIndex = sectionParent.nodes.indexOf(section);\r\n\r\n                        editor.insertNodeByKey(sectionParent.key, sectionIndex, blockToInsert);\r\n                        return editor.moveBackward(1)\r\n                    } else {\r\n                        const nextBlock = document.getNextBlock(start.key)\r\n                        if (nextBlock) {\r\n                            return editor.moveToStartOfNode(nextBlock);\r\n                        } else {\r\n                            return editor.moveToEndOfNode(startBlock);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // prevent the cursor disappearing when navigating into the body placeholder text\r\n            if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\r\n                const relevantBlock = e.key === 'ArrowDown' ? document.getNextBlock(start.key) : document.getPreviousBlock(start.key)\r\n                const ESTIMATED_CHARS_PER_LINE = 130 // calibrated on a 1920x1080 screen... :/\r\n                // we only need to handle the case where the cursor offset is < the length of the placeholder\r\n                if (relevantBlock && relevantBlock.type === 'body' && start.offset < 'Type some text... '.length) {\r\n                    // if down arrow was pressed, only jump to the body if there is only one line of text in the block\r\n                    // its hard to work out how many lines of text there so use an estimate\r\n                    if (e.key === 'ArrowUp' || startBlock.text.length < ESTIMATED_CHARS_PER_LINE) {\r\n                        editor.moveToEndOfNode(relevantBlock)\r\n                        e.preventDefault()\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n\r\n            // prevent tab from taking focus from the editor\r\n            if (e.key === 'Tab') {\r\n                e.preventDefault()\r\n            }\r\n\r\n            return next()\r\n        }\r\n    }\r\n\r\n    function getRefAndId(props, editor, long_or_short) {\r\n        var id = props.node.data.get(\"node_id\");\r\n        editor.getSharedState().setLinkMapping(id, props.node, long_or_short);\r\n        var ref = React.createRef();\r\n        editor.getSharedState().registerLinkNode(id, ref, long_or_short);\r\n        return { ref, id };\r\n    }\r\n}","import React from 'react';\r\nimport PlainBlockNode from './nodes/PlainBlockNode.js'\r\n\r\nexport default function ReorderPlugin(options) {\r\n    return {\r\n        renderBlock(props, editor, next) {            \r\n            if (!props.node.type || props.node.type === '' || props.node.type === 'paragraph') {\r\n                return <PlainBlockNode {...props}/>\r\n            }\r\n            \r\n            return next();\r\n        },\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './DocPane.css';\r\nimport DocEditor from './DocEditor.js'\r\n\r\nclass DocPane extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pane doc\">\r\n                <DocEditor sharedState={this.props.sharedState} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocPane;","import OptionPopup from './OptionPopup.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst COMPLETED_ARROW_COLOUR = \"#5D4037\";\r\nconst POTENTIAL_ARROW_COLOUR = \"#d4b8b0\";\r\nconst DRAWING_ARROW_COLOUR = \"#719deb\";\r\n\r\nconst ADD_ARROW_TYPE_MENU_ITEM = 'Add arrow type'\r\n\r\nconst COLOURS = [\r\n    'red',\r\n    'goldenrod',\r\n    'green',\r\n    'aqua',\r\n    'blue',\r\n    'fuchsia',\r\n    'purple',\r\n    'saddlebrown'\r\n]\r\n\r\nvar DEFAULT_ARROW_OPTIONS = [\r\n    {'colour': 'green', 'name': 'Supports', 'symbol': \"→\"},\r\n    {'colour': 'red', 'name': 'Opposes', 'symbol': \"→\"},\r\n    {'colour': 'blue', 'name': 'Expands', 'symbol': \"→\"},\r\n];\r\n\r\nexport default class MouseFollower {\r\n    constructor(shared_state, svg, connectables_container, markers, links) {\r\n        this.shared_state = shared_state;\r\n        this.drawing_arrow_from = false;\r\n        this.connector = undefined;\r\n        this.connectables_container = connectables_container;\r\n        this.markers = markers;\r\n        this.links = links;\r\n\r\n        this.arrow_id_counter = 0\r\n\r\n        this.completed_arrows = []\r\n\r\n        this.mouse_rect = svg.group();\r\n        window.addEventListener('mousemove', e => {\r\n            var point = svg.point(e.clientX, e.clientY);\r\n            this.mouse_rect.move(point.x, point.y);\r\n            \r\n            if (typeof(this.connector) !== 'undefined') {\r\n                this.connector.update();\r\n            }\r\n        });\r\n\r\n        // cancel arrows if they don't end on a node\r\n        window.addEventListener('mouseup', (e) => {\r\n            if (this.drawing_arrow_from) {\r\n                e.preventDefault();\r\n                this.stop_drawing_arrow();\r\n            }\r\n        });\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            arrows: this.completed_arrows,\r\n            arrow_id_counter: this.arrow_id_counter,\r\n            arrowOptions: this.arrowOptions,\r\n        }\r\n    }\r\n\r\n    static fromJSON(json, shared_state, svg, connectables_container, markers, links) {\r\n        var mf = new MouseFollower(shared_state, svg, connectables_container, markers, links)\r\n        mf.arrow_id_counter = json && json.arrow_id_counter ? json.arrow_id_counter : 0\r\n        mf.completed_arrows = json && json.arrows ? json.arrows : []\r\n        mf.arrowOptions = json && json.arrowOptions ? json.arrowOptions : DEFAULT_ARROW_OPTIONS\r\n\r\n        return mf\r\n    }\r\n\r\n    // draw all the arrows in this.completed_arrows\r\n    // needs to happen separately from loading because when the mouse_follower is first created, the nodes have not yet been loaded\r\n    draw_loaded_arrows(get_node) {\r\n        this.completed_arrows.forEach(arrow => {\r\n            const originNode = get_node(arrow.origin)\r\n            const destinationNode = get_node(arrow.destination)\r\n\r\n            if (!originNode) {\r\n                toast.error(\"Error: could not draw arrow from origin \" + arrow.origin)\r\n                return\r\n            }\r\n\r\n            if (!destinationNode) {\r\n                toast.error(\"Error: could not draw arrow to destination \" + arrow.destination)\r\n                return\r\n            }\r\n\r\n            const connector = this.draw_arrow(\r\n                originNode,\r\n                destinationNode,\r\n                arrow.colour\r\n            )\r\n            this.add_context_menu_to_arrow(connector, arrow)\r\n        })\r\n    }\r\n\r\n    update_source(new_source) {\r\n        if (typeof(this.connector) === 'undefined') {\r\n            this.connector = new_source.connectable({\r\n                container: this.connectables_container,\r\n                markers: this.markers\r\n            }, this.mouse_rect);\r\n        } else {\r\n            this.connector.marker.show();\r\n            this.connector.line.show();\r\n\r\n            this.connector.target = this.mouse_rect;\r\n            this.connector.source = new_source;\r\n            this.connector.update();\r\n        }\r\n        if (this.connector) {\r\n            this.connector.setLineColor(POTENTIAL_ARROW_COLOUR);\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        if (typeof(this.connector) !== 'undefined') {\r\n            this.connector.target = this.connector.source;\r\n            this.connector.marker.hide();\r\n            this.connector.line.hide();\r\n        }\r\n    }\r\n\r\n    start_arrow(source_node) {\r\n        this.drawing_arrow_from = source_node;\r\n        if (this.connector) {\r\n            this.connector.setLineColor(DRAWING_ARROW_COLOUR);\r\n        }\r\n    }\r\n\r\n    draw_arrow(origin, destination, colour) {\r\n        var connector = origin.group.connectable({\r\n            container: this.links,\r\n            markers: this.markers,\r\n            specialCoords: true\r\n        }, destination.group);\r\n        connector.setLineColor(colour);\r\n\r\n        connector.source.on(\"deletenode\", () => {\r\n            connector.source.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector)\r\n        });\r\n        connector.target.on(\"deletenode\", () => {\r\n            connector.target.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector)\r\n        });\r\n\r\n        return connector\r\n    }\r\n\r\n    add_context_menu_to_arrow(connector, arrowObject) {\r\n        const show_context_menu = e => {\r\n            var graph_pos = document.getElementById(\"graph\").getBoundingClientRect();\r\n            this.edit_connector_type(connector, e.clientX - graph_pos.left, e.clientY - graph_pos.top, true, (new_colour) => {\r\n                arrowObject.colour = new_colour\r\n            }, arrowObject);\r\n            e.preventDefault();\r\n        };\r\n        connector.line.on(\"click\", show_context_menu);\r\n        connector.line.on(\"contextmenu\", show_context_menu);\r\n\r\n        connector.source.on(\"deletenode\", () => {\r\n            connector.source.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector, arrowObject)\r\n        });\r\n        connector.target.on(\"deletenode\", () => {\r\n            connector.target.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector, arrowObject)\r\n        });\r\n\r\n        // detect if the user changes the colour of this arrow\r\n        window.addEventListener('colourchange', (e) => {\r\n            if (e.detail.oldColour === arrowObject.colour) {\r\n                connector.setLineColor(e.detail.newColour)\r\n                arrowObject.colour = e.detail.newColour\r\n            }\r\n        })\r\n\r\n        // detect if all arrows of this colour were deleted\r\n        window.addEventListener('arrowdelete', (e) => {\r\n            if (e.detail.colour === arrowObject.colour) {\r\n                this.remove_arrow(connector, arrowObject)\r\n            }\r\n        })\r\n    }\r\n\r\n    complete_arrow(end_node) {\r\n        // no arrows to self\r\n        if (end_node === this.drawing_arrow_from) {\r\n            this.stop_drawing_arrow();\r\n            return;\r\n        }\r\n\r\n        var connector = this.draw_arrow(this.drawing_arrow_from, end_node, COMPLETED_ARROW_COLOUR)\r\n\r\n        var c1 = this.drawing_arrow_from.group.getScreenCoords();\r\n        var c2 = end_node.group.getScreenCoords();\r\n        var midpoint = [(c1.x + c2.x) / 2, (c1.y + c2.y) / 2]\r\n\r\n        // only add the arrow to the list of completed arrows once a colour is selected\r\n        // to prevent weird states being saved and loaded\r\n        const drawing_arrow_from_id = this.drawing_arrow_from.id\r\n        const colourWasSelected = (colour) => {\r\n            const id = this.getNewId()\r\n            const arrowObject = {\r\n                id: id,\r\n                origin: drawing_arrow_from_id,\r\n                destination: end_node.id,\r\n                colour: colour,\r\n            }\r\n            this.completed_arrows.push(arrowObject)\r\n\r\n            this.add_context_menu_to_arrow(connector, arrowObject)\r\n        }\r\n\r\n        this.edit_connector_type(connector, midpoint[0], midpoint[1], false, colourWasSelected);\r\n\r\n        this.shared_state.logger.logEvent({'type': 'arrow_create', 'id': connector.id, 'source': this.drawing_arrow_from.id, 'target': end_node.id});\r\n        this.stop_drawing_arrow();\r\n    }\r\n\r\n    getArrowByID(id) {\r\n        return this.completed_arrows.find(arrow => arrow.id === id)\r\n    }\r\n\r\n    getNewId() {\r\n        this.arrow_id_counter++\r\n        return this.arrow_id_counter\r\n    }\r\n\r\n    changeArrowColour(entry, direction) {\r\n        const oldColour = entry.colour\r\n        var newColour = this.getNextAvailableColour(entry, direction)\r\n        if (!newColour) {\r\n            return\r\n        }\r\n        entry.colour = newColour\r\n\r\n        window.dispatchEvent(new CustomEvent('colourchange', {\r\n            detail: {\r\n                oldColour: oldColour,\r\n                newColour: newColour,\r\n            }\r\n        }))\r\n\r\n        this.shared_state.logger.logEvent({'type': 'update_arrow_colour', 'newColour': newColour});\r\n\r\n        return newColour\r\n    }\r\n\r\n    getNextAvailableColour(entry, direction) {\r\n        // find all the colours which are not used by arrowOptions other than this one\r\n        const availableColours = COLOURS.filter(colour => \r\n            !this.arrowOptions.find(option => option.colour === colour && option !== entry)\r\n        )\r\n\r\n        if (!availableColours) {\r\n            return undefined\r\n        } else {\r\n            const thisColourIndex = entry ? availableColours.indexOf(entry.colour) : 0\r\n            if (thisColourIndex !== -1) {\r\n                var nextIndex = (thisColourIndex + 1 * direction) % availableColours.length\r\n                if (nextIndex < 0) {\r\n                    nextIndex = availableColours.length - 1\r\n                }\r\n                return availableColours[nextIndex]\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrowOptions() {\r\n        const clickEditButton = (e, params) => {\r\n            const MAX_ARROW_TYPE_NAME_LENGTH = 50 // chars\r\n\r\n            var { colourCell, nameCell, buttonCell, underlyingEntry, transientEntry } = params\r\n\r\n            transientEntry.isClickable = false\r\n\r\n            var editButton = buttonCell.children[0]\r\n\r\n            const finishEditing = () => {\r\n                var newValue = input.value\r\n                if (newValue.length >= MAX_ARROW_TYPE_NAME_LENGTH) {\r\n                    newValue = newValue.substring(0, MAX_ARROW_TYPE_NAME_LENGTH)\r\n                }\r\n                \r\n                nameCell.removeChild(input)\r\n\r\n                if (newValue) {\r\n                    underlyingEntry.name = newValue\r\n                    nameCell.textContent = newValue\r\n                }\r\n\r\n                transientEntry.isClickable = true\r\n\r\n                colourCell.textContent = colourButton.textContent\r\n                colourCell.style.color = colourButton.style.color\r\n                \r\n                editButton.classList.remove('pure-button-active')\r\n                editButton.onclick = (e) => clickEditButton(e, params)\r\n            }\r\n\r\n            editButton.classList.add('pure-button-active')\r\n            editButton.onclick = finishEditing\r\n\r\n            var input = document.createElement(\"input\")\r\n            console.log(nameCell);\r\n            \r\n            input.style.width = (nameCell.getBoundingClientRect().width - 5).toString() + \"px\"\r\n            input.value = nameCell.textContent\r\n            input.addEventListener('keyup', (e) => {\r\n                if (e.key === 'Enter' && input.value) {\r\n                    finishEditing()\r\n                }\r\n            })\r\n\r\n            nameCell.textContent = \"\"\r\n            nameCell.appendChild(input)\r\n\r\n            var colourButton = document.createElement(\"button\")\r\n            colourButton.className = 'pure-button'\r\n            colourButton.textContent = colourCell.textContent\r\n            colourCell.textContent = \"\"\r\n            colourCell.appendChild(colourButton)\r\n            colourButton.style.color = colourCell.style.color\r\n            colourButton.style.padding = 0\r\n            colourButton.addEventListener(\"click\", () => {\r\n                colourButton.style.color = this.changeArrowColour(underlyingEntry, 1)\r\n                transientEntry.colour = underlyingEntry.colour\r\n            })\r\n            colourButton.addEventListener(\"contextmenu\", (e) => {\r\n                colourButton.style.color = this.changeArrowColour(underlyingEntry, -1)  // on right click, scroll backwards through the colours\r\n                transientEntry.colour = underlyingEntry.colour\r\n                e.preventDefault()\r\n            })\r\n\r\n            input.focus()\r\n        }\r\n\r\n        const clickDeleteArrowTypeButton = (e, params) => {\r\n            var { row, underlyingEntries, underlyingEntry, transientEntry } = params\r\n            transientEntry.isClickable = false\r\n            \r\n            if (window.confirm('Are you sure you want to delete all \"' + underlyingEntry.name + '\" arrows? This cannot be undone.')) {\r\n                // remove from underlyingEntries\r\n                var index = underlyingEntries.indexOf(underlyingEntry)\r\n                if (index !== -1) {\r\n                    underlyingEntries.splice(index, 1)\r\n                }\r\n\r\n                // remove row after 0 delay to prevent this click event being registered as a click outside the option popup\r\n                setTimeout(() => row.parentNode.removeChild(row), 0)\r\n\r\n                // tell all arrows of this colour to delete themselves\r\n                window.dispatchEvent(new CustomEvent('arrowdelete', {\r\n                    detail: {\r\n                        colour: underlyingEntry.colour,\r\n                    }\r\n                }))\r\n\r\n                this.shared_state.logger.logEvent({'type': 'delete_arrow_type', 'colour': underlyingEntry.colour});\r\n            }\r\n        }\r\n\r\n        const arrowOptionsWithButtons = this.arrowOptions.map(entry => {\r\n            var entryWithButtons = {...entry}\r\n            entryWithButtons.buttons = [\r\n                {\r\n                    className: 'edit-icon',\r\n                    click: clickEditButton,\r\n                    underlyingEntry: entry,\r\n                },\r\n                {\r\n                    className: 'delete-icon',\r\n                    click: clickDeleteArrowTypeButton,\r\n                    underlyingEntry: entry,\r\n                    underlyingEntries: this.arrowOptions,\r\n                }\r\n            ]\r\n            return entryWithButtons\r\n        })\r\n        \r\n        return [\r\n            ...arrowOptionsWithButtons,\r\n            {'colour': 'black', 'name': ADD_ARROW_TYPE_MENU_ITEM, 'symbol': '+'},\r\n            {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n        ]\r\n    }\r\n\r\n    edit_connector_type(connector, popup_x, popup_y, hideOnClickOutside, onColourSelected, arrowObject) {\r\n        var prev_selected = undefined;\r\n        \r\n        const arrowOptions = this.getArrowOptions()\r\n\r\n        prev_selected = arrowOptions.find(entry => entry.colour === connector.line.attr('stroke') && entry.name !== 'Delete' && entry.name !== ADD_ARROW_TYPE_MENU_ITEM)\r\n        prev_selected = prev_selected ? prev_selected.name : undefined\r\n\r\n        new OptionPopup(arrowOptions, popup_x, popup_y, hideOnClickOutside, (selected_option) => {\r\n            if (selected_option.name === \"Delete\") {\r\n                this.shared_state.logger.logEvent({'type': 'arrow_delete', 'id': connector.id});\r\n                this.remove_arrow(connector, arrowObject);\r\n            } if (selected_option.name === ADD_ARROW_TYPE_MENU_ITEM) {\r\n                const colour = this.getNextAvailableColour(null, 1)\r\n\r\n                if (!colour) {\r\n                    toast.error(\"Maximum number of arrow types reached!\")\r\n                } else {\r\n                    this.arrowOptions.push({\r\n                        'name': 'New relation',\r\n                        'colour': colour,\r\n                        'symbol': \"→\",\r\n                    })\r\n                    this.shared_state.logger.logEvent({'type': 'add_arrow_type', 'colour': colour});\r\n\r\n                    // open a new option popup to allow the user to select the new arrow type and edit it\r\n                    this.edit_connector_type(connector, popup_x, popup_y, hideOnClickOutside, onColourSelected, arrowObject)\r\n                }\r\n            } else {\r\n                connector.setLineColor(selected_option.colour);\r\n                this.shared_state.logger.logEvent({'type': 'arrow_set_type', 'id': connector.id, 'new_type': selected_option.name});\r\n\r\n                if (onColourSelected) {\r\n                    onColourSelected(selected_option.colour)\r\n                }\r\n            }\r\n        }, prev_selected);\r\n    }\r\n\r\n    remove_arrow(connector, arrowObject) {\r\n        connector.line.node.instance.delete_connectable(connector);\r\n\r\n        if (arrowObject) {\r\n            this.completed_arrows = this.completed_arrows.filter(arrow => arrow !== arrowObject)        \r\n        }\r\n    }\r\n\r\n    stop_drawing_arrow() {\r\n        this.drawing_arrow_from = false;\r\n        this.hide();\r\n    }\r\n}","import OptionPopup from \"./OptionPopup\";\r\n\r\nvar ARROW_HITBOX_MARGIN = 20;\r\n\r\nclass GraphNode {\r\n    constructor(params, nodes, mouse_follower, shared_state, focus_text_area, getNodesList) {\r\n        var { shortText, x, y, width, height, id, isOnGraph, longText } = params\r\n        this.id = id ? id : shared_state.getNodeId();\r\n\r\n        this.getNodesList = getNodesList;\r\n        \r\n        this.group = nodes.group().translate(x, y);\r\n\r\n        this.arrow_hitbox = this.group.rect(width + 2 * ARROW_HITBOX_MARGIN, height + 2 * ARROW_HITBOX_MARGIN)\r\n            .translate(-ARROW_HITBOX_MARGIN, -ARROW_HITBOX_MARGIN).opacity(0);\r\n        this.rect = this.group.rect(width, height).radius(5).addClass('node');\r\n        this.text = this.group.text(\"\").addClass('node-text');\r\n        this.updateShortText(shortText)\r\n        this.updateLongText(longText)\r\n\r\n        this.setupRectDragging(this.rect, shared_state);\r\n        this.setupArrowHitbox(this.arrow_hitbox, mouse_follower);\r\n        const complete_arrow = (e) => {\r\n            if (mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.complete_arrow(this);\r\n            }\r\n        };\r\n        this.rect.on('mouseup', complete_arrow);\r\n        this.text.on('mouseup', complete_arrow);\r\n\r\n        this.setupHover(shared_state);\r\n        this.setupContextMenu(shared_state);\r\n\r\n        if (focus_text_area) {\r\n            this.editText(shared_state, true);\r\n        }\r\n        \r\n        this.setIsOnGraph(isOnGraph);\r\n\r\n        shared_state.logger.logEvent({'type': 'node_create', 'id': this.id});\r\n    }\r\n\r\n    static fromJSON(json, nodes, mouse_follower, shared_state, getNodesList) {\r\n        var params = json\r\n        params.x = json.screenCoords.x\r\n        params.y = json.screenCoords.y\r\n        params.width = 100\r\n        params.height = 50\r\n        return new GraphNode(params, nodes, mouse_follower, shared_state, false, getNodesList)\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            shortText: this.shortText,\r\n            longText: this.longText,\r\n            screenCoords: this.group.getScreenCoords(),\r\n            isOnGraph: this.isOnGraph,\r\n        }\r\n    }\r\n\r\n    setIsOnGraph(newVal) {\r\n        this.isOnGraph = newVal;\r\n        if (this.isOnGraph) {\r\n            this.rect.addClass(\"node-on-graph\");\r\n        } else {\r\n            this.rect.removeClass(\"node-on-graph\");\r\n        }\r\n    }\r\n\r\n    setupContextMenu(shared_state) {\r\n        var showOptionMenu = e => {\r\n            e.preventDefault();\r\n            \r\n            var entries = [\r\n                {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n            ]\r\n            var graph_pos = document.getElementById(\"graph\").getBoundingClientRect();\r\n            new OptionPopup(entries, e.clientX - graph_pos.left, e.clientY - graph_pos.top, true, (selected_option) => {\r\n                if (selected_option.name === \"Delete\") {\r\n                    this.delete(shared_state);\r\n                }\r\n            });\r\n            \r\n            return false;\r\n        };\r\n        this.rect.on('contextmenu', showOptionMenu);\r\n        this.text.on('contextmenu', showOptionMenu);\r\n    }\r\n\r\n    setupHover(shared_state) {\r\n        this.hoverers = []\r\n\r\n        const startHover = (e) => {\r\n            this.setHoverer(\"mouse_\" + e.target, true);\r\n            shared_state.getAllDocNodeRefs(this.id).forEach(ref => {\r\n                if (!ref) {\r\n                    return\r\n                }\r\n                ref.decoratedRef ? ref.decoratedRef.current.decoratedRef.current.setExternalHover(true) : ref.setExternalHover(true);\r\n            });\r\n        };\r\n        const endHover = (e) => {\r\n            this.setHoverer(\"mouse_\" + e.target, false);\r\n            shared_state.getAllDocNodeRefs(this.id).forEach(ref => {\r\n                if (!ref) {\r\n                    return\r\n                }\r\n                ref.decoratedRef ? ref.decoratedRef.current.decoratedRef.current.setExternalHover(false) : ref.setExternalHover(false);\r\n            });\r\n        };\r\n        this.rect.on('mouseenter', startHover);\r\n        this.text.on('mouseenter', startHover);\r\n        this.rect.on('mouseleave', endHover);\r\n        this.text.on('mouseleave', endHover);\r\n    }\r\n\r\n    setHoverer(hoverer, isHovering) {\r\n        if (isHovering) {\r\n            if (!this.hoverers.includes(hoverer)) {\r\n                this.hoverers.push(hoverer)\r\n            }\r\n        } else {\r\n            // remove the hoverer\r\n            var index = this.hoverers.indexOf(hoverer);\r\n            if (index !== -1) this.hoverers.splice(index, 1);\r\n        }\r\n\r\n        this.setHovered(this.hoverers.length > 0)\r\n    }\r\n\r\n    setHovered(isHovered) {        \r\n        if (isHovered) {\r\n            this.rect.addClass(\"hovered\");\r\n        } else {\r\n            this.rect.removeClass(\"hovered\");\r\n        }\r\n    }\r\n\r\n    // the hitbox for arrows is an invisible rect a bit bigger than the visible node rect\r\n    // but we only want to make the node itself draggable\r\n    // so we need to intercept drag events on the rect, and move the entire group instead!\r\n    setupRectDragging(rect, shared_state) {\r\n        this.setupGroupDragging(rect, shared_state, rect);\r\n        this.setupGroupDragging(this.text, shared_state, rect, true);\r\n        \r\n        this.text.click((e) => e.preventDefault());\r\n        var edit_text_if_not_just_dropped = () => { if (!rect.just_dropped) this.editText(shared_state) };\r\n        rect.click(edit_text_if_not_just_dropped);\r\n        this.text.click(edit_text_if_not_just_dropped);\r\n    }\r\n\r\n    setupGroupDragging(rect, shared_state, just_dropped_obj, center=false) {\r\n        rect.draggy(); // setup dragging on the rect\r\n        rect.on('mousedown', (e) => {\r\n            e.stopPropagation(); // don't pan when moving a node\r\n        });\r\n        just_dropped_obj.just_dropped = false;\r\n        rect.on('dragstart', (e) => {\r\n            var start_x = this.group.x();\r\n            var start_y = this.group.y();\r\n            document.activeElement.blur();\r\n            shared_state.draggedNode = {\r\n                id: this.id,\r\n                text: this.getShortText(),\r\n                longText: this.getLongText(),\r\n                resetPos: () => {\r\n                    this.group.move(start_x, start_y);\r\n                    this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n                },\r\n                node: this\r\n            };\r\n            rect.off('dragmove');\r\n            rect.on('dragmove', (e) => {\r\n                this.group.move(start_x + e.detail.delta.movedX, start_y + e.detail.delta.movedY);\r\n                if (center) {\r\n                    this.text.center(0.5 * this.rect.width(), 0.5 * this.rect.height());\r\n                } else {\r\n                    rect.x(0);\r\n                    rect.y(0);\r\n                }\r\n                this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n            });\r\n            rect.off('dragend');\r\n            rect.on('dragend', (e) => {\r\n                // prevent the textarea showing\r\n                // unless the drag amount was zero or just a tiny accidental drag\r\n                var x_diff = (this.group.x() - start_x);\r\n                var y_diff = (this.group.y() - start_y);\r\n                var nudge = 10;\r\n                if (x_diff > nudge || x_diff < -nudge || y_diff > nudge || y_diff < -nudge) {\r\n                    just_dropped_obj.just_dropped = true;\r\n                    setTimeout(() => { just_dropped_obj.just_dropped = false; }, 0.05);\r\n                }\r\n                shared_state.draggedNode = false;\r\n            });\r\n        });\r\n    }\r\n\r\n    // click/drag events on the arrow hitbox should start the arrow creation process\r\n    setupArrowHitbox(arrow_hitbox, mouse_follower) {\r\n        arrow_hitbox.on('mousemove', () => {\r\n            if (!mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.update_source(this.group);\r\n            }\r\n        });\r\n        arrow_hitbox.on('mouseleave', () => {\r\n            if (!mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.hide();\r\n            }\r\n        });\r\n        arrow_hitbox.on('mousedown', (e) => {\r\n            mouse_follower.start_arrow(this);\r\n            e.stopPropagation(); // don't pan when dragging an arrow\r\n        });\r\n    }\r\n\r\n    updateShortText(newShortText) {\r\n        this.shortText = newShortText.replace(/[\\r\\n\\v]+/g, '');\r\n        \r\n        const CHARS_PER_LINE = 21;\r\n        var formattedText = this.splitIntoLines(CHARS_PER_LINE, this.shortText);\r\n\r\n        this.text.text(formattedText.join(\"\\n\"));\r\n        this.resizeRect(formattedText.length);\r\n    }\r\n\r\n    updateLongText(newLongText) {\r\n        this.longText = newLongText;\r\n    }\r\n\r\n    splitIntoLines(charsPerLine, text) {\r\n        var formattedText = [];\r\n        var line = \"\";\r\n        text.split(\" \").forEach(word => {\r\n            var segments = [];\r\n            if (word.length > charsPerLine) {\r\n                for (let i = 0; i < word.length; i += charsPerLine - 1) {\r\n                    if (segments.length > 0) {\r\n                        segments[segments.length - 1] += \"-\"; // append a '-' onto the end of unfinished strings\r\n                    }\r\n                    segments.push(word.substring(i, Math.min(i + charsPerLine, word.length)));\r\n                }\r\n            }\r\n            else {\r\n                segments = [word];\r\n            }\r\n            segments.forEach(segment => {\r\n                if ((line + segment).length < charsPerLine) {\r\n                    var space = line.length > 0 ? \" \" : \"\";\r\n                    line += space + segment;\r\n                }\r\n                else {\r\n                    formattedText.push(line);\r\n                    line = segment;\r\n                }\r\n            });\r\n        });\r\n        formattedText.push(line);\r\n        return formattedText;\r\n    }\r\n\r\n    // resize the rect so that the text fits on it\r\n    resizeRect(numLinesOfText) {\r\n        this.rect.width(200);\r\n        this.rect.height(numLinesOfText * 21 + 20);\r\n        this.text.center(0.5 * this.rect.width(), 0.5 * this.rect.height());\r\n\r\n        this.arrow_hitbox.size(this.rect.width() + ARROW_HITBOX_MARGIN * 2, this.rect.height() + ARROW_HITBOX_MARGIN * 2);\r\n\r\n        this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n    }\r\n\r\n    getShortText() {\r\n        return this.shortText;\r\n    }\r\n\r\n    getLongText() {\r\n        return this.longText;\r\n    }\r\n\r\n    editText(shared_state, delete_if_empty_text = false) {\r\n        document.activeElement.blur(); // remove focus from everything\r\n\r\n        var textarea = document.querySelector('#nodeedit');\r\n        textarea.value = this.getShortText();\r\n\r\n        var screen_coords = this.group.getScreenCoords();\r\n        textarea.style.left = screen_coords.x + \"px\";\r\n        textarea.style.top = screen_coords.y + \"px\";\r\n        textarea.style.display = \"inline-block\";\r\n        textarea.focus();\r\n\r\n        textarea.style.width = \"180px\";\r\n        textarea.style.height = 'auto';\r\n        textarea.style.height = (textarea.scrollHeight) + 'px';\r\n\r\n        this.text.hide();\r\n\r\n        var save_changes = () => {\r\n            this.updateShortText(textarea.value);\r\n            shared_state.updateDocShortText(this.id, this.getShortText());\r\n        };\r\n        var save_and_hide = () => {\r\n            save_changes();\r\n            textarea.style.display = \"none\";\r\n            if (delete_if_empty_text && (!this.text.text() || this.text.text() === \"\")) {\r\n                this.delete(shared_state);\r\n            }\r\n            this.text.show();\r\n            this.updateShortText(this.shortText);\r\n\r\n            shared_state.logger.logEvent({'type': 'node_edit_short_text', 'id': this.id, 'text': this.shortText});\r\n        };\r\n        textarea.onblur = save_and_hide;\r\n        textarea.onkeyup = (e) => {\r\n            if (e.key === \"Escape\" || e.key === \"Esc\" || e.key === \"Enter\") {\r\n                e.preventDefault();\r\n                document.activeElement.blur();\r\n            } else {\r\n                save_changes();\r\n            }\r\n        };\r\n    }\r\n\r\n    delete(shared_state) {\r\n        shared_state.removeGraphNode(this.id);\r\n        \r\n        // remove from the list of nodes (used for saving)\r\n        const nodesList = this.getNodesList()\r\n        var index = nodesList.indexOf(this);\r\n        if (index !== -1) {\r\n            nodesList.splice(index, 1)\r\n        } else {\r\n            console.log('node not found in this.nodesList when deleting');\r\n        }        \r\n\r\n        this.group.remove();\r\n\r\n        // delete arrows\r\n        this.group.node.dispatchEvent(new CustomEvent(\"deletenode\"));\r\n\r\n        shared_state.logger.logEvent({'type': 'node_delete', 'id': this.id});\r\n    }\r\n}\r\n\r\nexport default GraphNode;","import { DropTarget } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../dragtypes\";\r\n\r\nconst graphTarget = {\r\n    canDrop(props, monitor) {\r\n        const item = monitor.getItem()\r\n        return item.node.type !== 'section' && !item.node.findDescendant(node => node.type === 'link')\r\n    },\r\n\r\n    drop(props, monitor, component) {\r\n        return { droppedOnGraph: true, position: monitor.getClientOffset() }\r\n    },\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDropTarget: connect.dropTarget(),\r\n        // You can ask the monitor about the current drag state:\r\n        itemType: monitor.getItemType(),\r\n    }\r\n}\r\n\r\nexport default DropTarget(ItemTypes.BLOCK, graphTarget, collect)","import React from 'react';\r\nimport './GraphPane.css';\r\nimport SVG from 'svg.js';\r\nimport 'svg.panzoom.js';\r\nimport 'svg.draggy.js';\r\nimport './svg.connectable.js';\r\nimport MouseFollower from './MouseFollower.js';\r\nimport GraphNode from './GraphNode.js';\r\nimport DropifyGraphPane from './DropifyGraphPane.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nclass GraphPane extends React.Component {\r\n    componentDidMount() {\r\n        this.props.sharedState.getSavedGraph((json) => {\r\n            this.nodesList = [];\r\n\r\n            this.props.sharedState.graphPane = this;\r\n\r\n            this.$el = document.querySelector(\"#graph\")\r\n\r\n            var svg = new SVG(this.$el).size(\"100%\", \"100%\").panZoom({ zoomMin: 1, zoomMax: 1 }); // just pan, no zoom\r\n\r\n            SVG.extend(SVG.Element, {\r\n                getScreenCoords: function () {\r\n                    var root_point = this.doc().node.getBoundingClientRect();\r\n                    var point = this.point(0, 0);\r\n                    return {\r\n                        x: -point.x - root_point.left,\r\n                        y: -point.y - root_point.top\r\n                    };\r\n                }\r\n            })\r\n\r\n            var links = svg.group();\r\n            var markers = svg.group();\r\n            var nodes = svg.group();\r\n\r\n            const json_connections = json ? json.connections : undefined\r\n            var mouse_follower = MouseFollower.fromJSON(json_connections, this.props.sharedState, svg, links, markers, links);\r\n            this.mouse_follower = mouse_follower\r\n\r\n            // add new nodes on mouse click\r\n            svg.on('dblclick', (e) => {\r\n                // only clicks on background and not when dragging\r\n                if (e.target !== svg.node && !mouse_follower.drawing_arrow_from) {\r\n                    return;\r\n                }\r\n\r\n                this.addNodeAtScreenLocation(svg, nodes, mouse_follower, \"\", e.clientX, e.clientY, true);\r\n            });\r\n\r\n            this.setupTextDropping(svg, nodes, mouse_follower);\r\n\r\n            svg.on('panStart', (e) => {\r\n                document.activeElement.blur();\r\n            });\r\n\r\n            var textarea = document.querySelector('#nodeedit');\r\n            textarea.setAttribute('style', 'height:' + (textarea.scrollHeight) + 'px;overflow-y:hidden;');\r\n            textarea.addEventListener(\"input\", (e) => {\r\n                textarea.style.height = 'auto';\r\n                textarea.style.height = (textarea.scrollHeight) + 'px';\r\n            });\r\n\r\n            this.props.sharedState.addGraphNode = (text, x, y) => {\r\n                return this.addNodeAtScreenLocation(svg, nodes, mouse_follower, text, x, y, true)\r\n            }\r\n            if (json && json.nodes) {\r\n                this.loadNodesFromJSON(json.nodes, mouse_follower, nodes)\r\n            }\r\n\r\n            this.getNodeById = this.getNodeById.bind(this)\r\n            mouse_follower.draw_loaded_arrows(this.getNodeById)\r\n\r\n            if (!this.nodesList) {\r\n                this.addNoNodesIndicator(svg, nodes, mouse_follower);\r\n            }\r\n        })\r\n\r\n        // temp\r\n        // this.addNodeAtScreenLocation(svg, nodes, mouse_follower, \"Radical\", 1200, 300, false);\r\n    }\r\n\r\n    getNodeById(id) {\r\n        return this.nodesList.find(node => node.id.toString() === id.toString())\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            nodes: this.nodesList.map(node => node.toJSON()),\r\n            connections: this.mouse_follower.toJSON()\r\n        }\r\n    }\r\n\r\n    loadNodesFromJSON(json, mouse_follower, nodes) {\r\n        this.nodesList = json.map(nodeJSON => GraphNode.fromJSON(nodeJSON, nodes, mouse_follower, this.props.sharedState, () => this.nodesList))\r\n    }\r\n\r\n    addNoNodesIndicator(svg, nodes, mouse_follower) {\r\n        this.noNodesIndicator = svg.text(\"Double click to add a node\").addClass(\"indicator-text\").attr({x: \"40%\", y: \"45%\"});\r\n        this.noNodesIndicator.on('dblclick', (e) => {\r\n            this.addNodeAtScreenLocation(svg, nodes, mouse_follower, \"\", e.clientX, e.clientY, true);\r\n        });\r\n    }\r\n\r\n    setupTextDropping(svg, nodes, mouse_follower) {\r\n        this.$el.addEventListener(\"dragover\", (e) => {\r\n            e.preventDefault();\r\n        });\r\n\r\n        this.$el.addEventListener(\"drop\", (e) => {\r\n            e.preventDefault();\r\n            if (!e.dataTransfer.types.includes(\"text/plain\")) {\r\n                return // the dropped thing is probably a whole block, which is handled by React-DnD in DragifyGraph.js\r\n            }\r\n            \r\n            var data = e.dataTransfer.getData(\"Text\");\r\n\r\n            if (data.includes('\\n')) {\r\n                toast.error('You can\\'t add multiple paragraphs to the graph at once')\r\n                return\r\n            }\r\n\r\n            if (!this.props.sharedState.canAddLinkAtSelection()) {\r\n                toast.error('You can\\'t add the same node to the graph twice!')\r\n                return\r\n            }\r\n\r\n            var node = this.addNodeAtScreenLocation(svg, nodes, mouse_follower, data, e.clientX, e.clientY, false);\r\n            this.props.sharedState.addLinkAtSelection(node.id, node);\r\n            this.props.sharedState.logger.logEvent({'type': 'node_create_from_doc', 'node_id': node.id, 'text': data});\r\n            document.activeElement.blur();\r\n        });\r\n    }\r\n\r\n    addNodeAtScreenLocation(svg, nodes, mouse_follower, text, x, y, focus_text_area) {\r\n        var point = svg.point(x, y);\r\n        const params = {\r\n            shortText: text,\r\n            longText: \"\", \r\n            x: point.x,\r\n            y: point.y,\r\n            width: 100,\r\n            height: 80,\r\n            isOnGraph: false,\r\n            id: undefined, // set automatically\r\n        }\r\n        var node = new GraphNode(params, nodes, mouse_follower, this.props.sharedState, focus_text_area, () => this.nodesList);\r\n        this.nodesList.push(node);\r\n\r\n        if (this.noNodesIndicator) {\r\n            this.noNodesIndicator.hide();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.$el.somePlugin('destroy');\r\n    }\r\n\r\n    render() {\r\n        return this.props.connectDropTarget(\r\n            <div id=\"graph\" className=\"pane\" ref={el => this.el = el}>\r\n                <textarea id='nodeedit'></textarea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DropifyGraphPane(GraphPane);","import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('writeReasonDb');\r\ndb.version(1).stores({ projects: '++id,name' }); // NB: this is just the *indexed* properties, not all of them!\r\n\r\nexport default db;","import React, { Component } from 'react';\r\n\r\nexport default class FilesList extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <table className='pure-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.projects.map(project => <tr key={project.id.toString()}>\r\n                            <td>{project.id}</td>\r\n                            <td>{project.name}</td>\r\n                            <td><button className=\"pure-button\" onClick={() => this.props.loadProject(project.id)}>Open</button></td>\r\n                            <td><button className=\"pure-button\" onClick={() => this.props.renameProject(project.id)}>Rename</button></td>\r\n                            <td><button className=\"pure-button\" onClick={() => this.props.duplicateProject(project.id)}>Duplicate</button></td>\r\n                            <td><button className=\"pure-button\" onClick={() => this.props.deleteProject(project.id)}>Delete</button></td>\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        );\r\n      }\r\n}","export default class Logger {\r\n    shouldLogToConsole = false;\r\n\r\n    constructor(id, params) {\r\n        this.id = id;\r\n        this.conditions = params;\r\n        this.logToConsole(\"Logging begin, id \" + id + \"\\nParams \" + JSON.stringify(params, null, 1));\r\n    }\r\n\r\n    getExperimentData() {\r\n        return this.getLog();\r\n    }\r\n\r\n    getExperimentId() {\r\n        return this.id\r\n    }\r\n\r\n    // Generate an ID from the current time to avoid collision\r\n    static getNewId() {\r\n        return Number(new Date()).toString(36);\r\n    }\r\n\r\n    logEvent(event) {\r\n        var log = this.getLog();\r\n        if (log.events === undefined) {\r\n            log.events = {};\r\n        }\r\n\r\n        if (log.events[event.type] === undefined) {\r\n            log.events[event.type] = [];\r\n        }\r\n        event.timestamp = new Date();\r\n        log.events[event.type].push(event);\r\n        this.setLog(log);\r\n\r\n        this.logToConsole(\"Logging event: \" + JSON.stringify(event));\r\n    }\r\n\r\n    static retrieveLog(id) {\r\n        return localStorage.getItem(Logger.getStorageString(id));\r\n    }\r\n\r\n    getLog() {\r\n        var log = JSON.parse(Logger.retrieveLog(this.id));\r\n        if (!log || log === undefined) {\r\n            log = {}\r\n        }\r\n        return log;\r\n    }\r\n\r\n    setLog(log) {\r\n        localStorage.setItem(Logger.getStorageString(this.id), JSON.stringify(log));\r\n    }\r\n\r\n    static getStorageString(id) {\r\n        return \"log_\" + id;\r\n    }\r\n\r\n    logToConsole(msg) {\r\n        if (this.shouldLogToConsole) {\r\n            console.log(msg);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Text } from 'slate';\r\nimport Html from 'slate-html-serializer'\r\nimport Logger from './logging'\r\nimport db from './db.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class SharedState {\r\n    constructor(db_id, params) {      \r\n        this.logger = new Logger(Logger.getNewId(), params)\r\n        this.condition = params.condition;\r\n        this.params = params;\r\n        \r\n        this.node_id_counter = 0;\r\n        this.slate_id_counter = 10\r\n        this.map = {};\r\n        this.map_recycle_bin = {};\r\n        this.db_id = db_id\r\n\r\n        // this.editor_ref and this.graphPane set in the editor and graphpane\r\n        this.editor_ref = undefined;\r\n        this.graphPane = undefined;\r\n\r\n        // log entire document content every 30 seconds\r\n        this.intervalLogger = window.setInterval(() => {\r\n            this.logger.logEvent({'type': 'document_content_detailed', 'content': this.getEditor().getValue()});\r\n            this.logger.logEvent({'type': 'document_content_markdown', 'content': this.getArgumentMarkdown()});\r\n        }, 30000);\r\n        \r\n        this.downloadExperimentData = this.downloadExperimentData.bind(this);\r\n        this.editorHasLoaded = this.editorHasLoaded.bind(this);\r\n        this.save = this.save.bind(this)\r\n    }\r\n\r\n    // called by editor once the database saved value has been set as the document.value\r\n    editorHasLoaded() {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then(project => {\r\n                this.node_id_counter = project.node_id_counter ? project.node_id_counter : 0\r\n                this.map = project.map ? this.mapFromJSON(project.map) : {}\r\n                this.getEditor().mapHasLoaded()\r\n            })\r\n    }\r\n\r\n    save() {\r\n        const changes = {\r\n            map: this.mapToJSON(),\r\n            node_id_counter: this.node_id_counter,\r\n            doc_value: this.getEditor().getValue().toJSON(),\r\n            graph_value: this.graphPane.toJSON(),\r\n        }\r\n        db.table('projects')\r\n            .update(this.db_id, changes)\r\n            .then((idExists) => {\r\n                if (!idExists) {\r\n                    const message = 'Save error: file with ID ' + this.db_id.toString() + ' does not exist!'\r\n                    console.log(message)\r\n                    toast.error(message)\r\n                } else {\r\n                    toast.info('Changes saved!')\r\n                }\r\n            }).catch(err => {\r\n                toast.error('Save error: ' + err.toString())\r\n            })\r\n    }\r\n\r\n    getSavedDocValue = async function(onDataLoad) {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then(project => {\r\n                onDataLoad(project.doc_value)\r\n            })\r\n    }\r\n\r\n    getSavedGraph = async function(onDataLoad) {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then(project => {\r\n                onDataLoad(project.graph_value)\r\n            })\r\n    }\r\n\r\n    mapToJSON() {\r\n        var mapJson = {}\r\n        const document = this.getEditor().value.document\r\n        for (const id in this.map) {\r\n            let doc_nodes = {};\r\n            ['section', 'long', 'short'].forEach(part => {\r\n                const docNodeObjects = this.getDocNodes(id)\r\n                if (docNodeObjects) {\r\n                    if (docNodeObjects[part]) {\r\n                        const path = document.getPath(docNodeObjects[part])\r\n                        doc_nodes[part] = path.toArray()\r\n                    }\r\n                } \r\n            })\r\n\r\n            mapJson[id] = {\r\n                graph_node: this.getGraphNode(id) ? this.getGraphNode(id).id : undefined,\r\n                doc_nodes: doc_nodes\r\n            }\r\n        }\r\n\r\n        return mapJson\r\n    }\r\n\r\n    mapFromJSON(json) {\r\n        this.map = {}\r\n        for (const id in json) {\r\n            if (json[id].graph_node) {\r\n                const graphNode = this.graphPane.getNodeById(id)\r\n                if (graphNode) {\r\n                    this.addGraphMapping(id, graphNode)\r\n                } else {\r\n                    toast.error(\"Error when loading: could not find graph node with ID \" + id)\r\n                }\r\n            }\r\n\r\n            if (json[id].doc_nodes) {\r\n                for (const part in json[id].doc_nodes) {\r\n                    const path = json[id].doc_nodes[part]\r\n                    \r\n                    const document = this.getEditor().value.document\r\n                    if (document.hasNode(path)) {\r\n                        this.setLinkMapping(id, document.getNode(path), part)\r\n                    } else {\r\n                        console.log(document);\r\n                        \r\n                        toast.error(\"Error when loading: could not find \" + part + \" with ID \" + id)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.map\r\n    }\r\n\r\n    downloadExperimentData() {\r\n        const element = document.createElement(\"a\");\r\n        const data = {\r\n            params: this.params,\r\n            argument: this.getArgumentMarkdown(),\r\n            logs: this.logger.getExperimentData()\r\n        }\r\n        const file = new Blob([JSON.stringify(data, null, 2)], {type: 'text/plain'});\r\n\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = this.logger.getExperimentId() + \".json\";\r\n        document.body.appendChild(element); // Required for this to work in FireFox\r\n        element.click();\r\n    }\r\n\r\n    getArgumentMarkdown() {\r\n        const parentStyleIs = (node, styleToCheck) => {\r\n            const parent = this.getEditor().value.document.getParent(node.key)\r\n            return parent && parent.data.get(\"nodeStyle\") === styleToCheck\r\n        }\r\n\r\n        const RULES = [\r\n            {\r\n                serialize: (node, children) => {\r\n                    if ([\"block\", \"inline\"].includes(node.object)) {\r\n                        switch(node.type) {\r\n                            case 'paragraph':\r\n                            case '':\r\n                                return <p>{children}</p>\r\n\r\n                            case 'heading':\r\n                                return <h2>{children}</h2>\r\n                            \r\n                            case 'section':\r\n                                return <div>{children}</div>\r\n                            \r\n                            case 'body':\r\n                                if (parentStyleIs(node, \"Heading only\")) {\r\n                                    return <p></p>\r\n                                } else {\r\n                                    return <p>{children}</p>\r\n                                }\r\n\r\n                            case 'link':\r\n                                if (node.object === \"inline\") {\r\n                                    return <span>{children}</span>\r\n                                } else {\r\n                                    if (parentStyleIs(node, \"Body only\")) {\r\n                                        return <p></p>\r\n                                    } else {\r\n                                        return <h2>{children}</h2>\r\n                                    }\r\n                                }\r\n\r\n                            default:\r\n                                return undefined;\r\n                        }\r\n                    }\r\n                } \r\n            }\r\n        ]\r\n\r\n        const serializer = new Html({rules: RULES})\r\n        var output = serializer.serialize(this.getEditor().value)\r\n        \r\n        var tagReplacements = [\r\n            {regex: /<p>\\s*<\\/p>/g},  // special rule for removing empty paragraphs without inserting a newline\r\n\r\n            {regex: /<p>/g},\r\n            {regex: /<\\/p>/g, replace: \"\\n\\n\"},\r\n            {regex: /<div>/g},\r\n            {regex: /<\\/div>/g},\r\n            {regex: /<span>/g},\r\n            {regex: /<\\/span>/g},\r\n            {regex: /<h2>/g, replace: \"## \"},\r\n            {regex: /<\\/h2>/g, replace: \"\\n\"},\r\n        ]\r\n        tagReplacements.forEach((replacement) => {\r\n            output = output.replace(replacement.regex, replacement.replace ? replacement.replace : \"\")\r\n        })\r\n        return output\r\n    }\r\n\r\n    finishCondition() {\r\n        window.clearInterval(this.intervalLogger)\r\n    }\r\n\r\n    getEditor() {\r\n        return this.editor_ref.current;\r\n    }\r\n\r\n    getNodeId() {\r\n        this.node_id_counter++;\r\n        return this.node_id_counter;\r\n    }\r\n\r\n    canAddLinkAtSelection() {\r\n        const value = this.getEditor().value;\r\n        const is_in_linked_block = value.blocks.some(block => (block.type === 'link' || block.type === 'section' || block.type === 'body'));\r\n        const is_in_linked_inline = value.inlines.some(inline => (inline.type === 'link'));\r\n        return !is_in_linked_block && !is_in_linked_inline;\r\n    }\r\n\r\n    addLinkAtSelection(id, graph_node) {\r\n        this.getEditor().wrapLinkAtSelection(id);\r\n        this.addGraphMapping(id, graph_node);\r\n    }\r\n\r\n    addGraphMapping(id, graph_node) {\r\n        graph_node.setIsOnGraph(true);\r\n        this.map[id] = { graph_node: graph_node };\r\n    }\r\n\r\n    setLinkMapping(id, doc_node, long_or_short) {\r\n        if (!this.map[id]) {\r\n            // uh oh, this should exist\r\n            this.map[id] = {}\r\n\r\n            // maybe the mapping was deleted and re-added with ctrl-Z\r\n            // if so, hopefully it's stored as recently deleted\r\n            this.checkRecycleBinForGraphNode(id)\r\n        }\r\n\r\n        if (this.map[id].doc_nodes === undefined) {\r\n            this.map[id].doc_nodes = {};\r\n        }\r\n        this.map[id].doc_nodes[long_or_short] = doc_node;\r\n    }\r\n\r\n    getGraphNodeAndDocNode(id) {\r\n        return this.map[id];\r\n    }\r\n\r\n    checkRecycleBinForGraphNode(id) {\r\n        if (!this.map[id]) {\r\n            this.map[id] = {}\r\n        }\r\n\r\n        if (this.map[id].graph_node) {\r\n            // no need to restore\r\n            return;\r\n        }\r\n\r\n        const prev_version = this.map_recycle_bin[id]\r\n        if (prev_version && prev_version.graph_node) {\r\n            console.log('restored from recycle');\r\n            \r\n            this.addGraphMapping(id, prev_version.graph_node)\r\n        }\r\n    }\r\n\r\n    getGraphNode(id) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            return map.graph_node;\r\n        }\r\n    }\r\n\r\n    removeGraphNode(id) {\r\n        if (this.getDocNodes(id)) {\r\n            Object.values(this.getDocNodes(id)).forEach(node => {\r\n                this.getEditor().removeGraphLink(node);\r\n            })\r\n            this.map[id] = undefined;\r\n        }\r\n    }\r\n\r\n    removeDocNode(id) {\r\n        var map = this.getGraphNodeAndDocNode(id)\r\n        if (map) {\r\n            if (map.graph_node) {\r\n                map.graph_node.setIsOnGraph(false);\r\n            }\r\n            \r\n            this.map_recycle_bin[id] = this.map[id]\r\n            this.map[id] = undefined\r\n        }\r\n    }\r\n\r\n    getDocNodes(id) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            return map.doc_nodes;\r\n        }\r\n    }\r\n\r\n    getDocNodeShortText(id) {\r\n        const docNode = this.getDocNodes(id);\r\n        if (docNode) {\r\n            return docNode.short;\r\n        }\r\n    }\r\n\r\n    getDocNodeLongText(id) {\r\n        const docNode = this.getDocNodes(id);\r\n        if (docNode) {\r\n            return docNode.long;\r\n        }\r\n    }\r\n\r\n    getDocNodeRef(id, long_or_short) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map && map.doc_link_node) {\r\n            return map.doc_link_node[long_or_short].current;\r\n        }\r\n    }\r\n\r\n    getAllDocNodeRefs(id) {\r\n        var docNodes = [];\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            [\"long\", \"short\", \"section\"].forEach(long_or_short => {\r\n                if (map.doc_link_node && map.doc_link_node[long_or_short]) {\r\n                    docNodes.push(map.doc_link_node[long_or_short].current)\r\n                }\r\n            })\r\n        }\r\n        return docNodes;\r\n    }\r\n\r\n    registerLinkNode(id, ref, long_or_short) {\r\n        if (this.map[id].doc_link_node === undefined) {\r\n            this.map[id].doc_link_node = {};\r\n        }\r\n        this.map[id].doc_link_node[long_or_short] = ref;\r\n    }\r\n\r\n    // check whether a graph node's doc node still exists\r\n    updateIsOnGraphStatus(id) {\r\n        var docNode = this.getDocNodeShortText(id);\r\n        if (!docNode) {\r\n            return false\r\n        }\r\n\r\n        if (docNode && !this.getEditor().value.document.hasNode(docNode.key)) {\r\n            // tell the graph node that there is no doc node any more, for whatever reason\r\n            this.removeDocNode(id)\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    updateDocShortText(id, newText) {\r\n        var docNode = this.getDocNodeShortText(id);\r\n        \r\n        if (docNode) {\r\n            var editor = this.getEditor();\r\n\r\n            if (this.updateIsOnGraphStatus(id)) {\r\n                // replace any text with newText\r\n                docNode.nodes.forEach(child => {\r\n                    editor.removeNodeByKey(child.key);\r\n                });\r\n                editor.insertNodeByKey(docNode.key, 0, Text.create({text: newText}));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGraphShortText(id, newText) {\r\n        var graphNode = this.getGraphNode(id);\r\n        \r\n        if (graphNode) {\r\n            graphNode.updateShortText(newText);            \r\n        }\r\n    }\r\n\r\n    updateGraphLongText(id, newText) {\r\n        var graphNode = this.getGraphNode(id);\r\n        \r\n        if (graphNode) {\r\n            graphNode.updateLongText(newText);            \r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './LoadProject.css'\r\nimport db from '../../db.js'\r\nimport ProjectList from './ProjectsList.js'\r\nimport SharedState from '../../shared_state.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class LoadProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: []\r\n        };\r\n        this.addProject = this.addProject.bind(this)\r\n        this.deleteProject = this.deleteProject.bind(this)\r\n        this.loadProject = this.loadProject.bind(this)\r\n        this.renameProject = this.renameProject.bind(this)\r\n        this.duplicateProject = this.duplicateProject.bind(this)\r\n        this.updateProjectsFromDb = this.updateProjectsFromDb.bind(this)\r\n        \r\n        // skip the project select screen if the autoload prop is supplied, instead load project with that id\r\n        if (this.props.autoload) {\r\n            this.loadProject(this.props.autoload)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.autoload) {\r\n            this.updateProjectsFromDb()\r\n        }\r\n    }\r\n\r\n    updateProjectsFromDb() {\r\n        // todo - only retrieve relevant rows from projects table?\r\n        db.table('projects')\r\n            .toArray(projects => {\r\n                this.setState({ projects })\r\n            }).catch(err => {\r\n                toast.error(\"Error when loading projects: \" + err)\r\n            })\r\n    }\r\n\r\n    loadProject(id) {\r\n        const params = { condition: 'graph' }\r\n        const sharedState = new SharedState(id, params)\r\n        this.props.transitionToEditor(sharedState)\r\n    }\r\n\r\n    addProject() {\r\n        const project = {name: window.prompt('Name your project', 'New project')}\r\n        if (project.name) {\r\n            db.table('projects')\r\n                .add(project)\r\n                .then(() => {\r\n                    this.updateProjectsFromDb()\r\n                });\r\n        }\r\n    }\r\n\r\n    renameProject(id) {\r\n        db.table('projects')\r\n            .get(id)\r\n            .then((project) => {\r\n                const newName = window.prompt('Set a new project name', project.name)\r\n                if (newName) {\r\n                    db.table('projects')\r\n                        .update(id, { name: newName })\r\n                        .then(() => {\r\n                            this.updateProjectsFromDb()\r\n                        })\r\n                }\r\n            });\r\n    }\r\n\r\n    duplicateProject(id) {\r\n        db.table('projects')\r\n            .get(id)\r\n            .then((project) => {\r\n                project.name += ' (copy)'\r\n                delete project.id // set a new one automatically\r\n                db.table('projects')\r\n                    .add(project)\r\n                    .then(() => {\r\n                        this.updateProjectsFromDb()\r\n                    });\r\n            })\r\n    }\r\n\r\n    deleteProject(id) {\r\n        db.table('projects')\r\n            .delete(id)\r\n            .then(() => {\r\n                this.updateProjectsFromDb()\r\n            })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"load-project\">\r\n                <ProjectList projects={this.state.projects}\r\n                    deleteProject={this.deleteProject}\r\n                    loadProject={this.loadProject}\r\n                    renameProject={this.renameProject}\r\n                    duplicateProject={this.duplicateProject}\r\n                />\r\n                <p>\r\n                    <button className=\"pure-button pure-button-primary\" onClick={this.addProject}>New project</button>\r\n                </p>\r\n            </div>\r\n        );\r\n      }\r\n}","import React, { Component } from 'react';\r\nimport './ExperimentalControls.css';\r\n\r\nexport default class ExperimentControls extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"experiment-controls\">\r\n                <button onClick={this.props.backToMenu}>Back</button>\r\n                <button onClick={this.props.sharedState.save}>Save</button>\r\n            </div>\r\n        );\r\n    }\r\n}","/* eslint-disable no-fallthrough */\r\n/* eslint-disable default-case */\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport DocPane from './components/doc/DocPane.js';\r\nimport GraphPane from './components/graph/GraphPane.js';\r\nimport SplitPane from 'react-split-pane';\r\nimport LoadProject from './components/loadproject/LoadProject.js';\r\nimport { DndProvider } from 'react-dnd'\r\nimport Backend from 'react-dnd-html5-backend'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport SaveButton from './components/experiment/SaveButton';\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            phase: \"loadproject\",\r\n            params: undefined\r\n        }\r\n\r\n        this.transitionToEditor = this.transitionToEditor.bind(this)\r\n        this.transitionToMenu = this.transitionToMenu.bind(this)\r\n    }\r\n\r\n    transitionToEditor(newSharedState) {\r\n        this.setState({ \r\n            sharedState: newSharedState,\r\n            phase: \"editor\"\r\n        })\r\n    }\r\n\r\n    transitionToMenu() {\r\n        if (this.state.sharedState) {\r\n            this.state.sharedState.finishCondition()\r\n        }\r\n        this.setState({\r\n            sharedState: undefined,\r\n            phase: \"loadproject\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        switch(this.state.phase) {\r\n            case \"loadproject\":\r\n                return (\r\n                    <LoadProject transitionToEditor={this.transitionToEditor} autoload={false} />\r\n                )\r\n            case \"editor\":\r\n                return (\r\n                    <div className=\"App\">\r\n                        <DndProvider backend={Backend}>\r\n                            <SplitPane split=\"vertical\" defaultSize=\"50%\">\r\n                                <DocPane sharedState={this.state.sharedState} />\r\n                                <GraphPane sharedState={this.state.sharedState} />\r\n                            </SplitPane>\r\n                            <SaveButton sharedState={this.state.sharedState} backToMenu={this.transitionToMenu} />\r\n                        </DndProvider>\r\n                        <ToastContainer\r\n                            position=\"bottom-center\"\r\n                            autoClose={5000}\r\n                            hideProgressBar\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable={false}\r\n                            pauseOnHover\r\n                        />\r\n                    </div>\r\n                );\r\n            \r\n            case \"reset\":\r\n                // hacky way to destroy and recreate all components\r\n                window.setTimeout(() => this.setState({phase: \"editor\"}), 0.1)\r\n                return (\r\n                    <p>...</p>\r\n                )\r\n        }\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}