{"version":3,"sources":["components/graph/OptionPopup.js","components/doc/GraphPlugin.js","components/doc/NodeSwitch.js","components/doc/nodes/LinkNode.js","components/doc/nodes/BodyNode.js","dragtypes.js","components/doc/DragifyBlock.js","components/doc/DropifyBlock.js","components/doc/nodes/SectionNode.js","components/doc/LoggingPlugin.js","components/doc/nodes/PlainBlockNode.js","components/doc/SlateComponents.js","components/doc/HoveringMenu.js","components/doc/Schema.js","components/doc/DocEditor.js","components/graph/svg.connectable.js","components/doc/NodePlugin.js","components/doc/ReorderPlugin.js","components/doc/DocPane.js","components/graph/MouseFollower.js","components/graph/GraphNode.js","components/graph/DropifyGraphPane.js","components/graph/GraphPane.js","db.js","components/loadproject/ProjectsList.js","logging.js","shared_state.js","components/loadproject/LoadProject.js","components/experiment/SaveButton.js","App.js","serviceWorker.js","index.js"],"names":["OptionPopup","entries","x","y","shouldHideOnClickOutside","callback","selected","undefined","parent","this","hidePopup","bind","div","document","createElement","classList","add","appendChild","generateTable","style","left","top","getElementById","rect","getBoundingClientRect","right","window","innerWidth","bottom","innerHeight","setTimeout","hideOnClickOutside","table","forEach","entry","isClickable","row","insertRow","name","selectItem","e","colourCell","insertCell","textContent","symbol","color","colour","fontSize","padding","nameCell","addEventListener","buttons","buttonEntry","buttonCell","button","innerHTML","className","onclick","click","underlyingEntry","transientEntry","underlyingEntries","remove","element","outsideClickListener","event","elem","contains","target","offsetWidth","offsetHeight","getClientRects","length","removeClickListener","removeEventListener","addSection","draggedNode","editor","initialNodeStyle","getSharedState","addGraphMapping","id","node","insertSectionBlock","text","longText","logger","logEvent","link","Block","create","type","data","node_id","nodes","Text","body","section","nodeStyle","insertBlock","moveToEndOfNode","handleMouseUp","clickedNode","resetPos","getGraphNode","value","focus","getParent","toast","error","console","log","showNodeSwitchMenu","entriesToHide","filter","includes","preventDefault","clientX","clientY","selectedEntry","get","deleteNode","old","new","setNodeByKey","key","newStyle","moveToRangeOfNode","convertFromInline","shortText","getBlocksByType","prev","getPreviousBlock","next","getNextBlock","insertNodeByKey","wrapBlockByKey","removeNodeByKey","insertInline","insertText","convertToInline","querySelector","removeDocNode","LinkNode","props","state","hover","externalHover","setHover","newHover","sharedState","nodeId","setHoverer","setState","isHovered","selection","cursorInside","getDescendantsAtRange","classes","linkStyle","attributes","children","onMouseEnter","onMouseLeave","onContextMenu","Component","BodyNode","selectNode","isEmpty","onMouseDown","ItemTypes","blockSource","canDrag","isCollapsed","beginDrag","endDrag","monitor","component","didDrop","dropResult","getDropResult","droppedOnGraph","graphNode","addGraphNode","position","moveTo","blockIndex","indexOf","indexShift","insertBefore","indexDroppedOn","moveNodeByKey","parentKey","DragSource","connect","connectDragSource","dragSource","dragPreview","isDragging","blockTarget","innerDiv","mouse","getClientOffset","outerDiv","ReactDOM","findDOMNode","outerRect","item","innerRect","offset","newState","height","overHalf","drop","blockParent","DropTarget","connectDropTarget","dropTarget","isOver","isOverCurrent","shallow","canDrop","itemType","getItemType","DragifyBlock","DropifyBlock","blocks","some","block","verbose","getNodeStyleClass","onMouseOver","onMouseUp","ref","LoggingPlugin","options","onCopy","content","fragment","onCut","onPaste","transfer","getEventTransfer","paste_type","content_html","html","Button","React","forwardRef","active","reversed","cx","css","Icon","textLines","map","toArray","join","Menu","MarkButton","icon","isActive","setBlocks","HoverMenu","root","createPortal","HoveringMenu","menuRef","createRef","componentDidMount","updateMenu","componentDidUpdate","menu","current","isBlurred","removeAttribute","getSelection","getRangeAt","opacity","pageYOffset","pageXOffset","width","render","schema","inlines","normalize","code","unwrapInlineByKey","object","match","min","max","moveBlockAfterSection","child","linkNode","find","textNode","getLastText","insertTextByKey","addMissing","hasChildTypes","push","blockToMove","sectionToMoveAfter","sectionIndex","nodeType","getShortText","getLongText","index","addBlock","plugins","findEventRange","select","inline","onBlur","deselect","commands","removeGraphLink","hasNode","section_index","child_index","getChild","wrapLinkAtSelection","wrapInline","renderInline","getRefAndId","renderBlock","refAndId","moveToStartOfNode","onDrop","getLinkInlines","the_doc","filterDescendants","textNoNewlines","replace","fragmentInlines","docInlines","usedIds","usedId","inlineWithId","onChange","updateFunc","updateGraphShortText","updateGraphLongText","update","updateText","checkRecycleBinForGraphNode","onKeyDown","startBlock","start","end","isExpanded","getNodesAtRange","updateIsOnGraphStatus","isAtEndOfNode","nextBlock","prevBlock","blockToInsert","sectionParent","moveBackward","relevantBlock","long_or_short","setLinkMapping","registerLinkNode","NodePlugin","renderEditor","Fragment","emptyValue","Value","fromJSON","DocEditor","mapHasLoaded","queries","getValue","editor_ref","getSavedDocValue","savedValue","editorHasLoaded","plainClass","condition","placeholder","spellCheck","DocPane","_typeof","Symbol","iterator","obj","constructor","prototype","t","n","r","s","o","u","require","a","i","f","Error","l","exports","call","1","module","Id","SetOrGet","IterateObject","Deffy","_connections","_betweenTwoBubbles","container","markers","connectable","elmTarget","con","k","kk","marker","addClass","markerId","line","path","attr","fill","stroke","specialCoords","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","d","source","toString","ids","id1","id2","reverse","_","computeLineCoordinates","cons","output","sT","transform","tT","sB","bbox","tB","x1","y1","x2","y2","cy","dx","Math","abs","dy","dd","out","ex","ey","sqrt","xDiff","yDiff","x2centre","grad","vals","rightLeftCalc","topBotCalc","padEllipse","xR1","xR2","yR1","yR2","elmS","elmT","tagName","parseFloat","getAttribute","sx","sy","ux","uy","isNaN","results","plot","on","setLineColor","c","SVG","extend","Element","delete_connectable","dispatchEvent","CustomEvent","2","Typpy","input","def","empty","3","arguments","is","str","String","NaN","toLowerCase","4","random","substr","5","fn","keys","Array","isArray","Object","6","field","7","apply","8","COLOURS","DEFAULT_ARROW_OPTIONS","MouseFollower","shared_state","svg","connectables_container","links","drawing_arrow_from","connector","arrow_id_counter","completed_arrows","mouse_rect","group","point","move","stop_drawing_arrow","arrows","arrowOptions","get_node","arrow","originNode","origin","destinationNode","destination","draw_arrow","add_context_menu_to_arrow","new_source","show","hide","source_node","instance","remove_arrow","arrowObject","show_context_menu","graph_pos","edit_connector_type","new_colour","detail","oldColour","newColour","end_node","c1","getScreenCoords","c2","midpoint","drawing_arrow_from_id","getNewId","direction","getNextAvailableColour","availableColours","option","thisColourIndex","nextIndex","clickEditButton","params","editButton","updateName","newValue","substring","finishEditing","colourButton","changeArrowColour","clickDeleteArrowTypeButton","confirm","splice","parentNode","removeChild","arrowOptionsWithButtons","entryWithButtons","popup_x","popup_y","onColourSelected","prev_selected","getArrowOptions","setArrowColour","selected_option","newRelation","json","mf","ARROW_HITBOX_MARGIN","GraphNode","mouse_follower","focus_text_area","getNodesList","isOnGraph","getNodeId","translate","dropShadow","radius","arrow_hitbox","editRect","updateShortText","updateLongText","setupRectDragging","setupArrowHitbox","complete_arrow","setupHover","setupContextMenu","editText","doNotDeleteIfEmptyText","setIsOnGraph","isFromJSON","screenCoords","newVal","removeClass","showOptionMenu","delete","hoverers","startHover","getAllDocNodeRefs","decoratedRef","setExternalHover","endHover","hoverer","isHovering","setHovered","setupGroupDragging","edit_text_if_not_just_dropped","just_dropped","just_dropped_obj","center","draggy","stopPropagation","start_x","start_y","activeElement","blur","off","delta","movedX","movedY","x_diff","y_diff","update_source","start_arrow","newShortText","formattedText","splitIntoLines","resizeRect","newLongText","charsPerLine","split","word","segments","segment","space","numLinesOfText","rectHeight","size","delete_if_empty_text","textarea","preEditText","screen_coords","display","scrollHeight","save_changes","updateDocShortText","save_and_hide","onblur","onkeyup","removeGraphNode","nodesList","DropifyGraphPane","getItem","findDescendant","getSavedGraph","graphPane","$el","panZoom","zoomMin","zoomMax","root_point","doc","json_connections","connections","addNodeAtScreenLocation","setupTextDropping","setAttribute","loadNodesFromJSON","getNodeById","draw_loaded_arrows","addNoNodesIndicator","toJSON","nodeJSON","noNodesIndicator","dataTransfer","types","getData","canAddLinkAtSelection","addLinkAtSelection","el","db","Dexie","version","stores","projects","ProjectsList","project","onClick","loadProject","renameProject","duplicateProject","deleteProject","EVENT_TYPES_WHICH_DO_NOT_MAKE_STATE_DIRTY","Logger","db_id","shouldLogToConsole","conditions","logToConsole","JSON","stringify","stateIsDirty","getLog","events","timestamp","Date","setLog","then","catch","err","msg","SharedState","onDataLoad","doc_value","graph_value","node_id_counter","slate_id_counter","map_recycle_bin","intervalLogger","setInterval","getEditor","getArgumentMarkdown","downloadExperimentData","save","onbeforeunload","getStateIsDirty","returnValue","mapFromJSON","lastSavedDocumentState","changes","mapToJSON","idExists","info","message","mapJson","doc_nodes","part","docNodeObjects","getDocNodes","getPath","graph_node","getNode","argument","logs","file","Blob","href","URL","createObjectURL","download","getExperimentId","parentStyleIs","styleToCheck","RULES","serialize","Html","rules","regex","replacement","clearInterval","is_in_linked_block","is_in_linked_inline","doc_node","prev_version","getGraphNodeAndDocNode","values","docNode","short","long","doc_link_node","docNodes","getDocNodeShortText","newText","LoadProject","addProject","updateProjectsFromDb","autoload","transitionToEditor","prompt","newName","ExperimentControls","backToMenu","App","phase","transitionToMenu","getStorageUsed","newSharedState","finishCondition","navigator","storage","estimate","storageUsed","usage","quota","toPrecision","DndProvider","backend","Backend","defaultSize","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Boolean","location","hostname","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a9cd8a7.chunk.js","sourcesContent":["export default class OptionPopup {\r\n    constructor(entries, x, y, shouldHideOnClickOutside, callback, selected=undefined, parent=undefined) {\r\n        this.hidePopup = this.hidePopup.bind(this)\r\n\r\n        this.div = document.createElement(\"div\");\r\n        this.div.classList.add(\"option-popup-div\");\r\n        this.div.appendChild(this.generateTable(entries, callback, selected));\r\n        this.div.style.left = x + \"px\";\r\n        this.div.style.top = y + \"px\";\r\n\r\n        if (parent === undefined) {\r\n            parent = document.getElementById(\"graph\");\r\n        }\r\n        parent.appendChild(this.div);\r\n\r\n        // prevent the popup from showing up partially offscreen\r\n        const rect = this.div.getBoundingClientRect()\r\n        if (rect.right > window.innerWidth) {\r\n            this.div.style.left = (x - (rect.right - window.innerWidth)) + \"px\"\r\n        }\r\n        if (rect.bottom > window.innerHeight) {\r\n            this.div.style.top = (y - (rect.bottom - window.innerHeight)) + \"px\"\r\n        }\r\n\r\n        if (shouldHideOnClickOutside) {\r\n            setTimeout(() => this.hideOnClickOutside(this.div), 0.01);\r\n        }\r\n    }\r\n\r\n    generateTable(entries, callback, selected) {\r\n        var table = document.createElement(\"table\");\r\n        entries.forEach(entry => {\r\n            entry.isClickable = entry.isClickable !== undefined ? entry.isClickable : true\r\n\r\n            var row = table.insertRow();\r\n            row.classList.add(\"option-row\");\r\n            if (entry.name === selected) {\r\n                row.classList.add(\"option-row-selected\");\r\n            }\r\n\r\n            const selectItem = (e) => {\r\n                if (entry.isClickable) {                    \r\n                    callback(entry);\r\n                    this.hidePopup();\r\n                }\r\n            }\r\n\r\n            var colourCell = row.insertCell();\r\n            colourCell.textContent = entry.symbol;\r\n            colourCell.style.color = entry.colour;\r\n            colourCell.style.fontSize = \"150%\";\r\n            colourCell.style.padding = '10px'\r\n            \r\n            var nameCell = row.insertCell();\r\n            nameCell.classList.add('option-cell')\r\n            nameCell.textContent = entry.name\r\n\r\n            colourCell.addEventListener('click', selectItem)\r\n            nameCell.addEventListener('click', selectItem)\r\n\r\n            if (entry.buttons) {\r\n                entry.buttons.forEach(buttonEntry => {\r\n                    var buttonCell = row.insertCell()\r\n                    var button = document.createElement('BUTTON')\r\n                    button.innerHTML = '<p class=\"' + buttonEntry.className + '\"></p>'\r\n                    button.className = \"pure-button\"\r\n                    button.style.padding = \"0px 10px 0px 10px\"\r\n                    buttonCell.appendChild(button)\r\n                    button.onclick = (e) => buttonEntry.click(e, {colourCell, nameCell, buttonCell, underlyingEntry: buttonEntry.underlyingEntry, \r\n                            transientEntry: entry, underlyingEntries: buttonEntry.underlyingEntries, row, selected: entry.name === selected,\r\n                            hidePopup: this.hidePopup})\r\n                })\r\n            }\r\n        });\r\n\r\n        return table;\r\n    }\r\n\r\n    hidePopup() {\r\n        this.div.remove()\r\n    }\r\n\r\n    hideOnClickOutside(element) {\r\n        const isVisible = elem => !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n\r\n        const outsideClickListener = event => {\r\n            if (!element.contains(event.target) && isVisible(element)) {\r\n              element.remove();\r\n              removeClickListener()\r\n            }\r\n        }\r\n    \r\n        const removeClickListener = () => {\r\n            document.removeEventListener('click', outsideClickListener)\r\n        }\r\n    \r\n        document.addEventListener('click', outsideClickListener)\r\n        document.addEventListener('contextmenu', outsideClickListener)\r\n    }\r\n}","import { Block, Text } from 'slate';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function GraphPlugin(options) {\r\n    return {\r\n        onMouseUp(event, editor, next) {\r\n            var draggedNode = editor.getSharedState().draggedNode;\r\n\r\n            if (draggedNode) {\r\n                draggedNode.resetPos();\r\n\r\n                if (editor.getSharedState().getGraphNode(draggedNode.id)) {\r\n                    toast.error('You can\\'t add the same node twice!')\r\n                    console.log('Duplicate - editor')\r\n                } else {\r\n                    const target = editor.findEventRange(event)\r\n                    if (target) {\r\n                        editor.select(target)\r\n\r\n                        // prevent insertion inside an inline link\r\n                        // (insertion inside a section is fixed by schema)\r\n                        const linkNode = editor.value.inlines.find(inline => inline.type === 'link')\r\n                        if (linkNode) {\r\n                            editor.moveToEndOfNode(linkNode)\r\n                        }\r\n\r\n                        addSection(draggedNode, editor)\r\n                    }\r\n                }\r\n            }\r\n            next();\r\n        },\r\n        \r\n        onBlur(event, editor, next) {\r\n            editor.deselect();\r\n            next();\r\n        },\r\n\r\n        commands: {\r\n            removeGraphLink(editor, node) {\r\n                const document = editor.value.document\r\n                if (!document.hasNode(node.key)) {\r\n                    console.log('couldnt remove graph link, node doesnt exist');\r\n                    \r\n                    return\r\n                }\r\n\r\n                if (node.type === \"section\") {\r\n                    // move the children out from inside this section to be after it\r\n                    const section_index = editor.value.document.nodes.indexOf(node)\r\n                    if (section_index !== -1) {\r\n                        var child_index = 0;\r\n                        node.nodes.forEach(child => {\r\n                            if (!document.hasNode(child.key)) {\r\n                                return\r\n                            }\r\n\r\n                            const nodeStyle = node.data.get(\"nodeStyle\")\r\n                            if ((child_index === 0 && nodeStyle === \"Body only\") || (child_index === 1 && nodeStyle === \"Heading only\")) {\r\n                                editor.removeNodeByKey(child.key)\r\n                            } else {\r\n                                editor.moveNodeByKey(child.key, editor.value.document.key, section_index + child_index + 1)\r\n                            }\r\n                            child_index ++\r\n                        });\r\n                    }\r\n                    editor.removeNodeByKey(node.key)\r\n                } else if (editor.value.document.getChild(node.key) || node.object === \"inline\") {           \r\n                    editor.setNodeByKey(node.key, {\"type\": \"\"})\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function addSection(draggedNode, editor, initialNodeStyle=\"Heading and body\") {\r\n    editor.getSharedState().addGraphMapping(draggedNode.id, draggedNode.node)\r\n\r\n    insertSectionBlock(editor, draggedNode.id, draggedNode.text, draggedNode.longText, initialNodeStyle)\r\n\r\n    editor.getSharedState().logger.logEvent({\r\n        'type': 'doc_create_from_node', \r\n        'node_id': draggedNode.id, \r\n        'short_text': draggedNode.text, \r\n        'long_text': draggedNode.longText\r\n    });\r\n}\r\n\r\nexport function insertSectionBlock(editor, id, text, longText, initialNodeStyle) {\r\n    var link = Block.create({\r\n        type: 'link',\r\n        data: {node_id: id},\r\n        nodes: [Text.create({text: text})]\r\n    })\r\n\r\n    var body = Block.create({\r\n        type: 'body',\r\n        data: {node_id: id},\r\n        nodes: [Text.create({text: longText})]\r\n    })\r\n\r\n    var section = Block.create({\r\n        type: 'section',\r\n        data: {node_id: id, nodeStyle: initialNodeStyle},\r\n        nodes: [link, body]\r\n    })    \r\n    \r\n    editor.insertBlock(section);\r\n    editor.moveToEndOfNode(section)\r\n\r\n    return section\r\n}\r\n\r\nexport function handleMouseUp(editor, clickedNode) {\r\n    var draggedNode = editor.getSharedState().draggedNode;\r\n\r\n    if (draggedNode) {\r\n        draggedNode.resetPos();\r\n\r\n        if (editor.getSharedState().getGraphNode(draggedNode.id)) {\r\n            toast.error('You can\\'t add the same node twice!')\r\n            console.log('Duplicate - node');\r\n            \r\n        } else {\r\n            const { value } = editor\r\n            const { document } = value\r\n            editor.focus()\r\n\r\n            if (clickedNode.type === \"body\" || clickedNode.type === \"link\") {\r\n                clickedNode = document.getParent(clickedNode);\r\n            }\r\n\r\n            editor.moveToEndOfNode(clickedNode);\r\n\r\n            addSection(draggedNode, editor);\r\n\r\n            editor.getSharedState().draggedNode = false;\r\n            return true;\r\n        }\r\n    }\r\n}","import { Block } from 'slate';\r\nimport OptionPopup from '../graph/OptionPopup.js'\r\nimport { insertSectionBlock } from './GraphPlugin.js';\r\n\r\nexport const showNodeSwitchMenu = (event, node, editor, entriesToHide) => {\r\n    var entries = [\r\n        {'colour': 'black', 'name': 'Inline', 'symbol': \"⌶\"},\r\n        {'colour': 'black', 'name': 'Heading and body', 'symbol': \"▤\"},\r\n        {'colour': 'black', 'name': 'Heading only', 'symbol': \"▔\"},\r\n        {'colour': 'black', 'name': 'Body only', 'symbol': \"▂\"},\r\n        {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n    ]\r\n\r\n    if (entriesToHide) {\r\n        entries = entries.filter((entry) => {return !entriesToHide.includes(entry.name)})\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    const onOptionSelect = (selectedEntry) => {\r\n        const selected = selectedEntry.name\r\n        if (selected === \"Delete\") {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"doc_node_delete\",\r\n                id: node.data.get(\"node_id\")\r\n            });\r\n            deleteNode(node, editor);\r\n        } else {\r\n            var nodeStyle = node.data.get(\"nodeStyle\")\r\n            if (!nodeStyle) {\r\n                nodeStyle = \"Inline\"\r\n            }\r\n\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"doc_node_change_format\",\r\n                old: nodeStyle,\r\n                new: selected,\r\n                id: node.data.get(\"node_id\")\r\n            });\r\n\r\n            if (nodeStyle !== \"Inline\" && selected !== \"Inline\") {\r\n                editor.setNodeByKey(node.key, { data: {node_id: node.data.get(\"node_id\"), nodeStyle: selected} })\r\n            } else if (nodeStyle === \"Inline\" && selected !== \"Inline\") {\r\n                convertFromInline(node, editor, selected)\r\n            }  else if (nodeStyle !== \"Inline\" && selected === \"Inline\") {\r\n                convertToInline(node, editor, selected)\r\n            }\r\n        }\r\n    }\r\n\r\n    new OptionPopup(entries, event.clientX, event.clientY, true, onOptionSelect, node.data.get('nodeStyle'), document.querySelector(\".App\"))\r\n}\r\n\r\nexport function deleteNode(node, editor) {\r\n    editor.getSharedState().removeDocNode(node.data.get(\"node_id\"))\r\n\r\n    editor.removeNodeByKey(node.key)\r\n}\r\n\r\nfunction convertFromInline(node, editor, newStyle) {\r\n    editor.moveToRangeOfNode(node);\r\n    const parent = editor.value.document.getParent(node.key)\r\n    if (parent && parent.text === node.text) {\r\n        editor.moveToRangeOfNode(parent)\r\n    }\r\n    insertSectionBlock(editor, node.data.get(\"node_id\"), node.text, \"\", newStyle)    \r\n}\r\n\r\nfunction convertToInline(node, editor) {\r\n    const shortText = node.getBlocksByType(\"link\").get(0).text;\r\n    // need to get 0th child because previous of section is the body inside it\r\n    const prev = editor.value.document.getPreviousBlock(node.nodes.get(0).key)\r\n    const next = editor.value.document.getNextBlock(node.nodes.get(1).key)\r\n\r\n    const getEmptyParagraph = () => Block.create({\r\n        type: 'paragraph'\r\n    })\r\n\r\n    // if doc only contains this section, add an empty paragraph at the start to prevent emptying the doc\r\n    if (!prev && !next) {\r\n        editor.insertNodeByKey(editor.value.document.key, 0, getEmptyParagraph())\r\n    }\r\n\r\n    editor.moveToRangeOfNode(node)\r\n\r\n    // don't merge with prev block if prev is another section - wrap it in a fresh paragraph instead\r\n    if ((prev && (prev.type === \"section\" || prev.type === \"body\")) || (!prev && next && (next.type === \"section\" || next.type === \"link\"))) {\r\n        editor.wrapBlockByKey(node.key, \"paragraph\")\r\n        editor.removeNodeByKey(node.key)\r\n    } else {\r\n        editor.removeNodeByKey(node.key)\r\n    }\r\n\r\n    editor.insertInline({\r\n            type: \"link\",\r\n            data: {node_id: node.data.get(\"node_id\"), nodeStyle: \"Inline\"},\r\n        })\r\n        .insertText(shortText)\r\n}\r\n\r\nexport const getNodeStyleClass = (verbose) => {\r\n    switch (verbose) {\r\n        case \"Heading only\":\r\n            return \" hide-body\"\r\n\r\n        case \"Body only\":\r\n            return \" hide-heading\"\r\n    \r\n        default:\r\n            return \"\";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { showNodeSwitchMenu } from '../NodeSwitch';\r\n\r\nclass LinkNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false,\r\n        }\r\n        \r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {     \r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"link_mouse\", newHover);\r\n        }\r\n\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.props.editor;\r\n        const { document, selection } = value;\r\n        var cursorInside = document.getDescendantsAtRange(selection).contains(this.props.node)\r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"link_cursor\", cursorInside)\r\n        }\r\n        \r\n        var hoverClass = (this.state.externalHover || cursorInside) ? \" hovered\" : \"\";\r\n        var classes = \"node-link\" + hoverClass;\r\n\r\n        if (this.props.linkStyle === \"heading\") {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}>\r\n                    <u><b>{this.props.children}</b></u>\r\n                </p>\r\n            );\r\n\r\n        } else if (this.props.linkStyle === \"inline\") {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}\r\n                        onMouseEnter={() => this.setHover(true)} \r\n                        onMouseLeave={() => this.setHover(false)}\r\n                        onContextMenu={(e) => showNodeSwitchMenu(e, this.props.node, this.props.editor)}>\r\n                    {this.props.children}\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default LinkNode;","import React, { Component } from 'react';\r\n\r\nexport default class BodyNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n        this.selectNode = props.selectNode;\r\n    }\r\n\r\n    setHover(newHover) {\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        var hoverClass = (this.state.externalHover || this.state.hover) ? \" hovered\" : \"\";\r\n        var classes = \"node-body\" + hoverClass + (this.props.isEmpty ? \" placeholder\" : \"\");\r\n\r\n        const { value } = this.props.editor;\r\n        const { document, selection } = value;\r\n        var cursorInside = document.getDescendantsAtRange(selection).contains(this.props.node)\r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"body_cursor\", cursorInside);\r\n            node.setHoverer(\"body_mouse\", this.state.hover);\r\n        }\r\n\r\n        if (this.props.isEmpty) {\r\n                return (\r\n                    <p className={classes} {...this.props.attributes} onMouseDown={this.selectNode}>\r\n                        Type some text...{this.props.children}\r\n                    </p>\r\n                );\r\n        } else {\r\n            return (\r\n                <p className={classes} {...this.props.attributes}>\r\n                    {this.props.children}\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n}","export const ItemTypes = {\r\n    BLOCK: \"block\",\r\n}","import { DragSource } from 'react-dnd';\r\nimport { ItemTypes } from '../../dragtypes';\r\nimport { addSection } from './GraphPlugin.js'\r\n\r\nconst blockSource = {\r\n    canDrag(props) {\r\n        // don't drag if there is a non-collapsed selection, so it doesn't interfere with dragging selections to graph\r\n        return props.editor.value.selection.isCollapsed\r\n    },\r\n\r\n    beginDrag(props) {\r\n      // Return the data describing the dragged item\r\n      const item = { id: props.node.id, node: props.node }\r\n      return item\r\n    },\r\n\r\n    endDrag(props, monitor, component) {\r\n        if (!monitor.didDrop()) {            \r\n            return\r\n        }\r\n\r\n        const dropResult = monitor.getDropResult()\r\n        const sharedState = props.editor.getSharedState()\r\n\r\n        if (dropResult.droppedOnGraph) {\r\n            const graphNode = sharedState.addGraphNode('', dropResult.position.x, dropResult.position.y, true)\r\n            const draggedNode = {\r\n                id: graphNode.id,\r\n                node: graphNode,\r\n                text: \"\",\r\n                longText: props.node.text\r\n            }\r\n            props.editor.moveTo(props.node.key)\r\n            \r\n            addSection(draggedNode, props.editor, \"Body only\")\r\n            props.editor.removeNodeByKey(props.node.key)\r\n        } else {\r\n            const document = props.editor.value.document;\r\n            const blockParent = document.getParent(props.node.key);\r\n            const blockIndex = blockParent.nodes.indexOf(props.node);\r\n            const indexShift = (dropResult.insertBefore ? 1 : 0) - (dropResult.indexDroppedOn > blockIndex ? 1 : 0)\r\n\r\n            props.editor.moveNodeByKey(props.node.key, dropResult.parentKey, dropResult.indexDroppedOn + indexShift)\r\n\r\n            sharedState.logger.logEvent({\r\n                'type': 'reorder',\r\n                'id': props.node.data.get('node_id'),\r\n                'old_index': blockIndex,\r\n                'new_index': dropResult.indexDroppedOn + indexShift,\r\n            });\r\n        }\r\n    },\r\n  }\r\n\r\n/**\r\n * Specifies which props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDragSource: connect.dragSource(),\r\n        dragPreview: connect.dragPreview(),\r\n        isDragging: monitor.isDragging(),\r\n    }\r\n}\r\n\r\nexport default DragSource(ItemTypes.BLOCK, blockSource, collect)","import ReactDOM from 'react-dom';\r\nimport { DropTarget } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../dragtypes\";\r\n\r\nconst blockTarget = {\r\n    hover(props, monitor, component) {\r\n        const mouse = monitor.getClientOffset();\r\n\r\n        // calculate based on height of firstChild because if this is the last node in the doc, its outer div expands to fill the remaining vertical space\r\n        const outerDiv = ReactDOM.findDOMNode(component)        \r\n        const outerRect = outerDiv.getBoundingClientRect()\r\n        \r\n        var innerDiv;\r\n        for (let item of outerDiv.children) {\r\n            if (item.classList.contains('plain-block') || item.classList.contains('section')) {\r\n                innerDiv = item;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!innerDiv) {\r\n            console.log('error: couldn\\'t find the inner div!');\r\n            return\r\n        }\r\n        const innerRect = innerDiv.getBoundingClientRect()       \r\n    \r\n        // subtract offset of the innerRect from the outerRect, to prevent the insertion of the drag indicator from affecting things\r\n        const offset = (innerRect.y - outerRect.y)\r\n        var newState = false\r\n        if (mouse.y + offset > (innerRect.y + innerRect.height / 2)) {\r\n            newState = true\r\n        }\r\n        if (component.state.overHalf !== newState) {\r\n            component.setState({overHalf: newState});\r\n        }\r\n    },\r\n\r\n    drop(props, monitor, component) {\r\n        const document = props.editor.value.document;\r\n        const blockParent = document.getParent(props.node.key);\r\n        const blockIndex = blockParent.nodes.indexOf(props.node);\r\n        return { droppedOnGraph: false, parentKey: blockParent.key, indexDroppedOn: blockIndex, insertBefore: component.state.overHalf }\r\n    },\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDropTarget: connect.dropTarget(),\r\n        // You can ask the monitor about the current drag state:\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({ shallow: true }),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType(),\r\n    }\r\n}\r\n\r\nexport default DropTarget(ItemTypes.BLOCK, blockTarget, collect)","import React, { Component } from 'react';\r\nimport DragifyBlock from '../DragifyBlock';\r\nimport DropifyBlock from '../DropifyBlock';\r\nimport { handleMouseUp } from '../GraphPlugin';\r\nimport { showNodeSwitchMenu, getNodeStyleClass } from '../NodeSwitch';\r\n\r\nclass SectionNode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hover: false,\r\n            externalHover: false,\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {     \r\n        var node = this.props.sharedState.getGraphNode(this.props.nodeId);\r\n        if (node) {\r\n            node.setHoverer(\"section_mouse\", newHover);\r\n        }\r\n\r\n        this.setState({hover: newHover});\r\n    }\r\n    \r\n    setExternalHover(isHovered) {\r\n        this.setState({externalHover: isHovered});\r\n    }\r\n\r\n    render() {\r\n        const { isOverCurrent, connectDropTarget, connectDragSource, isDragging } = this.props;\r\n\r\n        const value = this.props.editor.value\r\n        var cursorInside = value.blocks && value.blocks.some(block => block === this.props.node || this.props.node.nodes.includes(block))\r\n\r\n        var hoverClass = (this.state.externalHover || cursorInside) ? \" hovered\" : \"\";\r\n        var classes = \"section plain-block \" + hoverClass  + (isDragging ? \" display-none\" : \"\");\r\n        classes += getNodeStyleClass(this.props.node.data.get(\"nodeStyle\"))\r\n        \r\n\r\n        return connectDropTarget(\r\n            <div className='block-outer-div'>\r\n                {(isOverCurrent && !this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                <div className={classes} {...this.props.attributes} \r\n                        onMouseEnter={() => this.setHover(true)} onMouseOver={() => this.setHover(true)} onMouseLeave={() => this.setHover(false)} \r\n                        onMouseUp={() => {handleMouseUp(this.props.editor, this.props.node) && this.setState({hover: false})}}\r\n                        onContextMenu={(e) => showNodeSwitchMenu(e, this.props.node, this.props.editor)}\r\n                        ref={connectDragSource}>\r\n                    {this.props.children}\r\n                </div>\r\n                {(isOverCurrent && this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                {(this.state.hover && this.props.editor.getSharedState().draggedNode) && <div className=\"drop-indicator\" />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragifyBlock(DropifyBlock(SectionNode))","\r\nimport { getEventTransfer } from 'slate-react';\r\n\r\nexport default function LoggingPlugin(options) {\r\n    return {\r\n        onCopy(event, editor, next) {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"copy\",\r\n                content: editor.value.fragment.text\r\n            });\r\n            \r\n            next();\r\n        },\r\n\r\n        onCut(event, editor, next) {\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"cut\",\r\n                content: editor.value.fragment.text\r\n            });\r\n            \r\n            next();\r\n        },\r\n\r\n        onPaste(event, editor, next) {\r\n            var transfer = getEventTransfer(event);\r\n\r\n            editor.getSharedState().logger.logEvent({\r\n                type: \"paste\",\r\n                paste_type: transfer.type,\r\n                content: transfer.fragment ? transfer.fragment.text : \"\",\r\n                content_html: transfer.fragment ? \"\" : transfer.html  // only include if there is no fragment (pasted from external)\r\n            });\r\n            \r\n            next();\r\n        },\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DragifyBlock from '../DragifyBlock';\r\nimport DropifyBlock from '../DropifyBlock';\r\nimport { handleMouseUp } from '../GraphPlugin';\r\n\r\nclass PlainBlockNode extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hover: false\r\n        }\r\n        this.setHover = this.setHover.bind(this);\r\n    }\r\n\r\n    setHover(newHover) {\r\n        this.setState({hover: newHover});\r\n    }\r\n\r\n    render() {\r\n        const { isOverCurrent, connectDropTarget, connectDragSource, isDragging } = this.props\r\n\r\n        const classes = \"plain-block \" + (isDragging ? \" display-none\" : \"\")\r\n\r\n        return connectDropTarget(\r\n            <div className='block-outer-div'>\r\n                {(isOverCurrent && !this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                <div className={classes} {...this.props.attributes} \r\n                        onMouseUp={() => {handleMouseUp(this.props.editor, this.props.node) && this.setState({hover: false})}} \r\n                        onMouseEnter={() => this.setHover(true)} onMouseOver={() => this.setHover(true)} onMouseLeave={() => this.setHover(false)}\r\n                        ref={connectDragSource}>\r\n                    {this.props.children}\r\n                </div>\r\n                {(isOverCurrent && this.state.overHalf && <div className=\"drop-indicator\" />)}\r\n                {(this.state.hover && this.props.editor.getSharedState().draggedNode) && <div className=\"drop-indicator\" />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragifyBlock(DropifyBlock(PlainBlockNode))","import React from 'react'\r\nimport { cx, css } from 'emotion'\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ className, active, reversed, ...props }, ref) => (\r\n    <span\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        className,\r\n        css`\r\n          cursor: pointer;\r\n          color: ${reversed\r\n            ? active ? 'white' : '#aaa'\r\n            : active ? 'black' : '#ccc'};\r\n        `\r\n      )}\r\n    />\r\n  )\r\n)\r\n\r\nexport const EditorValue = React.forwardRef(\r\n  ({ className, value, ...props }, ref) => {\r\n    const textLines = value.document.nodes\r\n      .map(node => node.text)\r\n      .toArray()\r\n      .join('\\n')\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...props}\r\n        className={cx(\r\n          className,\r\n          css`\r\n            margin: 30px -20px 0;\r\n          `\r\n        )}\r\n      >\r\n        <div\r\n          className={css`\r\n            font-size: 14px;\r\n            padding: 5px 20px;\r\n            color: #404040;\r\n            border-top: 2px solid #eeeeee;\r\n            background: #f8f8f8;\r\n          `}\r\n        >\r\n          Slate's value as text\r\n        </div>\r\n        <div\r\n          className={css`\r\n            color: #404040;\r\n            font: 12px monospace;\r\n            white-space: pre-wrap;\r\n            padding: 10px 20px;\r\n            div {\r\n              margin: 0 0 0.5em;\r\n            }\r\n          `}\r\n        >\r\n          {textLines}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport const Icon = React.forwardRef(({ className, ...props }, ref) => (\r\n  <span\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      'material-icons',\r\n      className,\r\n      css`\r\n        font-size: 18px;\r\n        vertical-align: text-bottom;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Instruction = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        white-space: pre-wrap;\r\n        margin: 0 -20px 10px;\r\n        padding: 10px 20px;\r\n        font-size: 14px;\r\n        background: #f8f8e8;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Menu = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        & > * {\r\n          display: inline-block;\r\n        }\r\n\r\n        & > * + * {\r\n          margin-left: 15px;\r\n        }\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Toolbar = React.forwardRef(({ className, ...props }, ref) => (\r\n  <Menu\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        position: relative;\r\n        padding: 1px 18px 17px;\r\n        margin: 0 -20px;\r\n        border-bottom: 2px solid #eee;\r\n        margin-bottom: 20px;\r\n      `\r\n    )}\r\n  />\r\n))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { css } from 'emotion'\r\nimport { Button, Icon, Menu } from './SlateComponents.js'\r\n\r\n// adapted from https://github.com/ianstormtaylor/slate/blob/master/site/examples/hovering-toolbar.js\r\n\r\nconst MarkButton = ({ editor, type, icon }) => {\r\n  const { value } = editor\r\n  const isActive = value.blocks && value.blocks.some(block => block.type === type)\r\n  return (\r\n    <Button\r\n      reversed\r\n      active={isActive}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        editor.setBlocks((isActive ? \"paragraph\" : type))\r\n\r\n        editor.getSharedState().logger.logEvent({\r\n          'type': 'set_title' + (isActive ? \"_disabled\" : \"_enabled\"),\r\n      });\r\n      }}\r\n    >\r\n      <Icon>{icon}</Icon>\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst HoverMenu = React.forwardRef(({ editor }, ref) => {\r\n  const root = window.document.getElementById('root')\r\n  return ReactDOM.createPortal(\r\n    <Menu\r\n      ref={ref}\r\n      className={css`\r\n        padding: 8px 7px 6px;\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: -10000px;\r\n        left: -10000px;\r\n        margin-top: -6px;\r\n        opacity: 0;\r\n        background-color: #222;\r\n        border-radius: 4px;\r\n        transition: opacity 0.25s;\r\n      `}\r\n    >\r\n      <MarkButton editor={editor} type=\"heading\" icon=\"Heading\" />\r\n    </Menu>,\r\n    root\r\n  )\r\n})\r\n\r\n\r\nclass HoveringMenu extends React.Component {\r\n\r\n  menuRef = React.createRef()\r\n\r\n  componentDidMount = () => {\r\n    this.updateMenu()\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    this.updateMenu()\r\n  }\r\n\r\n  updateMenu = () => {\r\n    const menu = this.menuRef.current\r\n    if (!menu) return\r\n\r\n    const value = this.props.editor.value\r\n    const { fragment, selection } = value\r\n\r\n    if (selection.isBlurred || selection.isCollapsed || fragment.text === '') {\r\n      menu.removeAttribute('style')\r\n      return\r\n    }\r\n\r\n    const native = window.getSelection()\r\n    const range = native.getRangeAt(0)\r\n    const rect = range.getBoundingClientRect()\r\n    menu.style.opacity = 1\r\n    menu.style.top = `${rect.top + window.pageYOffset - menu.offsetHeight}px`\r\n\r\n    menu.style.left = `${rect.left +\r\n      window.pageXOffset -\r\n      menu.offsetWidth / 2 +\r\n      rect.width / 2}px`\r\n  }\r\n\r\n  render = (props, editor, next) => {\r\n    return (\r\n        <HoverMenu ref={this.menuRef} editor={this.props.editor} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default function HoveringMenuPlugin(options) {\r\n    return {\r\n        renderEditor (props, editor, next) {\r\n            const children = next()\r\n            return (\r\n              <React.Fragment>\r\n                {children}\r\n                <HoveringMenu editor={editor} />\r\n              </React.Fragment>\r\n            )\r\n          },\r\n\r\n        renderBlock (props, editor, next) {\r\n            switch (props.node.type) {\r\n            case 'heading':\r\n                return <u><b>{props.children}</b></u>\r\n            default:\r\n                return next()\r\n            }\r\n        },\r\n    }\r\n}","import { Block, Text } from 'slate';\r\n\r\nexport const schema = {\r\n    inlines: {\r\n        link: {\r\n            parent: [{type: ''}, {type: 'paragraph'}],\r\n\r\n            normalize: (editor, error) => {\r\n                switch (error.code) {\r\n                    case 'parent_type_invalid':\r\n                        editor.unwrapInlineByKey(error.node.key)\r\n                        return\r\n\r\n                    default:\r\n                        console.log(\"unhandled link inline err \" + error);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    blocks: {\r\n        section: {\r\n            parent: {object: \"document\"},\r\n            nodes: [\r\n                {\r\n                    match: {type: 'link'},\r\n                    min: 1,\r\n                    max: 1,\r\n                },\r\n                {\r\n                    match: {type: 'body'},\r\n                    min: 1,\r\n                    max: 1,\r\n                }\r\n            ],\r\n\r\n            normalize: (editor, error) => {\r\n                switch (error.code) {\r\n                    case 'child_max_invalid':\r\n                        // if we somehow end up with multiple headings/bodies inside the section, make it a paragraph move it after the section                     \r\n                        // this can happen if the enter key is pressed (splits the current node)\r\n                        moveBlockAfterSection(editor, error.child, error.node)\r\n                        editor.setNodeByKey(error.child.key, 'paragraph')\r\n                        return\r\n\r\n                    case 'child_type_invalid':\r\n                        // if we somehow end up with a paragraph inside the section, put the content in the heading instead                     \r\n                        if (error.child.object === \"text\" || error.child.type === \"paragraph\") {\r\n                            const linkNode = error.node.nodes.find(node => node.type === 'link')\r\n                            if (linkNode) {\r\n                                const textNode = linkNode.getLastText()\r\n                                const offset = textNode.text ? textNode.text.length : 0\r\n                                editor.insertTextByKey(textNode.key, offset, error.child.text)\r\n                            } else {\r\n                                addMissing(editor, error, \"link\", error.child.text)\r\n                            }\r\n                        }\r\n\r\n                        editor.removeNodeByKey(error.child.key)\r\n                        \r\n                        return\r\n                    \r\n                    case 'child_min_invalid':\r\n                        var hasChildTypes = [];\r\n                        error.node.nodes.forEach(node => {\r\n                            hasChildTypes.push(node.type)\r\n                        })\r\n                        \r\n                        if (!hasChildTypes.includes(\"link\")) {\r\n                            addMissing(editor, error, \"link\")\r\n                        }\r\n\r\n                        if (!hasChildTypes.includes(\"body\")) {\r\n                            addMissing(editor, error, \"body\")\r\n                        }\r\n\r\n                        return\r\n                    \r\n                    case 'parent_object_invalid':\r\n                        // a section has ended up inside another section - shift it out\r\n                        moveBlockAfterSection(editor, error.node, error.parent)\r\n                        return\r\n\r\n                    default:\r\n                        console.log(\"unhandled section schema err \" + error);\r\n                        \r\n                        return\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nfunction moveBlockAfterSection(editor, blockToMove, sectionToMoveAfter) {\r\n    const sectionIndex = editor.value.document.nodes.indexOf(sectionToMoveAfter)\r\n    if (sectionIndex === -1) {\r\n        return\r\n    }\r\n    editor.moveNodeByKey(blockToMove.key, editor.value.document.key, sectionIndex + 1)\r\n}\r\n\r\nfunction addMissing(editor, error, nodeType, text=\"\") {\r\n    const node_id = error.node.data.get(\"node_id\")\r\n    const graphNode = editor.getSharedState().getGraphNode(node_id)\r\n    if (!text) {\r\n        text = nodeType === \"link\" ? graphNode.getShortText() : graphNode.getLongText()\r\n    }\r\n    const index = nodeType === \"link\" ? 0 : 1\r\n\r\n    addBlock(editor, error.node, nodeType, index, node_id, text)\r\n}\r\n\r\nfunction addBlock(editor, parent, nodeType, index, id, text) {\r\n    var block = Block.create({\r\n        type: nodeType,\r\n        data: {node_id: id},\r\n        nodes: [Text.create({'text': text})]\r\n    })\r\n    editor.insertNodeByKey(parent.key, index, block);\r\n    \r\n}","import React from 'react';\r\nimport { Editor } from 'slate-react';\r\nimport { Value } from 'slate';\r\nimport NodePlugin from './NodePlugin.js';\r\nimport GraphPlugin from './GraphPlugin.js';\r\nimport LoggingPlugin from './LoggingPlugin.js';\r\nimport ReorderPlugin from './ReorderPlugin.js';\r\nimport HoveringMenu from './HoveringMenu.js';\r\nimport { schema } from './Schema.js'\r\n\r\nconst plugins = {\r\n    'graph': [\r\n        LoggingPlugin(),\r\n        GraphPlugin(),\r\n        NodePlugin(),\r\n        ReorderPlugin(),\r\n    ],\r\n    'plain': [\r\n        LoggingPlugin(),\r\n        HoveringMenu(),\r\n    ]\r\n};\r\n\r\nconst emptyValue = Value.fromJSON({\r\n    document: {\r\n        nodes: [\r\n            {\r\n                object: 'block',\r\n                type: 'paragraph',\r\n                nodes: [\r\n                    {\r\n                        object: 'text',\r\n                        text: '',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n});\r\n\r\nclass DocEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.props.sharedState.editor_ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const sharedState = this.props.sharedState\r\n        sharedState.getSavedDocValue((savedValue) => {\r\n            this.setState({\r\n                value: savedValue ? Value.fromJSON(savedValue) : emptyValue\r\n            }, sharedState.editorHasLoaded)\r\n        })\r\n    }\r\n\r\n    state = {\r\n        value: undefined, // don't display editor until the db's saved document loads\r\n        mapHasLoaded: false, // force a refresh of the component once the sharedState.map has loaded so section refs are hooked up to graph nodes\r\n    }\r\n    \r\n    queries = {\r\n        getSharedState: () => {\r\n            return this.props.sharedState;\r\n        },\r\n        getValue: () => {\r\n            return this.state.value;\r\n        },\r\n        mapHasLoaded: () => {\r\n            this.setState({ mapHasLoaded: true })\r\n        }\r\n    }\r\n\r\n    onChange = ({ value }) => {\r\n        this.setState({ value })\r\n    }\r\n\r\n    render() {\r\n        const plainClass = this.props.sharedState.condition === \"plain\" ? \" slate-editor-no-graph\" : \"\"\r\n\r\n        if (this.state.value !== undefined) {\r\n            return <Editor\r\n                className={\"slate-editor\" + plainClass}\r\n                key={this.state.mapHasLoaded ? \"map-loading\" : \"map-loaded\"}\r\n                ref={this.props.sharedState.editor_ref}\r\n                schema={schema}\r\n                plugins={plugins[this.props.sharedState.condition]}\r\n                queries={this.queries}\r\n                value={this.state.value}\r\n                onChange={this.onChange}\r\n                placeholder=\"Write your document here...\"\r\n                spellCheck={false}\r\n            />\r\n        } else {\r\n            return <p></p>\r\n        }\r\n    }\r\n}\r\n\r\nexport default DocEditor;","import SVG from 'svg.js';\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\n(function e(t, n, r) {\r\n    function s(o, u) {\r\n        if (!n[o]) {\r\n            if (!t[o]) {\r\n                // eslint-disable-next-line no-sequences\r\n                var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\r\n            }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\r\n                var n = t[o][1][e];return s(n ? n : e);\r\n            }, l, l.exports, e, t, n, r);\r\n        }return n[o].exports;\r\n    }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {\r\n        s(r[o]);\r\n    }return s;\r\n})({ 1: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Id = require(\"idy\"),\r\n            SetOrGet = require(\"set-or-get\"),\r\n            IterateObject = require(\"iterate-object\"),\r\n            Deffy = require(\"deffy\");\r\n\r\n        // Internal cache\r\n        var _connections = {},\r\n            _betweenTwoBubbles = {},\r\n            container = null,\r\n            markers = null;\r\n\r\n        function delete_connectable(con) {\r\n            con.line.remove();\r\n            con.marker.remove();\r\n\r\n            _connections[con.source.id()] = _connections[con.source.id()].filter(e => e !== con);\r\n            _connections[con.target.id()] = _connections[con.target.id()].filter(e => e !== con);\r\n\r\n            var toString = function() {\r\n                var ids = [con.source.id(), con.target.id()],\r\n                    id1 = ids.join(\"->\"),\r\n                    id2 = ids.reverse().join(\"->\");\r\n\r\n                con._ = con.id = id1;\r\n\r\n                if (_betweenTwoBubbles[id2]) {\r\n                    con._ = id2;\r\n                    return id2;\r\n                }\r\n\r\n                con.id = id1;\r\n                return id1;\r\n            }\r\n\r\n            _betweenTwoBubbles[toString()] = _betweenTwoBubbles[toString()].filter(e => e !== con);\r\n            con.source.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any other connectables looking for drag events\r\n        }\r\n\r\n        /**\r\n         * connectable\r\n         * Connects two elements.\r\n         *\r\n         * @name connectable\r\n         * @function\r\n         * @param {Object} options An object containing the following fields:\r\n         *\r\n         *  - `container` (SVGElement): The line elements container.\r\n         *  - `markers` (SVGElement): The marker elements container.\r\n         *  - `padEllipse` (Boolean): If `true`, the line coordinates will be placed with a padding.\r\n         *\r\n         * @param {SVGElement} elmTarget The target SVG element.\r\n         * @return {Object} The connectable object containing:\r\n         *\r\n         *  - `source` (SVGElement): The source element.\r\n         *  - `target` (SVGElement): The target element.\r\n         *  - `line` (SVGElement): The line element.\r\n         *  - `marker` (SVGElement): The marker element.\r\n         *  - [`computeLineCoordinates` (Function)](#computelinecoordinatescon)\r\n         *  - [`update` (Function)](#update)\r\n         *  - [`setLineColor` (Function)](#setlinecolorcolor-c)\r\n         */\r\n        function connectable(options, elmTarget) {\r\n\r\n            var con = {};\r\n\r\n            if (elmTarget === undefined) {\r\n                elmTarget = options;\r\n                options = {};\r\n            }\r\n\r\n            container = options.container || container;\r\n            var elmSource = this;\r\n            markers = options.markers || markers;\r\n\r\n            options.k = options.k || 100;\r\n            options.kk = options.kk || 10;\r\n\r\n            var marker = markers.marker(10, 10).addClass('connector-marker'),\r\n                markerId = \"triangle-\" + Id(),\r\n                line = container.path().attr(\"marker-end\", \"url(#\" + markerId + \")\").fill(\"none\").stroke({width: 3});\r\n            \r\n            if (options.specialCoords) {\r\n                line.addClass('connector-line');\r\n            }\r\n\r\n            marker.attr({\r\n                id: markerId,\r\n                viewBox: \"0 0 10 10\",\r\n                refX: \"0\",\r\n                refY: \"5\",\r\n                markerUnits: \"strokeWidth\",\r\n                markerWidth: \"4\",\r\n                markerHeight: \"5\"\r\n            });\r\n\r\n            marker.path().attr({\r\n                d: \"M 0 0 L 10 5 L 0 10 z\"\r\n            });\r\n\r\n            // Append the SVG elements\r\n            con.source = elmSource;\r\n            con.target = elmTarget;\r\n            con.line = line;\r\n            con.marker = marker;\r\n\r\n\r\n            if (options.specialCoords) {\r\n                // remove this when node is deleted\r\n                // con.source.on(\"deletenode\", () => con.source.node.instance.delete_connectable(con));\r\n                // con.target.on(\"deletenode\", () => con.target.node.instance.delete_connectable(con));\r\n            }\r\n\r\n            SetOrGet(_connections, con.source.id(), []).push(con);\r\n            SetOrGet(_connections, con.target.id(), []).push(con);\r\n\r\n            SetOrGet(_betweenTwoBubbles, {\r\n                toString: function toString() {\r\n                    var ids = [con.source.id(), con.target.id()],\r\n                        id1 = ids.join(\"->\"),\r\n                        id2 = ids.reverse().join(\"->\");\r\n\r\n                    con._ = con.id = id1;\r\n\r\n                    if (_betweenTwoBubbles[id2]) {\r\n                        con._ = id2;\r\n                        return id2;\r\n                    }\r\n\r\n                    con.id = id1;\r\n                    return id1;\r\n                }\r\n            }, []).push(con);\r\n            \r\n\r\n            /**\r\n             * computeLineCoordinates\r\n             * The function that computes the new coordinates.\r\n             * It can be overriden with a custom function.\r\n             *\r\n             * @name computeLineCoordinates\r\n             * @function\r\n             * @param {Connectable} con The connectable instance.\r\n             * @return {Object} An object containing the `x1`, `x2`, `y1` and `y2` coordinates.\r\n             */\r\n            con.computeLineCoordinates = function (cons) {\r\n\r\n                var output = [],\r\n                    l = cons.length;\r\n\r\n                IterateObject(cons, function (con, i) {\r\n\r\n                    var sT = con.source.transform(),\r\n                        tT = con.target.transform(),\r\n                        sB = con.source.bbox(),\r\n                        tB = con.target.bbox(),\r\n                        x1 = sT.x + sB.width / 2,\r\n                        y1 = sT.y + sB.height / 2,\r\n                        x2 = tT.x + tB.width / 2,\r\n                        y2 = tT.y + tB.height / 2,\r\n                        cx = (x1 + x2) / 2,\r\n                        cy = (y1 + y2) / 2,\r\n                        dx = Math.abs((x1 - x2) / 2),\r\n                        dy = Math.abs((y1 - y2) / 2),\r\n                        dd = null,\r\n                        out = {\r\n                        x1: x1,\r\n                        y1: y1,\r\n                        x2: x2,\r\n                        y2: y2,\r\n                        ex: x1,\r\n                        ey: y1\r\n                    };\r\n\r\n                    if (i !== (l - 1) / 2) {\r\n                        dd = Math.sqrt(dx * dx + dy * dy);\r\n                        out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                        out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                    }\r\n                    output.push(out);\r\n                });\r\n\r\n                return output;\r\n            };\r\n\r\n            if (options.specialCoords) {\r\n                con.computeLineCoordinates = function (cons) {\r\n\r\n                    var output = [],\r\n                        l = cons.length;\r\n\r\n                    IterateObject(cons, function (con, i) {\r\n\r\n                        var sT = con.source.transform(),\r\n                            tT = con.target.transform(),\r\n                            sB = con.source.bbox(),\r\n                            tB = con.target.bbox(),\r\n                            x1 = sT.x + sB.width / 2,\r\n                            y1 = sT.y + sB.height / 2 - 20;\r\n\r\n                        var xDiff = sT.x - tT.x;\r\n                        var yDiff = sT.y - tT.y;\r\n                        var x2, y2;\r\n\r\n                        var x2centre = tT.x + tB.width / 2\r\n                        var y2centre = tT.y + tB.height / 2\r\n\r\n                        var grad = (y2centre - y1) / ((x2centre - x1) === 0 ? 0.0000001 : (x2centre - x1))\r\n\r\n                        if (grad === 0) {\r\n                            grad = 0.0000001\r\n                        }\r\n\r\n                        var left = tT.x - 10\r\n                        var right = tT.x + tB.width - 30\r\n                        var top = tT.y - 10\r\n                        var bottom = tT.y + tB.height - 30\r\n                        \r\n                        var rightLeftCalc = () => {\r\n                            var x2 = xDiff < 0 ? left : right\r\n                            return { \r\n                                x: x2,\r\n                                y: ((x2 - x1) * grad) + y1\r\n                            }\r\n                        }\r\n\r\n                        var topBotCalc = () => {\r\n                            var y2 = yDiff < 0 ? top : bottom\r\n                            return {\r\n                                x: ((y2 - y1) * (1/grad)) + x1,\r\n                                y: y2\r\n                            }\r\n                        }\r\n\r\n                        var vals\r\n                        if (Math.abs(xDiff) >= Math.abs(yDiff)) {\r\n                            vals = rightLeftCalc()\r\n                            x2 = vals.x\r\n                            y2 = vals.y\r\n\r\n                            if (y2 > bottom || y2 < top) {\r\n                                vals = topBotCalc()\r\n                                x2 = vals.x\r\n                                y2 = vals.y\r\n                            }\r\n\r\n                        } else {\r\n                            vals = topBotCalc()\r\n                            x2 = vals.x\r\n                            y2 = vals.y\r\n\r\n                            if (x2 > right || x2 < left) {\r\n                                vals = rightLeftCalc()\r\n                                x2 = vals.x\r\n                                y2 = vals.y\r\n                            }\r\n                        }\r\n\r\n                        var cx = (x1 + x2) / 2,\r\n                            cy = (y1 + y2) / 2,\r\n                            dx = Math.abs((x1 - x2) / 2),\r\n                            dy = Math.abs((y1 - y2) / 2),\r\n                            dd = null,\r\n                            out = {\r\n                            x1: x1,\r\n                            y1: y1,\r\n                            x2: x2,\r\n                            y2: y2,\r\n                            ex: x1,\r\n                            ey: y1\r\n                        };\r\n\r\n                        if (i !== (l - 1) / 2) {\r\n                            dd = Math.sqrt(dx * dx + dy * dy);\r\n                            out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                            out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                        }\r\n                        output.push(out);\r\n                    });\r\n\r\n                    return output;\r\n                };\r\n            }\r\n\r\n            if (options.padEllipse) {\r\n                con.computeLineCoordinates = function (cons) {\r\n\r\n                    var output = [],\r\n                        l = cons.length;\r\n\r\n                    IterateObject(cons, function (con, i) {\r\n\r\n                        var elmS = con.source.node.querySelector(\"ellipse\") || con.source.node.querySelector(\"circle\"),\r\n                            elmT = con.target.node.querySelector(\"ellipse\") || con.target.node.querySelector(\"circle\"),\r\n                            xR1,\r\n                            xR2,\r\n                            yR1,\r\n                            yR2,\r\n                            sT = con.source.transform(),\r\n                            tT = con.target.transform()\r\n\r\n                        if (elmS.tagName === \"circle\") {\r\n                            xR1 = yR1 = parseFloat(elmS.getAttribute(\"r\"));\r\n                            xR2 = yR2 = parseFloat(elmT.getAttribute(\"r\"));\r\n                        } else {\r\n                            xR1 = parseFloat(elmS.getAttribute(\"rx\"));\r\n                            yR1 = parseFloat(elmS.getAttribute(\"ry\"));\r\n\r\n                            xR2 = parseFloat(elmT.getAttribute(\"rx\"));\r\n                            yR2 = parseFloat(elmT.getAttribute(\"ry\"));\r\n                        }\r\n\r\n                        // Get centers\r\n                        var sx = sT.x + xR1 / 2,\r\n                            sy = sT.y + yR1 / 2,\r\n                            tx = tT.x + xR2 / 2,\r\n                            ty = tT.y + yR2 / 2\r\n\r\n                        // Calculate distance from source center to target center\r\n                        ,\r\n                            dx = tx - sx,\r\n                            dy = ty - sy,\r\n                            d = Math.sqrt(dx * dx + dy * dy)\r\n\r\n                        // Construct unit vector between centers\r\n                        ,\r\n                            ux = dx / d,\r\n                            uy = dy / d\r\n\r\n                        // Point on source circle\r\n                        ,\r\n                            cx1 = sx + xR1 * ux,\r\n                            cy1 = sy + yR1 * uy\r\n\r\n                        // Point on target circle\r\n                        ,\r\n                            cx2 = sx + (d - xR2 - 5) * ux,\r\n                            cy2 = sy + (d - yR2 - 5) * uy;\r\n\r\n                        var x1 = cx1 + xR1 / 2,\r\n                            y1 = cy1 + yR1 / 2,\r\n                            x2 = cx2 + xR2 / 2,\r\n                            y2 = cy2 + yR2 / 2\r\n                        // TODO\r\n                        //  , step = (Math.PI / 2 / l) * (i % 2 !== 0 ? 1 : -1)\r\n                        //  , angle = 0\r\n                        ;\r\n\r\n                        //if (i !== (l - 1) / 2) {\r\n                        //    angle = step * (i + 1);\r\n                        //}\r\n\r\n\r\n                        //var xC1 = (sT.x + xR1)\r\n                        //  , yC1 = (sT.y + yR1)\r\n                        //  , xC2 = (tT.y + xR2)\r\n                        //  , yC2 = (tT.y + yR2)\r\n                        //  , ddx1 = x1 - xC1\r\n                        //  , ddy1 = y1 - yC1\r\n                        //  , ddx2 = x2 - xC2\r\n                        //  , ddy2 = y2 - yC2\r\n                        //  , cosAngle = Math.cos(angle)\r\n                        //  , sinAngle = Math.sin(angle)\r\n                        //  , cosAngleM = Math.cos(-angle)\r\n                        //  , sinAngleM = Math.sin(-angle)\r\n                        //  ;\r\n\r\n                        // TODO This should change the points to arrange them on the circle\r\n                        //\r\n                        // x1 = ddx1 * cosAngle - ddy1 * sinAngle + xC1;\r\n                        // y1 = ddx1 * sinAngle + ddy1 * cosAngle + yC1;\r\n\r\n                        // x2 = ddx2 * cosAngleM - ddy2 * sinAngle + xC2;\r\n                        // y2 = ddx2 * sinAngleM + ddy2 * cosAngle + yC2;\r\n\r\n                        // ===================\r\n                        // x1 = cx1 + ddx1 * Math.cos(angle) - ddy1 * Math.sin(angle)\r\n                        // y1 = cy1 + ddx1 * Math.sin(angle) - ddy1 * Math.cos(angle)\r\n\r\n                        //x2 = cx2 + ddx2 * Math.cos(angle) - ddy2 * Math.sin(angle) + xR2\r\n                        //y2 = cy2 + ddx2 * Math.sin(angle) - ddy2 * Math.cos(angle) + yR2\r\n\r\n                        var cx = (x1 + x2) / 2,\r\n                            cy = (y1 + y2) / 2,\r\n                            dd = null,\r\n                            out = {\r\n                            x1: x1,\r\n                            y1: y1,\r\n                            x2: x2,\r\n                            y2: y2,\r\n                            ex: x1,\r\n                            ey: y1\r\n                        };\r\n\r\n                        if (isNaN(out.x1)) {\r\n                            out.x1 = sT.x + xR1 * 2;\r\n                            out.y1 = sT.y + yR1 / 2;\r\n                            out.x2 = sT.x;\r\n                            out.y2 = out.y1;\r\n                            out.ex = (out.x1 + out.x2) / 2;\r\n                            out.ey = out.y1 - options.kk * (i + 1);\r\n                        } else {\r\n                            dx = Math.abs((x1 - x2) / 2);\r\n                            dy = Math.abs((y1 - y2) / 2);\r\n\r\n                            if (i !== (l - 1) / 2) {\r\n                                dd = Math.sqrt(dx * dx + dy * dy);\r\n                                out.ex = cx + dy / dd * options.k * (i - (l - 1) / 2);\r\n                                out.ey = cy - dx / dd * options.k * (i - (l - 1) / 2);\r\n                            }\r\n                        }\r\n\r\n                        output.push(out);\r\n                    });\r\n\r\n                    return output;\r\n                };\r\n            }\r\n\r\n            elmSource.cons = elmSource.cons || [];\r\n            elmSource.cons.push(con);\r\n\r\n            /**\r\n             * update\r\n             * Updates the line coordinates.\r\n             *\r\n             * @name update\r\n             * @function\r\n             * @return {undefined}\r\n             */\r\n            con.update = function () {\r\n                var cons = Deffy(_betweenTwoBubbles[con._], []),\r\n                    results = con.computeLineCoordinates(cons);\r\n\r\n                IterateObject(results, function (r, i) {\r\n                    cons[i].line.plot(\"M\" + r.x1 + \" \" + r.y1 + \" Q\" + r.ex + \" \" + r.ey + \" \" + r.x2 + \" \" + r.y2);\r\n                });\r\n            };\r\n\r\n            con.update();\r\n            elmSource.on(\"dragmove\", con.update);\r\n            elmTarget.on(\"dragmove\", con.update);\r\n\r\n            /**\r\n             * setLineColor\r\n             * Sets the line color.\r\n             *\r\n             * @name setLineColor\r\n             * @function\r\n             * @param {String} color The new color.\r\n             * @param {Connectable} c The connectable instance.\r\n             * @return {undefined}\r\n             */\r\n            con.setLineColor = function (color, c) {\r\n                c = c || this;\r\n                c.line.stroke(color);\r\n                c.marker.fill(color);\r\n            };\r\n\r\n            return con;\r\n        }\r\n\r\n        if (typeof SVG === \"function\") {\r\n            SVG.extend(SVG.Element, {\r\n                connectable: connectable,\r\n                delete_connectable: delete_connectable\r\n            });\r\n        } else if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") {\r\n            throw new Error(\"SVG.js is not loaded but it is required.\");\r\n        }\r\n\r\n        module.exports = connectable;\r\n    }, { \"deffy\": 2, \"idy\": 4, \"iterate-object\": 5, \"set-or-get\": 6 }], 2: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Typpy = require(\"typpy\");\r\n\r\n        /**\r\n         * Deffy\r\n         * Computes a final value by providing the input and default values.\r\n         *\r\n         * @name Deffy\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Anything|Function} def The default value or a function getting the\r\n         * input value as first argument.\r\n         * @param {Object|Boolean} options The `empty` value or an object containing\r\n         * the following fields:\r\n         *\r\n         *  - `empty` (Boolean): Handles the input value as empty field (`input || default`). Default is `false`.\r\n         *\r\n         * @return {Anything} The computed value.\r\n         */\r\n        function Deffy(input, def, options) {\r\n\r\n            // Default is a function\r\n            if (typeof def === \"function\") {\r\n                return def(input);\r\n            }\r\n\r\n            options = Typpy(options) === \"boolean\" ? {\r\n                empty: options\r\n            } : {\r\n                empty: false\r\n            };\r\n\r\n            // Handle empty\r\n            if (options.empty) {\r\n                return input || def;\r\n            }\r\n\r\n            // Return input\r\n            if (Typpy(input) === Typpy(def)) {\r\n                return input;\r\n            }\r\n\r\n            // Return the default\r\n            return def;\r\n        }\r\n\r\n        module.exports = Deffy;\r\n    }, { \"typpy\": 3 }], 3: [function (require, module, exports) {\r\n        /**\r\n         * Typpy\r\n         * Gets the type of the input value or compares it\r\n         * with a provided type.\r\n         *\r\n         * Usage:\r\n         *\r\n         * ```js\r\n         * Typpy({}) // => \"object\"\r\n         * Typpy(42, Number); // => true\r\n         * Typpy.get([], \"array\"); => true\r\n         * ```\r\n         *\r\n         * @name Typpy\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Constructor|String} target The target type.\r\n         * It could be a string (e.g. `\"array\"`) or a\r\n         * constructor (e.g. `Array`).\r\n         * @return {String|Boolean} It returns `true` if the\r\n         * input has the provided type `target` (if was provided),\r\n         * `false` if the input type does *not* have the provided type\r\n         * `target` or the stringified type of the input (always lowercase).\r\n         */\r\n        function Typpy(input, target) {\r\n            if (arguments.length === 2) {\r\n                return Typpy.is(input, target);\r\n            }\r\n            return Typpy.get(input, true);\r\n        }\r\n\r\n        /**\r\n         * Typpy.is\r\n         * Checks if the input value has a specified type.\r\n         *\r\n         * @name Typpy.is\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Constructor|String} target The target type.\r\n         * It could be a string (e.g. `\"array\"`) or a\r\n         * constructor (e.g. `Array`).\r\n         * @return {Boolean} `true`, if the input has the same\r\n         * type with the target or `false` otherwise.\r\n         */\r\n        Typpy.is = function (input, target) {\r\n            return Typpy.get(input, typeof target === \"string\") === target;\r\n        };\r\n\r\n        /**\r\n         * Typpy.get\r\n         * Gets the type of the input value. This is used internally.\r\n         *\r\n         * @name Typpy.get\r\n         * @function\r\n         * @param {Anything} input The input value.\r\n         * @param {Boolean} str A flag to indicate if the return value\r\n         * should be a string or not.\r\n         * @return {Constructor|String} The input value constructor\r\n         * (if any) or the stringified type (always lowercase).\r\n         */\r\n        Typpy.get = function (input, str) {\r\n\r\n            if (typeof input === \"string\") {\r\n                return str ? \"string\" : String;\r\n            }\r\n\r\n            if (null === input) {\r\n                return str ? \"null\" : null;\r\n            }\r\n\r\n            if (undefined === input) {\r\n                return str ? \"undefined\" : undefined;\r\n            }\r\n\r\n            // eslint-disable-next-line no-self-compare\r\n            if (input !== input) {\r\n                return str ? \"nan\" : NaN;\r\n            }\r\n\r\n            return str ? input.constructor.name.toLowerCase() : input.constructor;\r\n        };\r\n\r\n        module.exports = Typpy;\r\n    }, {}], 4: [function (require, module, exports) {\r\n        /**\r\n         * Idy\r\n         * Generates a random id and potentially unique.\r\n         *\r\n         * @name Idy\r\n         * @function\r\n         * @param {Number} length The id length (default: 10).\r\n         * @return {String} The generated id.\r\n         */\r\n        function Idy(length) {\r\n            length = length || 10;\r\n            return Math.random().toString(35).substr(2, length);\r\n        }\r\n\r\n        module.exports = Idy;\r\n    }, {}], 5: [function (require, module, exports) {\r\n        /**\r\n         * IterateObject\r\n         * Iterates an object. Note the object field order may differ.\r\n         *\r\n         * @name IterateObject\r\n         * @function\r\n         * @param {Object} obj The input object.\r\n         * @param {Function} fn A function that will be called with the current value, field name and provided object.\r\n         * @return {Function} The `IterateObject` function.\r\n         */\r\n        function IterateObject(obj, fn) {\r\n            var i = 0,\r\n                keys = [];\r\n\r\n            if (Array.isArray(obj)) {\r\n                for (; i < obj.length; ++i) {\r\n                    if (fn(obj[i], i, obj) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                keys = Object.keys(obj);\r\n                for (; i < keys.length; ++i) {\r\n                    if (fn(obj[keys[i]], keys[i], obj) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        module.exports = IterateObject;\r\n    }, {}], 6: [function (require, module, exports) {\r\n        // Dependencies\r\n        var Deffy = require(\"deffy\");\r\n\r\n        /**\r\n         * SetOrGet\r\n         * Sets or gets an object field value.\r\n         *\r\n         * @name SetOrGet\r\n         * @function\r\n         * @param {Object|Array} input The cache/input object.\r\n         * @param {String|Number} field The field you want to update/create.\r\n         * @param {Object|Array} def The default value.\r\n         * @return {Object|Array} The field value.\r\n         */\r\n        function SetOrGet(input, field, def) {\r\n            return input[field] = Deffy(input[field], def);\r\n        }\r\n\r\n        module.exports = SetOrGet;\r\n    }, { \"deffy\": 7 }], 7: [function (require, module, exports) {\r\n        arguments[4][2][0].apply(exports, arguments);\r\n    }, { \"dup\": 2, \"typpy\": 8 }], 8: [function (require, module, exports) {\r\n        arguments[4][3][0].apply(exports, arguments);\r\n    }, { \"dup\": 3 }] }, {}, [1]);","import React from 'react';\r\nimport LinkNode from './nodes/LinkNode.js'\r\nimport BodyNode from './nodes/BodyNode.js'\r\nimport SectionNode from './nodes/SectionNode.js'\r\nimport { Block } from 'slate'\r\nimport { getEventTransfer } from 'slate-react';\r\nimport { deleteNode } from './NodeSwitch.js'\r\n\r\nexport default function LinkPlugin(options) {\r\n    return {\r\n        commands: {\r\n            wrapLinkAtSelection(editor, node_id) {\r\n                return editor.wrapInline({\r\n                    type: \"link\",\r\n                    data: { \"node_id\": node_id, \"nodeStyle\": \"Inline\" }\r\n                });\r\n            }\r\n        },\r\n\r\n        renderInline(props, editor, next) {\r\n            if (props.node.type === 'link') {\r\n                var { ref, id } = getRefAndId(props, editor, \"short\");\r\n\r\n                return <LinkNode ref={ref} {...props} linkStyle=\"inline\" sharedState={editor.getSharedState()} nodeId={id}/>\r\n            }\r\n\r\n            return next();\r\n        },\r\n\r\n        renderBlock(props, editor, next) {\r\n            var refAndId;\r\n\r\n            if (props.node.type === 'body') {\r\n                refAndId = getRefAndId(props, editor, \"long\");\r\n\r\n                // set up the placeholder text to only appear when the body is empty and no text is selected\r\n                var isEmpty = !props.node.text\r\n\r\n                var selectNode = () => {\r\n                    setTimeout(() => {editor.focus(); editor.moveToStartOfNode(props.node);}, 0)\r\n                }\r\n\r\n                return <BodyNode\r\n                            ref={refAndId.ref}\r\n                            {...props}\r\n                            sharedState={editor.getSharedState()}\r\n                            nodeId={refAndId.id}\r\n                            isEmpty={isEmpty}\r\n                            selectNode={selectNode}\r\n                        />\r\n\r\n            } else if (props.node.type === 'link') {\r\n                refAndId = getRefAndId(props, editor, \"short\");\r\n\r\n                return <LinkNode\r\n                            ref={refAndId.ref}\r\n                            {...props}\r\n                            linkStyle=\"heading\"\r\n                            sharedState={editor.getSharedState()}\r\n                            nodeId={refAndId.id}\r\n                        />\r\n\r\n            } else if (props.node.type === 'section') {\r\n                refAndId = getRefAndId(props, editor, \"section\");\r\n\r\n                return <SectionNode\r\n                    ref={refAndId.ref}\r\n                    {...props}\r\n                    sharedState={editor.getSharedState()}\r\n                    nodeId={refAndId.id}\r\n                />\r\n            }\r\n\r\n            return next();\r\n        },\r\n\r\n        onDrop(event, editor, next) {\r\n            // suppress drop events\r\n            // do not call next()\r\n        },\r\n\r\n        onPaste(event, editor, next) {\r\n            const getLinkInlines = (the_doc) => the_doc.filterDescendants(node => node.type === 'link' && node.object === 'inline')\r\n\r\n            var transfer = getEventTransfer(event);\r\n\r\n            if (transfer.type === \"fragment\") {\r\n\r\n                // if pasting into a link or body, just paste plain text, not a fragment\r\n                if (editor.value.blocks.some(block => block.type === \"link\" || block.type === \"body\")) {\r\n                    const textNoNewlines = transfer.fragment.text.replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                    editor.insertText(textNoNewlines)\r\n\r\n                    // NB: no next() call, so this plugin must be the last one in the stack that handles onPaste()\r\n                    return\r\n                }\r\n\r\n                const fragmentInlines = getLinkInlines(transfer.fragment)\r\n\r\n                if (fragmentInlines) {\r\n                    const docInlines = getLinkInlines(editor.value.document)\r\n                    const usedIds = []\r\n                    docInlines.forEach(inline => {usedIds.push({key: inline.key, id: inline.data.get(\"node_id\")})})\r\n                    \r\n                    // let the paste happen so we can operate on the document instead of inline\r\n                    next()\r\n\r\n                    // if an inline in the pasted content has the same id as one in the document, unwrap the pasted inline\r\n                    fragmentInlines.forEach(inline => {\r\n                        usedIds.forEach(usedId => {\r\n                            const id = inline.data.get(\"node_id\")\r\n                            if (usedId.id === id) {\r\n                                const inlinesWithId = editor.value.document.filterDescendants(node => node.type === 'link' && node.object === 'inline' && node.data.get('node_id') === id)\r\n                                inlinesWithId.forEach(inlineWithId => {\r\n                                    if (inlineWithId.key !== usedId.key) {\r\n                                        editor.unwrapInlineByKey(inlineWithId.key)\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            } else {\r\n                next()\r\n            }\r\n        },\r\n\r\n        onChange(editor, next) {\r\n            // update all node texts (both link and body)\r\n            const sharedState = editor.getSharedState();\r\n            [\r\n                {nodeType: 'link', updateFunc: sharedState.updateGraphShortText.bind(sharedState)},\r\n                {nodeType: 'body', updateFunc: sharedState.updateGraphLongText.bind(sharedState)}\r\n            ].forEach( update =>\r\n                editor.value.blocks.forEach(block => {\r\n                    const updateText = (linkNode) => {\r\n                        // if we've just emptied an inline text node, we should delete the node and its link to the graph\r\n                        // also if we ever have a link node disconnected from the graph, just remove it to restore legal state\r\n                        const id = linkNode.data.get('node_id')\r\n                        sharedState.checkRecycleBinForGraphNode(id) // in case there was an undo and redo, we should restore the graph link\r\n                        if (linkNode.object === 'inline' && (linkNode.text === \"\" || !sharedState.getGraphNode(id))) {\r\n                            deleteNode(linkNode, editor)\r\n                        } else {\r\n                            update.updateFunc(linkNode.data.get(\"node_id\"), linkNode.text)\r\n                        }\r\n                    }\r\n\r\n                    var linkNodes = block.filterDescendants(node => node.type === update.nodeType)\r\n                    linkNodes.forEach(updateText)\r\n\r\n                    if (block.type === update.nodeType) {\r\n                        updateText(block)\r\n                    }\r\n                })\r\n            )\r\n\r\n            next()\r\n        },\r\n\r\n        onKeyDown(e, editor, next) {\r\n            const { value } = editor\r\n            const { document, selection, startBlock} = value\r\n            const { start, end } = selection\r\n\r\n            // if a whole section (block or inline) is deleted, tell the graph node\r\n            if ((e.key === 'Backspace' || e.key === 'Delete') && selection.isExpanded) {\r\n                document.getNodesAtRange(selection).forEach(node => {\r\n                    if (node.type === 'section' || node.type === 'link') {\r\n                        // it's not certain whether the section will be deleted, as it may only be partially selected\r\n                        // so check in 0 seconds, once the deletion happens, whether that's the case\r\n                        setTimeout(() => {\r\n                            editor.getSharedState().updateIsOnGraphStatus(node.data.get('node_id'))\r\n                        }, 0)\r\n                    }\r\n                })\r\n            }\r\n\r\n            // prevent delete key from merging body and link blocks with next\r\n            if (e.key === \"Delete\") {\r\n                if (startBlock && value.selection.isCollapsed && value.selection.end.isAtEndOfNode(startBlock)) {\r\n                    const nextBlock = document.getNextBlock(start.key)\r\n                    if (nextBlock && (nextBlock.type === \"body\" || nextBlock.type === \"link\" || nextBlock.type === \"section\")) {\r\n                        editor.moveToStartOfNode(nextBlock);\r\n                        if (startBlock.text === \"\") {\r\n                            editor.removeNodeByKey(startBlock.key)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \r\n            }\r\n\r\n            // prevent backspace from merging body and link blocks with previous\r\n            if (e.key === 'Backspace') {\r\n                const prevBlock = document.getPreviousBlock(start.key)\r\n                if (startBlock && selection.isCollapsed && start.offset === 0 && prevBlock && (startBlock.type === \"body\" || startBlock.type === \"link\")) {\r\n                    if (prevBlock) {\r\n                        editor.moveToEndOfNode(prevBlock);\r\n                        if (startBlock.text === \"\") {\r\n                            editor.removeNodeByKey(startBlock.key)\r\n                        } else if (prevBlock.text === \"\") {\r\n                            editor.removeNodeByKey(prevBlock.key)\r\n                         }\r\n                    }\r\n                    return editor\r\n                }\r\n            }\r\n\r\n            if (e.key === 'Enter') {\r\n                if (value.inlines.some(inline => inline.type === 'link')) {\r\n                    return // do nothing to avoid splitting the link\r\n                }\r\n\r\n                // when enter is pressed inside a link *block* (not inline), just go to body\r\n                if (startBlock && startBlock.type === \"link\" && start.key === end.key) {\r\n                    // unless the offset is 0, in which case insert a block before and go to that\r\n                    if (start.offset === 0) {\r\n                        const blockToInsert = Block.create({object: 'block', type: ''})\r\n                        const section = document.getParent(startBlock.key);\r\n                        const sectionParent = document.getParent(section.key);                    \r\n                        const sectionIndex = sectionParent.nodes.indexOf(section);\r\n\r\n                        editor.insertNodeByKey(sectionParent.key, sectionIndex, blockToInsert);\r\n                        return editor.moveBackward(1)\r\n                    } else {\r\n                        const nextBlock = document.getNextBlock(start.key)\r\n                        if (nextBlock) {\r\n                            return editor.moveToStartOfNode(nextBlock);\r\n                        } else {\r\n                            return editor.moveToEndOfNode(startBlock);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // prevent the cursor disappearing when navigating into the body placeholder text\r\n            if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\r\n                const relevantBlock = e.key === 'ArrowDown' ? document.getNextBlock(start.key) : document.getPreviousBlock(start.key)\r\n                const ESTIMATED_CHARS_PER_LINE = 130 // calibrated on a 1920x1080 screen... :/\r\n                // we only need to handle the case where the cursor offset is < the length of the placeholder\r\n                if (relevantBlock && relevantBlock.type === 'body' && start.offset < 'Type some text... '.length) {\r\n                    // if down arrow was pressed, only jump to the body if there is only one line of text in the block\r\n                    // its hard to work out how many lines of text there so use an estimate\r\n                    if (e.key === 'ArrowUp' || startBlock.text.length < ESTIMATED_CHARS_PER_LINE) {\r\n                        editor.moveToEndOfNode(relevantBlock)\r\n                        e.preventDefault()\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n\r\n            // prevent tab from taking focus from the editor\r\n            if (e.key === 'Tab') {\r\n                e.preventDefault()\r\n            }\r\n\r\n            return next()\r\n        }\r\n    }\r\n\r\n    function getRefAndId(props, editor, long_or_short) {\r\n        var id = props.node.data.get(\"node_id\");\r\n        editor.getSharedState().setLinkMapping(id, props.node, long_or_short);\r\n        var ref = React.createRef();\r\n        editor.getSharedState().registerLinkNode(id, ref, long_or_short);\r\n        return { ref, id };\r\n    }\r\n}","import React from 'react';\r\nimport PlainBlockNode from './nodes/PlainBlockNode.js'\r\n\r\nexport default function ReorderPlugin(options) {\r\n    return {\r\n        renderBlock(props, editor, next) {            \r\n            if (!props.node.type || props.node.type === '' || props.node.type === 'paragraph') {\r\n                return <PlainBlockNode {...props}/>\r\n            }\r\n            \r\n            return next();\r\n        },\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './DocPane.css';\r\nimport DocEditor from './DocEditor.js'\r\n\r\nclass DocPane extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pane doc\">\r\n                <DocEditor sharedState={this.props.sharedState} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocPane;","import OptionPopup from './OptionPopup.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst COMPLETED_ARROW_COLOUR = \"#5D4037\";\r\nconst POTENTIAL_ARROW_COLOUR = \"#d4b8b0\";\r\nconst DRAWING_ARROW_COLOUR = \"#719deb\";\r\n\r\nconst ADD_ARROW_TYPE_MENU_ITEM = 'Add arrow type'\r\n\r\nconst COLOURS = [\r\n    'red',\r\n    'goldenrod',\r\n    'green',\r\n    'aqua',\r\n    'blue',\r\n    'fuchsia',\r\n    'purple',\r\n    'saddlebrown'\r\n]\r\n\r\nvar DEFAULT_ARROW_OPTIONS = [\r\n    {'colour': 'green', 'name': 'Supports', 'symbol': \"→\"},\r\n    {'colour': 'red', 'name': 'Opposes', 'symbol': \"→\"},\r\n    {'colour': 'blue', 'name': 'Expands', 'symbol': \"→\"},\r\n];\r\n\r\nexport default class MouseFollower {\r\n    constructor(shared_state, svg, connectables_container, markers, links) {\r\n        this.shared_state = shared_state;\r\n        this.drawing_arrow_from = false;\r\n        this.connector = undefined;\r\n        this.connectables_container = connectables_container;\r\n        this.markers = markers;\r\n        this.links = links;\r\n\r\n        this.arrow_id_counter = 0\r\n\r\n        this.completed_arrows = []\r\n\r\n        this.mouse_rect = svg.group();\r\n        window.addEventListener('mousemove', e => {\r\n            var point = svg.point(e.clientX, e.clientY);\r\n            this.mouse_rect.move(point.x, point.y);\r\n            \r\n            if (typeof(this.connector) !== 'undefined') {\r\n                this.connector.update();\r\n            }\r\n        });\r\n\r\n        // cancel arrows if they don't end on a node\r\n        window.addEventListener('mouseup', (e) => {\r\n            if (this.drawing_arrow_from) {\r\n                e.preventDefault();\r\n                this.stop_drawing_arrow();\r\n            }\r\n        });\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            arrows: this.completed_arrows,\r\n            arrow_id_counter: this.arrow_id_counter,\r\n            arrowOptions: this.arrowOptions,\r\n        }\r\n    }\r\n\r\n    static fromJSON(json, shared_state, svg, connectables_container, markers, links) {\r\n        var mf = new MouseFollower(shared_state, svg, connectables_container, markers, links)\r\n        mf.arrow_id_counter = json && json.arrow_id_counter ? json.arrow_id_counter : 0\r\n        mf.completed_arrows = json && json.arrows ? json.arrows : []\r\n        mf.arrowOptions = json && json.arrowOptions ? json.arrowOptions : DEFAULT_ARROW_OPTIONS\r\n\r\n        return mf\r\n    }\r\n\r\n    // draw all the arrows in this.completed_arrows\r\n    // needs to happen separately from loading because when the mouse_follower is first created, the nodes have not yet been loaded\r\n    draw_loaded_arrows(get_node) {\r\n        this.completed_arrows.forEach(arrow => {\r\n            const originNode = get_node(arrow.origin)\r\n            const destinationNode = get_node(arrow.destination)\r\n\r\n            if (!originNode) {\r\n                toast.error(\"Error: could not draw arrow from origin \" + arrow.origin)\r\n                return\r\n            }\r\n\r\n            if (!destinationNode) {\r\n                toast.error(\"Error: could not draw arrow to destination \" + arrow.destination)\r\n                return\r\n            }\r\n\r\n            const connector = this.draw_arrow(\r\n                originNode,\r\n                destinationNode,\r\n                arrow.colour\r\n            )\r\n            this.add_context_menu_to_arrow(connector, arrow)\r\n            \r\n            // update the arrow start and end points\r\n            originNode.group.node.dispatchEvent(new CustomEvent(\"dragmove\"))\r\n        })\r\n    }\r\n\r\n    update_source(new_source) {\r\n        if (typeof(this.connector) === 'undefined') {\r\n            this.connector = new_source.connectable({\r\n                container: this.connectables_container,\r\n                markers: this.markers\r\n            }, this.mouse_rect);\r\n        } else {\r\n            this.connector.marker.show();\r\n            this.connector.line.show();\r\n\r\n            this.connector.target = this.mouse_rect;\r\n            this.connector.source = new_source;\r\n            this.connector.update();\r\n        }\r\n        if (this.connector) {\r\n            this.connector.setLineColor(POTENTIAL_ARROW_COLOUR);\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        if (typeof(this.connector) !== 'undefined') {\r\n            this.connector.target = this.connector.source;\r\n            this.connector.marker.hide();\r\n            this.connector.line.hide();\r\n        }\r\n    }\r\n\r\n    start_arrow(source_node) {\r\n        this.drawing_arrow_from = source_node;\r\n        if (this.connector) {\r\n            this.connector.setLineColor(DRAWING_ARROW_COLOUR);\r\n        }\r\n    }\r\n\r\n    draw_arrow(origin, destination, colour) {\r\n        var connector = origin.group.connectable({\r\n            container: this.links,\r\n            markers: this.markers,\r\n            specialCoords: true\r\n        }, destination.group);\r\n        connector.setLineColor(colour);\r\n\r\n        connector.source.on(\"deletenode\", () => {\r\n            connector.source.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector)\r\n        });\r\n        connector.target.on(\"deletenode\", () => {\r\n            connector.target.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector)\r\n        });\r\n\r\n        return connector\r\n    }\r\n\r\n    add_context_menu_to_arrow(connector, arrowObject) {\r\n        const show_context_menu = e => {\r\n            var graph_pos = document.getElementById(\"graph\").getBoundingClientRect();\r\n            this.edit_connector_type(connector, e.clientX - graph_pos.left, e.clientY - graph_pos.top, true, (new_colour) => {\r\n                arrowObject.colour = new_colour\r\n            }, arrowObject);\r\n            e.preventDefault();\r\n        };\r\n        connector.line.on(\"click\", show_context_menu);\r\n        connector.line.on(\"contextmenu\", show_context_menu);\r\n\r\n        connector.source.on(\"deletenode\", () => {\r\n            connector.source.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector, arrowObject)\r\n        });\r\n        connector.target.on(\"deletenode\", () => {\r\n            connector.target.node.instance.delete_connectable(connector)\r\n            this.remove_arrow(connector, arrowObject)\r\n        });\r\n\r\n        // detect if the user changes the colour of this arrow\r\n        window.addEventListener('colourchange', (e) => {\r\n            if (e.detail.oldColour === arrowObject.colour) {\r\n                connector.setLineColor(e.detail.newColour)\r\n                arrowObject.colour = e.detail.newColour\r\n            }\r\n        })\r\n\r\n        // detect if all arrows of this colour were deleted\r\n        window.addEventListener('arrowdelete', (e) => {\r\n            if (e.detail.colour === arrowObject.colour) {\r\n                this.remove_arrow(connector, arrowObject)\r\n            }\r\n        })\r\n    }\r\n\r\n    complete_arrow(end_node) {\r\n        // no arrows to self\r\n        if (end_node === this.drawing_arrow_from) {\r\n            this.stop_drawing_arrow();\r\n            return;\r\n        }\r\n\r\n        var connector = this.draw_arrow(this.drawing_arrow_from, end_node, COMPLETED_ARROW_COLOUR)\r\n\r\n        var c1 = this.drawing_arrow_from.group.getScreenCoords();\r\n        var c2 = end_node.group.getScreenCoords();\r\n        var midpoint = [(c1.x + c2.x) / 2, (c1.y + c2.y) / 2]\r\n\r\n        // only add the arrow to the list of completed arrows once a colour is selected\r\n        // to prevent weird states being saved and loaded\r\n        const drawing_arrow_from_id = this.drawing_arrow_from.id\r\n        const colourWasSelected = (colour) => {\r\n            const id = this.getNewId()\r\n            const arrowObject = {\r\n                id: id,\r\n                origin: drawing_arrow_from_id,\r\n                destination: end_node.id,\r\n                colour: colour,\r\n            }\r\n            this.completed_arrows.push(arrowObject)\r\n\r\n            this.add_context_menu_to_arrow(connector, arrowObject)\r\n        }\r\n\r\n        this.edit_connector_type(connector, midpoint[0], midpoint[1], false, colourWasSelected);\r\n\r\n        this.shared_state.logger.logEvent({'type': 'arrow_create', 'id': connector.id, 'source': this.drawing_arrow_from.id, 'target': end_node.id});\r\n        this.stop_drawing_arrow();\r\n    }\r\n\r\n    getArrowByID(id) {\r\n        return this.completed_arrows.find(arrow => arrow.id === id)\r\n    }\r\n\r\n    getNewId() {\r\n        this.arrow_id_counter++\r\n        return this.arrow_id_counter\r\n    }\r\n\r\n    changeArrowColour(entry, direction) {\r\n        const oldColour = entry.colour\r\n        var newColour = this.getNextAvailableColour(entry, direction)\r\n        if (!newColour) {\r\n            return\r\n        }\r\n        entry.colour = newColour\r\n\r\n        window.dispatchEvent(new CustomEvent('colourchange', {\r\n            detail: {\r\n                oldColour: oldColour,\r\n                newColour: newColour,\r\n            }\r\n        }))\r\n\r\n        this.shared_state.logger.logEvent({'type': 'update_arrow_colour', 'newColour': newColour});\r\n\r\n        return newColour\r\n    }\r\n\r\n    getNextAvailableColour(entry, direction) {\r\n        // find all the colours which are not used by arrowOptions other than this one\r\n        const availableColours = COLOURS.filter(colour => \r\n            !this.arrowOptions.find(option => option.colour === colour && option !== entry)\r\n        )\r\n\r\n        if (!availableColours) {\r\n            return undefined\r\n        } else {\r\n            const thisColourIndex = entry ? availableColours.indexOf(entry.colour) : 0\r\n            if (thisColourIndex !== -1) {\r\n                var nextIndex = (thisColourIndex + 1 * direction) % availableColours.length\r\n                if (nextIndex < 0) {\r\n                    nextIndex = availableColours.length - 1\r\n                }\r\n                return availableColours[nextIndex]\r\n            }\r\n        }\r\n    }\r\n\r\n    getArrowOptions() {\r\n        const clickEditButton = (e, params) => {\r\n            const MAX_ARROW_TYPE_NAME_LENGTH = 50 // chars\r\n\r\n            var { colourCell, nameCell, buttonCell, underlyingEntry, transientEntry } = params\r\n\r\n            transientEntry.isClickable = false\r\n\r\n            var editButton = buttonCell.children[0]\r\n\r\n            const updateName = () => {\r\n                var newValue = input.value\r\n                if (newValue.length >= MAX_ARROW_TYPE_NAME_LENGTH) {\r\n                    newValue = newValue.substring(0, MAX_ARROW_TYPE_NAME_LENGTH)\r\n                }\r\n                if (newValue) {\r\n                    underlyingEntry.name = newValue\r\n                }\r\n\r\n                return newValue\r\n            }\r\n\r\n            const finishEditing = () => {\r\n                var newValue = updateName()\r\n                if (newValue) {\r\n                    nameCell.textContent = newValue\r\n                }\r\n\r\n                transientEntry.isClickable = true\r\n\r\n                colourCell.textContent = colourButton.textContent\r\n                colourCell.style.color = colourButton.style.color\r\n                \r\n                editButton.classList.remove('pure-button-active')\r\n                editButton.onclick = (e) => clickEditButton(e, params)\r\n            }\r\n\r\n            editButton.classList.add('pure-button-active')\r\n            editButton.onclick = finishEditing\r\n\r\n            var input = document.createElement(\"input\")\r\n            \r\n            input.style.width = (nameCell.getBoundingClientRect().width - 5).toString() + \"px\"\r\n            input.value = nameCell.textContent\r\n            input.addEventListener('keyup', (e) => {\r\n                if (e.key === 'Enter' && input.value) {\r\n                    finishEditing()\r\n                }\r\n            })\r\n            input.addEventListener('change', updateName)\r\n\r\n            nameCell.textContent = \"\"\r\n            nameCell.appendChild(input)\r\n\r\n            var colourButton = document.createElement(\"button\")\r\n            colourButton.className = 'pure-button'\r\n            colourButton.textContent = colourCell.textContent\r\n            colourCell.textContent = \"\"\r\n            colourCell.appendChild(colourButton)\r\n            colourButton.style.color = colourCell.style.color\r\n            colourButton.style.padding = 0\r\n            colourButton.addEventListener(\"click\", () => {\r\n                colourButton.style.color = this.changeArrowColour(underlyingEntry, 1)\r\n                transientEntry.colour = underlyingEntry.colour\r\n            })\r\n            colourButton.addEventListener(\"contextmenu\", (e) => {\r\n                colourButton.style.color = this.changeArrowColour(underlyingEntry, -1)  // on right click, scroll backwards through the colours\r\n                transientEntry.colour = underlyingEntry.colour\r\n                e.preventDefault()\r\n            })\r\n\r\n            input.focus()\r\n        }\r\n\r\n        const clickDeleteArrowTypeButton = (e, params) => {\r\n            var { row, underlyingEntries, underlyingEntry, transientEntry, selected, hidePopup } = params\r\n            transientEntry.isClickable = false\r\n            \r\n            if (window.confirm('Are you sure you want to delete all \"' + underlyingEntry.name + '\" arrows? This cannot be undone.')) {\r\n                // remove from underlyingEntries\r\n                var index = underlyingEntries.indexOf(underlyingEntry)\r\n                if (index !== -1) {\r\n                    underlyingEntries.splice(index, 1)\r\n                }\r\n\r\n                // remove row after 0 delay to prevent this click event being registered as a click outside the option popup\r\n                setTimeout(() => row.parentNode.removeChild(row), 0)\r\n\r\n                // tell all arrows of this colour to delete themselves\r\n                window.dispatchEvent(new CustomEvent('arrowdelete', {\r\n                    detail: {\r\n                        colour: underlyingEntry.colour,\r\n                    }\r\n                }))\r\n\r\n                this.shared_state.logger.logEvent({'type': 'delete_arrow_type', 'colour': underlyingEntry.colour})\r\n\r\n                // if the selected arrow type was deleted, hide the optionpopup\r\n                if (selected) {\r\n                    hidePopup()\r\n                }\r\n            }\r\n\r\n            transientEntry.isClickable = true\r\n        }\r\n\r\n        const arrowOptionsWithButtons = this.arrowOptions.map(entry => {\r\n            var entryWithButtons = {...entry}\r\n            entryWithButtons.buttons = [\r\n                {\r\n                    className: 'edit-icon',\r\n                    click: clickEditButton,\r\n                    underlyingEntry: entry,\r\n                },\r\n                {\r\n                    className: 'delete-icon',\r\n                    click: clickDeleteArrowTypeButton,\r\n                    underlyingEntry: entry,\r\n                    underlyingEntries: this.arrowOptions,\r\n                }\r\n            ]\r\n            return entryWithButtons\r\n        })\r\n        \r\n        return [\r\n            ...arrowOptionsWithButtons,\r\n            {'colour': 'black', 'name': ADD_ARROW_TYPE_MENU_ITEM, 'symbol': '+'},\r\n            {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n        ]\r\n    }\r\n\r\n    edit_connector_type(connector, popup_x, popup_y, hideOnClickOutside, onColourSelected, arrowObject) {\r\n        var prev_selected = undefined;\r\n        \r\n        const arrowOptions = this.getArrowOptions()\r\n\r\n        prev_selected = arrowOptions.find(entry => entry.colour === connector.line.attr('stroke') && entry.name !== 'Delete' && entry.name !== ADD_ARROW_TYPE_MENU_ITEM)\r\n        prev_selected = prev_selected ? prev_selected.name : undefined\r\n\r\n        const setArrowColour = (selected_option) => {\r\n            connector.setLineColor(selected_option.colour);\r\n            this.shared_state.logger.logEvent({'type': 'arrow_set_type', 'id': connector.id, 'new_type': selected_option.name});\r\n\r\n            if (onColourSelected) {\r\n                onColourSelected(selected_option.colour)\r\n            }\r\n        }\r\n\r\n        new OptionPopup(arrowOptions, popup_x, popup_y, hideOnClickOutside, (selected_option) => {\r\n            if (selected_option.name === \"Delete\") {\r\n                this.shared_state.logger.logEvent({'type': 'arrow_delete', 'id': connector.id});\r\n                this.remove_arrow(connector, arrowObject);\r\n            } else if (selected_option.name === ADD_ARROW_TYPE_MENU_ITEM) {\r\n                const colour = this.getNextAvailableColour(null, 1)\r\n\r\n                if (!colour) {\r\n                    toast.error(\"Maximum number of arrow types reached!\")\r\n                } else {\r\n                    const newRelation = {\r\n                        'name': 'New relation',\r\n                        'colour': colour,\r\n                        'symbol': \"→\",\r\n                    }\r\n                    this.arrowOptions.push(newRelation)\r\n                    this.shared_state.logger.logEvent({'type': 'add_arrow_type', 'colour': colour});\r\n\r\n                    if (!prev_selected) {\r\n                        setArrowColour(newRelation)\r\n                    }\r\n\r\n                    // open a new option popup to allow the user to select the new arrow type and edit it\r\n                    this.edit_connector_type(connector, popup_x, popup_y, true, onColourSelected, arrowObject)\r\n                }\r\n            } else {\r\n                setArrowColour(selected_option)\r\n            }\r\n        }, prev_selected);\r\n    }\r\n\r\n    remove_arrow(connector, arrowObject) {\r\n        connector.line.node.instance.delete_connectable(connector);\r\n\r\n        if (arrowObject) {\r\n            this.completed_arrows = this.completed_arrows.filter(arrow => arrow !== arrowObject)        \r\n        }\r\n    }\r\n\r\n    stop_drawing_arrow() {\r\n        this.drawing_arrow_from = false;\r\n        this.hide();\r\n    }\r\n}","import OptionPopup from \"./OptionPopup\";\r\n\r\nvar ARROW_HITBOX_MARGIN = 20;\r\n\r\nclass GraphNode {\r\n    constructor(params, nodes, mouse_follower, shared_state, focus_text_area, getNodesList) {\r\n        var { shortText, x, y, width, height, id, isOnGraph, longText } = params\r\n        this.id = id ? id : shared_state.getNodeId();\r\n\r\n        this.getNodesList = getNodesList;\r\n        \r\n        this.group = nodes.group().translate(x, y);\r\n\r\n        this.dropShadow = this.group.rect(width, height).radius(5).addClass('node-drop-shadow')\r\n        this.arrow_hitbox = this.group.rect(width + 2 * ARROW_HITBOX_MARGIN, height + 2 * ARROW_HITBOX_MARGIN)\r\n            .translate(-ARROW_HITBOX_MARGIN, -ARROW_HITBOX_MARGIN).opacity(0).radius(10).addClass('arrow-hitbox');\r\n        \r\n        this.rect = this.group.rect(width, height).radius(5).addClass('node');\r\n        this.editRect = this.group.rect(width - 10, height - 10).radius(5).translate(5, 5).addClass('editing-node-rect')\r\n        this.text = this.group.text(\"\").addClass('node-text');\r\n        this.updateShortText(shortText)\r\n        this.updateLongText(longText)\r\n\r\n        this.setupRectDragging(this.rect, shared_state);\r\n        this.setupArrowHitbox(this.arrow_hitbox, mouse_follower);\r\n        const complete_arrow = (e) => {\r\n            if (mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.complete_arrow(this);\r\n            }\r\n        };\r\n        this.arrow_hitbox.on('mouseup', complete_arrow);\r\n        this.rect.on('mouseup', complete_arrow);\r\n        this.text.on('mouseup', complete_arrow);\r\n\r\n        this.setupHover(shared_state);\r\n        this.setupContextMenu(shared_state);\r\n\r\n        if (focus_text_area) {\r\n            this.editText(shared_state, !params.doNotDeleteIfEmptyText);\r\n        }\r\n        \r\n        this.setIsOnGraph(isOnGraph);\r\n\r\n        // don't log add node events if they are just loaded from a save\r\n        if (!params.isFromJSON) {\r\n            shared_state.logger.logEvent({'type': 'node_create', 'id': this.id});\r\n        }\r\n    }\r\n\r\n    static fromJSON(json, nodes, mouse_follower, shared_state, getNodesList) {\r\n        var params = json\r\n        params.x = json.screenCoords.x\r\n        params.y = json.screenCoords.y\r\n        params.width = 200\r\n        params.height = 42\r\n        params.isFromJSON = true\r\n        return new GraphNode(params, nodes, mouse_follower, shared_state, false, getNodesList)\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            shortText: this.shortText,\r\n            longText: this.longText,\r\n            screenCoords: this.group.getScreenCoords(),\r\n            isOnGraph: this.isOnGraph,\r\n        }\r\n    }\r\n\r\n    setIsOnGraph(newVal) {\r\n        this.isOnGraph = newVal;\r\n        if (this.isOnGraph) {\r\n            this.rect.addClass(\"node-on-graph\");\r\n        } else {\r\n            this.rect.removeClass(\"node-on-graph\");\r\n        }\r\n    }\r\n\r\n    setupContextMenu(shared_state) {\r\n        var showOptionMenu = e => {\r\n            e.preventDefault();\r\n            \r\n            var entries = [\r\n                {'colour': 'red', 'name': 'Delete', 'symbol': \"🗙\"}\r\n            ]\r\n            var graph_pos = document.getElementById(\"graph\").getBoundingClientRect();\r\n            new OptionPopup(entries, e.clientX - graph_pos.left, e.clientY - graph_pos.top, true, (selected_option) => {\r\n                if (selected_option.name === \"Delete\") {\r\n                    this.delete(shared_state);\r\n                }\r\n            });\r\n            \r\n            return false;\r\n        };\r\n        this.rect.on('contextmenu', showOptionMenu);\r\n        this.text.on('contextmenu', showOptionMenu);\r\n    }\r\n\r\n    setupHover(shared_state) {\r\n        this.hoverers = []\r\n\r\n        const startHover = (e) => {\r\n            this.setHoverer(\"mouse_\" + e.target, true);\r\n            shared_state.getAllDocNodeRefs(this.id).forEach(ref => {\r\n                if (!ref) {\r\n                    return\r\n                }\r\n                ref.decoratedRef ? ref.decoratedRef.current.decoratedRef.current.setExternalHover(true) : ref.setExternalHover(true);\r\n            });\r\n        };\r\n        const endHover = (e) => {\r\n            this.setHoverer(\"mouse_\" + e.target, false);\r\n            shared_state.getAllDocNodeRefs(this.id).forEach(ref => {\r\n                if (!ref) {\r\n                    return\r\n                }\r\n                ref.decoratedRef ? ref.decoratedRef.current.decoratedRef.current.setExternalHover(false) : ref.setExternalHover(false);\r\n            });\r\n        };\r\n        this.rect.on('mouseenter', startHover);\r\n        this.text.on('mouseenter', startHover);\r\n        this.rect.on('mouseleave', endHover);\r\n        this.text.on('mouseleave', endHover);\r\n    }\r\n\r\n    setHoverer(hoverer, isHovering) {\r\n        if (isHovering) {\r\n            if (!this.hoverers.includes(hoverer)) {\r\n                this.hoverers.push(hoverer)\r\n            }\r\n        } else {\r\n            // remove the hoverer\r\n            var index = this.hoverers.indexOf(hoverer);\r\n            if (index !== -1) this.hoverers.splice(index, 1);\r\n        }\r\n\r\n        this.setHovered(this.hoverers.length > 0)\r\n    }\r\n\r\n    setHovered(isHovered) {        \r\n        if (isHovered) {\r\n            this.rect.addClass(\"hovered\");\r\n        } else {\r\n            this.rect.removeClass(\"hovered\");\r\n        }\r\n    }\r\n\r\n    // the hitbox for arrows is an invisible rect a bit bigger than the visible node rect\r\n    // but we only want to make the node itself draggable\r\n    // so we need to intercept drag events on the rect, and move the entire group instead!\r\n    setupRectDragging(rect, shared_state) {\r\n        this.setupGroupDragging(rect, shared_state, rect);\r\n        this.setupGroupDragging(this.text, shared_state, rect, true);\r\n        \r\n        this.text.click((e) => e.preventDefault());\r\n        var edit_text_if_not_just_dropped = () => { if (!rect.just_dropped) this.editText(shared_state) };\r\n        rect.click(edit_text_if_not_just_dropped);\r\n        this.text.click(edit_text_if_not_just_dropped);\r\n    }\r\n\r\n    setupGroupDragging(rect, shared_state, just_dropped_obj, center=false) {\r\n        rect.draggy(); // setup dragging on the rect\r\n        rect.on('mousedown', (e) => {\r\n            e.stopPropagation(); // don't pan when moving a node\r\n        });\r\n        just_dropped_obj.just_dropped = false;\r\n        rect.on('dragstart', (e) => {\r\n            var start_x = this.group.x();\r\n            var start_y = this.group.y();\r\n            document.activeElement.blur();\r\n            shared_state.draggedNode = {\r\n                id: this.id,\r\n                text: this.getShortText(),\r\n                longText: this.getLongText(),\r\n                resetPos: () => {\r\n                    this.group.move(start_x, start_y);\r\n                    this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n                },\r\n                node: this\r\n            };\r\n\r\n            this.dropShadow.translate(5, 5)\r\n            this.dropShadow.addClass('visible')\r\n            \r\n            rect.off('dragmove');\r\n            rect.on('dragmove', (e) => {\r\n                this.group.move(start_x + e.detail.delta.movedX, start_y + e.detail.delta.movedY);\r\n                if (center) {\r\n                    this.text.center(0.5 * this.rect.width(), 0.5 * this.rect.height());\r\n                } else {\r\n                    rect.x(0);\r\n                    rect.y(0);\r\n                }\r\n                this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n            });\r\n            rect.off('dragend');\r\n            rect.on('dragend', (e) => {\r\n                // prevent the textarea showing\r\n                // unless the drag amount was zero or just a tiny accidental drag\r\n                var x_diff = (this.group.x() - start_x);\r\n                var y_diff = (this.group.y() - start_y);\r\n                var nudge = 10;\r\n                if (x_diff > nudge || x_diff < -nudge || y_diff > nudge || y_diff < -nudge) {\r\n                    just_dropped_obj.just_dropped = true;\r\n                    setTimeout(() => { just_dropped_obj.just_dropped = false; }, 0.05);\r\n                }\r\n                shared_state.draggedNode = false;\r\n\r\n                this.dropShadow.translate(0, 0)\r\n                this.dropShadow.removeClass('visible')\r\n            });\r\n        });\r\n    }\r\n\r\n    // click/drag events on the arrow hitbox should start the arrow creation process\r\n    setupArrowHitbox(arrow_hitbox, mouse_follower) {\r\n        arrow_hitbox.on('mousemove', () => {\r\n            if (!mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.update_source(this.group);\r\n            }\r\n        });\r\n        arrow_hitbox.on('mouseleave', () => {\r\n            if (!mouse_follower.drawing_arrow_from) {\r\n                mouse_follower.hide();\r\n            }\r\n        });\r\n        arrow_hitbox.on('mousedown', (e) => {\r\n            mouse_follower.start_arrow(this);\r\n            e.stopPropagation(); // don't pan when dragging an arrow\r\n        });\r\n    }\r\n\r\n    updateShortText(newShortText) {\r\n        this.shortText = newShortText.replace(/[\\r\\n\\v]+/g, '');\r\n        \r\n        const CHARS_PER_LINE = 21;\r\n        var formattedText = this.splitIntoLines(CHARS_PER_LINE, this.shortText);\r\n\r\n        this.text.text(formattedText.join(\"\\n\"));\r\n        this.resizeRect(formattedText.length);\r\n    }\r\n\r\n    updateLongText(newLongText) {\r\n        this.longText = newLongText;\r\n    }\r\n\r\n    splitIntoLines(charsPerLine, text) {\r\n        var formattedText = [];\r\n        var line = \"\";\r\n        text.split(\" \").forEach(word => {\r\n            var segments = [];\r\n            if (word.length > charsPerLine) {\r\n                for (let i = 0; i < word.length; i += charsPerLine - 1) {\r\n                    if (segments.length > 0) {\r\n                        segments[segments.length - 1] += \"-\"; // append a '-' onto the end of unfinished strings\r\n                    }\r\n                    segments.push(word.substring(i, Math.min(i + charsPerLine, word.length)));\r\n                }\r\n            }\r\n            else {\r\n                segments = [word];\r\n            }\r\n            segments.forEach(segment => {\r\n                if ((line + segment).length < charsPerLine) {\r\n                    var space = line.length > 0 ? \" \" : \"\";\r\n                    line += space + segment;\r\n                }\r\n                else {\r\n                    formattedText.push(line);\r\n                    line = segment;\r\n                }\r\n            });\r\n        });\r\n        formattedText.push(line);\r\n        return formattedText;\r\n    }\r\n\r\n    // resize the rect so that the text fits on it\r\n    resizeRect(numLinesOfText) {\r\n        this.rect.width(200);\r\n        const rectHeight = numLinesOfText * 21 + 20\r\n        this.rect.height(rectHeight);\r\n        this.text.center(0.5 * this.rect.width(), 0.5 * this.rect.height());\r\n        this.dropShadow.height(rectHeight)\r\n        this.editRect.height(rectHeight - 10)\r\n\r\n        this.arrow_hitbox.size(this.rect.width() + ARROW_HITBOX_MARGIN * 2, this.rect.height() + ARROW_HITBOX_MARGIN * 2);\r\n\r\n        this.group.node.dispatchEvent(new CustomEvent(\"dragmove\")); // update any connectables looking for drag events\r\n    }\r\n\r\n    getShortText() {\r\n        return this.shortText;\r\n    }\r\n\r\n    getLongText() {\r\n        return this.longText;\r\n    }\r\n\r\n    editText(shared_state, delete_if_empty_text = false) {\r\n        document.activeElement.blur(); // remove focus from everything\r\n\r\n        var textarea = document.querySelector('#nodeedit');\r\n        textarea.value = this.getShortText();\r\n\r\n        const preEditText = this.getShortText()\r\n\r\n        var screen_coords = this.group.getScreenCoords();\r\n        textarea.style.left = screen_coords.x + \"px\";\r\n        textarea.style.top = screen_coords.y + \"px\";\r\n        textarea.style.display = \"inline-block\";\r\n        textarea.focus();\r\n\r\n        textarea.style.width = \"180px\";\r\n        textarea.style.height = 'auto';\r\n        textarea.style.height = (textarea.scrollHeight) + 'px';\r\n\r\n        this.text.hide();\r\n\r\n        this.editRect.addClass('visible')\r\n        this.setHoverer('editNodeDirectly', true)\r\n\r\n        var save_changes = () => {\r\n            this.updateShortText(textarea.value);\r\n            shared_state.updateDocShortText(this.id, this.getShortText());\r\n        };\r\n        var save_and_hide = () => {\r\n            save_changes();\r\n            textarea.style.display = \"none\";\r\n            if (delete_if_empty_text && (!this.text.text() || this.text.text() === \"\")) {\r\n                this.delete(shared_state);\r\n            }\r\n            this.text.show();\r\n            this.updateShortText(this.shortText);\r\n\r\n            if (this.getShortText() !== preEditText) {\r\n                shared_state.logger.logEvent({'type': 'node_edit_short_text', 'id': this.id, 'text': this.shortText});\r\n            }\r\n\r\n            this.editRect.removeClass('visible')\r\n            this.setHoverer('editNodeDirectly', false)\r\n        };\r\n        textarea.onblur = save_and_hide;\r\n        textarea.onkeyup = (e) => {\r\n            if (e.key === \"Escape\" || e.key === \"Esc\" || e.key === \"Enter\") {\r\n                e.preventDefault();\r\n                document.activeElement.blur();\r\n            } else {\r\n                save_changes();\r\n            }\r\n        };\r\n    }\r\n\r\n    delete(shared_state) {\r\n        shared_state.removeGraphNode(this.id);\r\n        \r\n        // remove from the list of nodes (used for saving)\r\n        const nodesList = this.getNodesList()\r\n        var index = nodesList.indexOf(this);\r\n        if (index !== -1) {\r\n            nodesList.splice(index, 1)\r\n        } else {\r\n            console.log('node not found in this.nodesList when deleting');\r\n        }        \r\n\r\n        this.group.remove();\r\n\r\n        // delete arrows\r\n        this.group.node.dispatchEvent(new CustomEvent(\"deletenode\"));\r\n\r\n        shared_state.logger.logEvent({'type': 'node_delete', 'id': this.id});\r\n    }\r\n}\r\n\r\nexport default GraphNode;","import { DropTarget } from \"react-dnd\";\r\nimport { ItemTypes } from \"../../dragtypes\";\r\n\r\nconst graphTarget = {\r\n    canDrop(props, monitor) {\r\n        const item = monitor.getItem()\r\n        return item.node.type !== 'section' && !item.node.findDescendant(node => node.type === 'link')\r\n    },\r\n\r\n    drop(props, monitor, component) {\r\n        return { droppedOnGraph: true, position: monitor.getClientOffset() }\r\n    },\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        // Call this function inside render()\r\n        // to let React DnD handle the drag events:\r\n        connectDropTarget: connect.dropTarget(),\r\n        // You can ask the monitor about the current drag state:\r\n        itemType: monitor.getItemType(),\r\n    }\r\n}\r\n\r\nexport default DropTarget(ItemTypes.BLOCK, graphTarget, collect)","import React from 'react';\r\nimport './GraphPane.css';\r\nimport SVG from 'svg.js';\r\nimport 'svg.panzoom.js';\r\nimport 'svg.draggy.js';\r\nimport './svg.connectable.js';\r\nimport MouseFollower from './MouseFollower.js';\r\nimport GraphNode from './GraphNode.js';\r\nimport DropifyGraphPane from './DropifyGraphPane.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nclass GraphPane extends React.Component {\r\n    componentDidMount() {\r\n        this.props.sharedState.getSavedGraph((json) => {\r\n            this.nodesList = [];\r\n\r\n            this.props.sharedState.graphPane = this;\r\n\r\n            this.$el = document.querySelector(\"#graph\")\r\n\r\n            var svg = new SVG(this.$el).size(\"100%\", \"100%\").panZoom({ zoomMin: 1, zoomMax: 1 }); // just pan, no zoom\r\n\r\n            SVG.extend(SVG.Element, {\r\n                getScreenCoords: function () {\r\n                    var root_point = this.doc().node.getBoundingClientRect();\r\n                    var point = this.point(0, 0);\r\n                    return {\r\n                        x: -point.x - root_point.left,\r\n                        y: -point.y - root_point.top\r\n                    };\r\n                }\r\n            })\r\n\r\n            var links = svg.group();\r\n            var markers = svg.group();\r\n            var nodes = svg.group();\r\n\r\n            const json_connections = json ? json.connections : undefined\r\n            var mouse_follower = MouseFollower.fromJSON(json_connections, this.props.sharedState, svg, links, markers, links);\r\n            this.mouse_follower = mouse_follower\r\n\r\n            // add new nodes on mouse click\r\n            svg.on('dblclick', (e) => {\r\n                // only clicks on background and not when dragging\r\n                if (e.target !== svg.node && !mouse_follower.drawing_arrow_from) {\r\n                    return;\r\n                }\r\n\r\n                this.addNodeAtScreenLocation(svg, nodes, mouse_follower, \"\", e.clientX, e.clientY, true);\r\n            });\r\n\r\n            this.setupTextDropping(svg, nodes, mouse_follower);\r\n\r\n            svg.on('panStart', (e) => {\r\n                document.activeElement.blur();\r\n            });\r\n\r\n            var textarea = document.querySelector('#nodeedit');\r\n            textarea.setAttribute('style', 'height:' + (textarea.scrollHeight) + 'px;overflow-y:hidden;');\r\n            textarea.addEventListener(\"input\", (e) => {\r\n                textarea.style.height = 'auto';\r\n                textarea.style.height = (textarea.scrollHeight) + 'px';\r\n            });\r\n\r\n            this.props.sharedState.addGraphNode = (text, x, y, doNotDeleteIfEmptyText) => {\r\n                return this.addNodeAtScreenLocation(svg, nodes, mouse_follower, text, x, y, true, doNotDeleteIfEmptyText)\r\n            }\r\n            if (json && json.nodes) {\r\n                this.loadNodesFromJSON(json.nodes, mouse_follower, nodes)\r\n            }\r\n\r\n            this.getNodeById = this.getNodeById.bind(this)\r\n            mouse_follower.draw_loaded_arrows(this.getNodeById)\r\n\r\n            if (this.nodesList.length === 0) {\r\n                this.addNoNodesIndicator(svg, nodes, mouse_follower);\r\n            }\r\n        })\r\n    }\r\n\r\n    getNodeById(id) {\r\n        return this.nodesList.find(node => node.id.toString() === id.toString())\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            nodes: this.nodesList.map(node => node.toJSON()),\r\n            connections: this.mouse_follower.toJSON()\r\n        }\r\n    }\r\n\r\n    loadNodesFromJSON(json, mouse_follower, nodes) {\r\n        this.nodesList = json.map(nodeJSON => GraphNode.fromJSON(nodeJSON, nodes, mouse_follower, this.props.sharedState, () => this.nodesList))\r\n    }\r\n\r\n    addNoNodesIndicator(svg, nodes, mouse_follower) {\r\n        this.noNodesIndicator = svg.text(\"Double click to add a node\").addClass(\"indicator-text\").attr({x: \"40%\", y: \"45%\"});\r\n        this.noNodesIndicator.on('dblclick', (e) => {\r\n            this.addNodeAtScreenLocation(svg, nodes, mouse_follower, \"\", e.clientX, e.clientY, true);\r\n        });\r\n    }\r\n\r\n    setupTextDropping(svg, nodes, mouse_follower) {\r\n        this.$el.addEventListener(\"dragover\", (e) => {\r\n            e.preventDefault();\r\n        });\r\n\r\n        this.$el.addEventListener(\"drop\", (e) => {\r\n            e.preventDefault();\r\n            if (!e.dataTransfer.types.includes(\"text/plain\")) {\r\n                return // the dropped thing is probably a whole block, which is handled by React-DnD in DragifyGraph.js\r\n            }\r\n            \r\n            var data = e.dataTransfer.getData(\"Text\");\r\n\r\n            if (data.includes('\\n')) {\r\n                toast.error('You can\\'t add multiple paragraphs to the graph at once')\r\n                return\r\n            }\r\n\r\n            if (!this.props.sharedState.canAddLinkAtSelection()) {\r\n                toast.error('You can\\'t add the same node to the graph twice!')\r\n                return\r\n            }\r\n\r\n            var node = this.addNodeAtScreenLocation(svg, nodes, mouse_follower, data, e.clientX, e.clientY, false);\r\n            this.props.sharedState.addLinkAtSelection(node.id, node);\r\n            this.props.sharedState.logger.logEvent({'type': 'node_create_from_doc', 'node_id': node.id, 'text': data});\r\n            document.activeElement.blur();\r\n        });\r\n    }\r\n\r\n    addNodeAtScreenLocation(svg, nodes, mouse_follower, text, x, y, focus_text_area, doNotDeleteIfEmptyText=false) {\r\n        var point = svg.point(x, y);\r\n        const params = {\r\n            shortText: text,\r\n            longText: \"\", \r\n            x: point.x,\r\n            y: point.y,\r\n            width: 200,\r\n            height: 42,\r\n            isOnGraph: false,\r\n            id: undefined, // set automatically\r\n            doNotDeleteIfEmptyText: doNotDeleteIfEmptyText\r\n        }\r\n        var node = new GraphNode(params, nodes, mouse_follower, this.props.sharedState, focus_text_area, () => this.nodesList);\r\n        this.nodesList.push(node);\r\n\r\n        if (this.noNodesIndicator) {\r\n            this.noNodesIndicator.hide();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.$el.somePlugin('destroy');\r\n    }\r\n\r\n    render() {\r\n        return this.props.connectDropTarget(\r\n            <div id=\"graph\" className=\"pane\" ref={el => this.el = el}>\r\n                <textarea id='nodeedit'></textarea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DropifyGraphPane(GraphPane);","import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('writeReasonDb');\r\ndb.version(1).stores({ projects: '++id,name' }); // NB: this is just the *indexed* properties, not all of them!\r\n\r\nexport default db;","import React, { Component } from 'react';\r\n\r\nexport default class ProjectsList extends Component {\r\n    render() {\r\n        return (\r\n            <div className='display-block'>\r\n                <table className='pure-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.projects.map(project => <tr key={project.id.toString()}>\r\n                                <td>{project.id}</td>\r\n                                <td>{project.name}</td>\r\n                                <td><button className=\"pure-button\" onClick={() => this.props.loadProject(project.id)}>Open</button></td>\r\n                                <td><button className=\"pure-button\" onClick={() => this.props.renameProject(project.id)}>Rename</button></td>\r\n                                <td><button className=\"pure-button\" onClick={() => this.props.duplicateProject(project.id)}>Duplicate</button></td>\r\n                                <td><button className=\"pure-button\" onClick={() => this.props.deleteProject(project.id)}>Delete</button></td>\r\n                            </tr>)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n      }\r\n}","import db from './db.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst EVENT_TYPES_WHICH_DO_NOT_MAKE_STATE_DIRTY = [\r\n    'session_start',\r\n    'document_content_detailed',\r\n    'document_content_markdown',\r\n]\r\n\r\nexport default class Logger {\r\n    shouldLogToConsole = false;\r\n\r\n    constructor(db_id, params) {\r\n        this.db_id = db_id;\r\n        this.conditions = params;\r\n        this.logToConsole(\"Logging begin, db_id \" + db_id + \"\\nParams \" + JSON.stringify(params, null, 1));\r\n\r\n        // used for tracking whether changes have been made since last save\r\n        // obviously, does not track events which are not logged, like typing in the document\r\n        this.stateIsDirty = false\r\n\r\n        this.logEvent({'type': 'session_start'})\r\n    }\r\n\r\n    logEvent(event) {\r\n        if (!EVENT_TYPES_WHICH_DO_NOT_MAKE_STATE_DIRTY.includes(event.type)) {\r\n            this.stateIsDirty = true\r\n        }\r\n\r\n        if (event.type === 'save') {\r\n            this.stateIsDirty = false\r\n        }\r\n\r\n        this.getLog(log => {\r\n            if (log.events === undefined) {\r\n                log.events = {}\r\n            }\r\n    \r\n            if (log.events[event.type] === undefined) {\r\n                log.events[event.type] = []\r\n            }\r\n            event.timestamp = new Date()\r\n            log.events[event.type].push(event)\r\n            this.setLog(log)\r\n\r\n            this.logToConsole(\"Logging event: \" + JSON.stringify(event))\r\n        })\r\n    }\r\n\r\n    getLog(callback) {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then((project) => {\r\n                callback(project.log ? project.log : {})\r\n            })\r\n    }\r\n\r\n    setLog(log) {\r\n        db.table('projects')\r\n            .update(this.db_id, { log: log })\r\n            .catch(err => {\r\n                toast.error('Logging error: ' + err)\r\n                console.log('Logging error: ' + err)\r\n            })\r\n    }\r\n\r\n    logToConsole(msg) {\r\n        if (this.shouldLogToConsole) {\r\n            console.log(msg);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Text } from 'slate';\r\nimport Html from 'slate-html-serializer'\r\nimport Logger from './logging'\r\nimport db from './db.js'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class SharedState {\r\n    constructor(db_id, params) {      \r\n        this.logger = new Logger(db_id, params)\r\n        this.condition = params.condition;\r\n        this.params = params;\r\n        \r\n        this.node_id_counter = 0;\r\n        this.slate_id_counter = 10\r\n        this.map = {};\r\n        this.map_recycle_bin = {};\r\n        this.db_id = db_id\r\n\r\n        // this.editor_ref and this.graphPane set in the editor and graphpane\r\n        this.editor_ref = undefined;\r\n        this.graphPane = undefined;\r\n\r\n        // log entire document content every 30 seconds\r\n        this.intervalLogger = window.setInterval(() => {\r\n            this.logger.logEvent({'type': 'document_content_detailed', 'content': this.getEditor().getValue()});\r\n            this.logger.logEvent({'type': 'document_content_markdown', 'content': this.getArgumentMarkdown()});\r\n        }, 30000);\r\n        \r\n        this.downloadExperimentData = this.downloadExperimentData.bind(this);\r\n        this.editorHasLoaded = this.editorHasLoaded.bind(this);\r\n        this.save = this.save.bind(this)        \r\n\r\n        // when the tab is closed, if the document has been edited, warn before closing\r\n        window.onbeforeunload = (e) => {\r\n            if (process.env.NODE_ENV !== 'development' && this.getStateIsDirty()) { // disable in development for webpack hot reloading\r\n                e.preventDefault()\r\n                e.returnValue = '' // for Chrome\r\n            }\r\n        }\r\n    }\r\n\r\n    // called by editor once the database saved value has been set as the document.value\r\n    editorHasLoaded() {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then(project => {\r\n                this.node_id_counter = project.node_id_counter ? project.node_id_counter : 0\r\n                this.map = project.map ? this.mapFromJSON(project.map) : {}\r\n                this.getEditor().mapHasLoaded()\r\n            })\r\n        \r\n        this.lastSavedDocumentState = this.getEditor().getValue().document // editor is definitely not dirty right now\r\n    }\r\n\r\n    save() {\r\n        const changes = {\r\n            map: this.mapToJSON(),\r\n            node_id_counter: this.node_id_counter,\r\n            doc_value: this.getEditor().getValue().toJSON(),\r\n            graph_value: this.graphPane.toJSON(),\r\n        }\r\n        db.table('projects')\r\n            .update(this.db_id, changes)\r\n            .then((idExists) => {\r\n                if (!idExists) {\r\n                    const message = 'Save error: file with ID ' + this.db_id.toString() + ' does not exist!'\r\n                    console.log(message)\r\n                    toast.error(message)\r\n                } else {\r\n                    toast.info('Changes saved!')\r\n                    this.lastSavedDocumentState = this.getEditor().getValue().document\r\n                }\r\n            }).catch(err => {\r\n                toast.error('Save error: ' + err.toString())\r\n            })\r\n            \r\n        this.logger.logEvent({'type': 'save'})\r\n    }\r\n\r\n    getStateIsDirty() {\r\n        return this.logger.stateIsDirty || (\r\n            this.getEditor() && this.getEditor().getValue() && this.getEditor().getValue().document !== this.lastSavedDocumentState\r\n        ) \r\n    }\r\n\r\n    getSavedDocValue = async function(onDataLoad) {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then(project => {\r\n                onDataLoad(project.doc_value)\r\n            })\r\n    }\r\n\r\n    getSavedGraph = async function(onDataLoad) {\r\n        db.table('projects')\r\n            .get(this.db_id)\r\n            .then(project => {\r\n                onDataLoad(project.graph_value)\r\n            })\r\n    }\r\n\r\n    mapToJSON() {\r\n        var mapJson = {}\r\n        const document = this.getEditor().value.document\r\n        for (const id in this.map) {\r\n            let doc_nodes = {};\r\n            ['section', 'long', 'short'].forEach(part => {\r\n                const docNodeObjects = this.getDocNodes(id)\r\n                if (docNodeObjects) {\r\n                    if (docNodeObjects[part]) {\r\n                        const path = document.getPath(docNodeObjects[part])\r\n                        doc_nodes[part] = path.toArray()\r\n                    }\r\n                } \r\n            })\r\n\r\n            mapJson[id] = {\r\n                graph_node: this.getGraphNode(id) ? this.getGraphNode(id).id : undefined,\r\n                doc_nodes: doc_nodes\r\n            }\r\n        }\r\n\r\n        return mapJson\r\n    }\r\n\r\n    mapFromJSON(json) {\r\n        this.map = {}\r\n        for (const id in json) {\r\n            if (json[id].graph_node) {\r\n                const graphNode = this.graphPane.getNodeById(id)\r\n                if (graphNode) {\r\n                    this.addGraphMapping(id, graphNode)\r\n                } else {\r\n                    toast.error(\"Error when loading: could not find graph node with ID \" + id)\r\n                }\r\n            }\r\n\r\n            if (json[id].doc_nodes) {\r\n                for (const part in json[id].doc_nodes) {\r\n                    const path = json[id].doc_nodes[part]\r\n                    \r\n                    const document = this.getEditor().value.document\r\n                    if (document.hasNode(path)) {\r\n                        this.setLinkMapping(id, document.getNode(path), part)\r\n                    } else {\r\n                        console.log(document);\r\n                        \r\n                        toast.error(\"Error when loading: could not find \" + part + \" with ID \" + id)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.map\r\n    }\r\n\r\n    downloadExperimentData() {\r\n        this.logger.getLog(log => {\r\n            const element = document.createElement(\"a\");\r\n            const data = {\r\n                params: this.params,\r\n                argument: this.getArgumentMarkdown(),\r\n                logs: log\r\n            }\r\n            const file = new Blob([JSON.stringify(data, null, 2)], {type: 'text/plain'});\r\n    \r\n            element.href = URL.createObjectURL(file);\r\n            element.download = this.logger.getExperimentId() + \".json\";\r\n            document.body.appendChild(element); // Required for this to work in FireFox\r\n            element.click();\r\n        })\r\n    }\r\n\r\n    getArgumentMarkdown() {\r\n        const parentStyleIs = (node, styleToCheck) => {\r\n            const parent = this.getEditor().value.document.getParent(node.key)\r\n            return parent && parent.data.get(\"nodeStyle\") === styleToCheck\r\n        }\r\n\r\n        const RULES = [\r\n            {\r\n                serialize: (node, children) => {\r\n                    if ([\"block\", \"inline\"].includes(node.object)) {\r\n                        switch(node.type) {\r\n                            case 'paragraph':\r\n                            case '':\r\n                                return <p>{children}</p>\r\n\r\n                            case 'heading':\r\n                                return <h2>{children}</h2>\r\n                            \r\n                            case 'section':\r\n                                return <div>{children}</div>\r\n                            \r\n                            case 'body':\r\n                                if (parentStyleIs(node, \"Heading only\")) {\r\n                                    return <p></p>\r\n                                } else {\r\n                                    return <p>{children}</p>\r\n                                }\r\n\r\n                            case 'link':\r\n                                if (node.object === \"inline\") {\r\n                                    return <span>{children}</span>\r\n                                } else {\r\n                                    if (parentStyleIs(node, \"Body only\")) {\r\n                                        return <p></p>\r\n                                    } else {\r\n                                        return <h2>{children}</h2>\r\n                                    }\r\n                                }\r\n\r\n                            default:\r\n                                return undefined;\r\n                        }\r\n                    }\r\n                } \r\n            }\r\n        ]\r\n\r\n        const serializer = new Html({rules: RULES})\r\n        var output = serializer.serialize(this.getEditor().value)\r\n        \r\n        var tagReplacements = [\r\n            {regex: /<p>\\s*<\\/p>/g},  // special rule for removing empty paragraphs without inserting a newline\r\n\r\n            {regex: /<p>/g},\r\n            {regex: /<\\/p>/g, replace: \"\\n\\n\"},\r\n            {regex: /<div>/g},\r\n            {regex: /<\\/div>/g},\r\n            {regex: /<span>/g},\r\n            {regex: /<\\/span>/g},\r\n            {regex: /<h2>/g, replace: \"## \"},\r\n            {regex: /<\\/h2>/g, replace: \"\\n\"},\r\n        ]\r\n        tagReplacements.forEach((replacement) => {\r\n            output = output.replace(replacement.regex, replacement.replace ? replacement.replace : \"\")\r\n        })\r\n        return output\r\n    }\r\n\r\n    finishCondition() {\r\n        window.onbeforeunload = undefined // remove the warning about closing the tab\r\n        window.clearInterval(this.intervalLogger)\r\n    }\r\n\r\n    getEditor() {\r\n        return this.editor_ref.current;\r\n    }\r\n\r\n    getNodeId() {\r\n        this.node_id_counter++;\r\n        return this.node_id_counter;\r\n    }\r\n\r\n    canAddLinkAtSelection() {\r\n        const value = this.getEditor().value;\r\n        const is_in_linked_block = value.blocks.some(block => (block.type === 'link' || block.type === 'section' || block.type === 'body'));\r\n        const is_in_linked_inline = value.inlines.some(inline => (inline.type === 'link'));\r\n        return !is_in_linked_block && !is_in_linked_inline;\r\n    }\r\n\r\n    addLinkAtSelection(id, graph_node) {\r\n        this.getEditor().wrapLinkAtSelection(id);\r\n        this.addGraphMapping(id, graph_node);\r\n    }\r\n\r\n    addGraphMapping(id, graph_node) {\r\n        graph_node.setIsOnGraph(true);\r\n        this.map[id] = { graph_node: graph_node };\r\n    }\r\n\r\n    setLinkMapping(id, doc_node, long_or_short) {\r\n        if (!this.map[id]) {\r\n            // uh oh, this should exist\r\n            this.map[id] = {}\r\n\r\n            // maybe the mapping was deleted and re-added with ctrl-Z\r\n            // if so, hopefully it's stored as recently deleted\r\n            this.checkRecycleBinForGraphNode(id)\r\n        }\r\n\r\n        if (this.map[id].doc_nodes === undefined) {\r\n            this.map[id].doc_nodes = {};\r\n        }\r\n        this.map[id].doc_nodes[long_or_short] = doc_node;\r\n    }\r\n\r\n    getGraphNodeAndDocNode(id) {\r\n        return this.map[id];\r\n    }\r\n\r\n    checkRecycleBinForGraphNode(id) {\r\n        if (!this.map[id]) {\r\n            this.map[id] = {}\r\n        }\r\n\r\n        if (this.map[id].graph_node) {\r\n            // no need to restore\r\n            return;\r\n        }\r\n\r\n        const prev_version = this.map_recycle_bin[id]\r\n        if (prev_version && prev_version.graph_node) {\r\n            console.log('restored from recycle');\r\n            \r\n            this.addGraphMapping(id, prev_version.graph_node)\r\n        }\r\n    }\r\n\r\n    getGraphNode(id) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            return map.graph_node;\r\n        }\r\n    }\r\n\r\n    removeGraphNode(id) {\r\n        if (this.getDocNodes(id)) {\r\n            Object.values(this.getDocNodes(id)).forEach(node => {\r\n                this.getEditor().removeGraphLink(node);\r\n            })\r\n            this.map[id] = undefined;\r\n        }\r\n    }\r\n\r\n    removeDocNode(id) {\r\n        var map = this.getGraphNodeAndDocNode(id)\r\n        if (map) {\r\n            if (map.graph_node) {\r\n                map.graph_node.setIsOnGraph(false);\r\n            }\r\n            \r\n            this.map_recycle_bin[id] = this.map[id]\r\n            this.map[id] = undefined\r\n        }\r\n    }\r\n\r\n    getDocNodes(id) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            return map.doc_nodes;\r\n        }\r\n    }\r\n\r\n    getDocNodeShortText(id) {\r\n        const docNode = this.getDocNodes(id);\r\n        if (docNode) {\r\n            return docNode.short;\r\n        }\r\n    }\r\n\r\n    getDocNodeLongText(id) {\r\n        const docNode = this.getDocNodes(id);\r\n        if (docNode) {\r\n            return docNode.long;\r\n        }\r\n    }\r\n\r\n    getDocNodeRef(id, long_or_short) {\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map && map.doc_link_node) {\r\n            return map.doc_link_node[long_or_short].current;\r\n        }\r\n    }\r\n\r\n    getAllDocNodeRefs(id) {\r\n        var docNodes = [];\r\n        const map = this.getGraphNodeAndDocNode(id);\r\n        if (map) {\r\n            [\"long\", \"short\", \"section\"].forEach(long_or_short => {\r\n                if (map.doc_link_node && map.doc_link_node[long_or_short]) {\r\n                    docNodes.push(map.doc_link_node[long_or_short].current)\r\n                }\r\n            })\r\n        }\r\n        return docNodes;\r\n    }\r\n\r\n    registerLinkNode(id, ref, long_or_short) {\r\n        if (this.map[id].doc_link_node === undefined) {\r\n            this.map[id].doc_link_node = {};\r\n        }\r\n        this.map[id].doc_link_node[long_or_short] = ref;\r\n    }\r\n\r\n    // check whether a graph node's doc node still exists\r\n    updateIsOnGraphStatus(id) {\r\n        var docNode = this.getDocNodeShortText(id);\r\n        if (!docNode) {\r\n            return false\r\n        }\r\n\r\n        if (docNode && !this.getEditor().value.document.hasNode(docNode.key)) {\r\n            // tell the graph node that there is no doc node any more, for whatever reason\r\n            this.removeDocNode(id)\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    updateDocShortText(id, newText) {\r\n        var docNode = this.getDocNodeShortText(id);\r\n        \r\n        if (docNode) {\r\n            var editor = this.getEditor();\r\n\r\n            if (this.updateIsOnGraphStatus(id)) {\r\n                // replace any text with newText\r\n                docNode.nodes.forEach(child => {\r\n                    editor.removeNodeByKey(child.key);\r\n                });\r\n                editor.insertNodeByKey(docNode.key, 0, Text.create({text: newText}));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGraphShortText(id, newText) {\r\n        var graphNode = this.getGraphNode(id);\r\n        \r\n        if (graphNode) {\r\n            graphNode.updateShortText(newText);            \r\n        }\r\n    }\r\n\r\n    updateGraphLongText(id, newText) {\r\n        var graphNode = this.getGraphNode(id);\r\n        \r\n        if (graphNode) {\r\n            graphNode.updateLongText(newText);            \r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './LoadProject.css'\r\nimport db from '../../db.js'\r\nimport ProjectList from './ProjectsList.js'\r\nimport SharedState from '../../shared_state.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class LoadProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: []\r\n        };\r\n        this.addProject = this.addProject.bind(this)\r\n        this.deleteProject = this.deleteProject.bind(this)\r\n        this.loadProject = this.loadProject.bind(this)\r\n        this.renameProject = this.renameProject.bind(this)\r\n        this.duplicateProject = this.duplicateProject.bind(this)\r\n        this.updateProjectsFromDb = this.updateProjectsFromDb.bind(this)\r\n        \r\n        // skip the project select screen if the autoload prop is supplied, instead load project with that id\r\n        if (this.props.autoload) {\r\n            this.loadProject(this.props.autoload)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.autoload) {\r\n            this.updateProjectsFromDb()\r\n        }\r\n    }\r\n\r\n    updateProjectsFromDb() {\r\n        // todo - only retrieve relevant rows from projects table?\r\n        db.table('projects')\r\n            .toArray(projects => {\r\n                this.setState({ projects })\r\n            }).catch(err => {\r\n                toast.error(\"Error when loading projects: \" + err)\r\n            })\r\n    }\r\n\r\n    loadProject(id) {\r\n        const params = { condition: 'graph' }\r\n        const sharedState = new SharedState(id, params)\r\n        this.props.transitionToEditor(sharedState)\r\n    }\r\n\r\n    addProject() {\r\n        const project = {name: window.prompt('Name your project', 'New project')}\r\n        if (project.name) {\r\n            db.table('projects')\r\n                .add(project)\r\n                .then(() => {\r\n                    this.updateProjectsFromDb()\r\n                });\r\n        }\r\n    }\r\n\r\n    renameProject(id) {\r\n        db.table('projects')\r\n            .get(id)\r\n            .then((project) => {\r\n                const newName = window.prompt('Set a new project name', project.name)\r\n                if (newName) {\r\n                    db.table('projects')\r\n                        .update(id, { name: newName })\r\n                        .then(() => {\r\n                            this.updateProjectsFromDb()\r\n                        })\r\n                }\r\n            });\r\n    }\r\n\r\n    duplicateProject(id) {\r\n        db.table('projects')\r\n            .get(id)\r\n            .then((project) => {\r\n                project.name += ' (copy)'\r\n                delete project.id // set a new one automatically\r\n                db.table('projects')\r\n                    .add(project)\r\n                    .then(() => {\r\n                        this.updateProjectsFromDb()\r\n                    });\r\n            })\r\n    }\r\n\r\n    deleteProject(id) {\r\n        db.table('projects')\r\n            .delete(id)\r\n            .then(() => {\r\n                this.updateProjectsFromDb()\r\n            })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"load-project\">\r\n                <button className=\"pure-button pure-button-primary\" onClick={this.addProject}>New project</button>\r\n                <div className=\"load-project-table\">\r\n                    {this.state.projects && this.state.projects.length > 0 && <ProjectList projects={this.state.projects}\r\n                        deleteProject={this.deleteProject}\r\n                        loadProject={this.loadProject}\r\n                        renameProject={this.renameProject}\r\n                        duplicateProject={this.duplicateProject}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n}","import React, { Component } from 'react';\r\nimport './ExperimentalControls.css';\r\n\r\nexport default class ExperimentControls extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"experiment-controls\">\r\n                <button onClick={this.props.backToMenu}>Back</button>\r\n                <button onClick={this.props.sharedState.save}>Save</button>\r\n            </div>\r\n        );\r\n    }\r\n}","/* eslint-disable no-fallthrough */\r\n/* eslint-disable default-case */\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport DocPane from './components/doc/DocPane.js';\r\nimport GraphPane from './components/graph/GraphPane.js';\r\nimport SplitPane from 'react-split-pane';\r\nimport LoadProject from './components/loadproject/LoadProject.js';\r\nimport { DndProvider } from 'react-dnd'\r\nimport Backend from 'react-dnd-html5-backend'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport SaveButton from './components/experiment/SaveButton';\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            phase: \"loadproject\",\r\n            params: undefined\r\n        }\r\n\r\n        this.transitionToEditor = this.transitionToEditor.bind(this)\r\n        this.transitionToMenu = this.transitionToMenu.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStorageUsed()\r\n    }\r\n\r\n    transitionToEditor(newSharedState) {\r\n        this.setState({ \r\n            sharedState: newSharedState,\r\n            phase: \"editor\"\r\n        })\r\n    }\r\n\r\n    transitionToMenu() {\r\n        if (this.state.sharedState) {\r\n            this.state.sharedState.finishCondition()\r\n        }\r\n        this.setState({\r\n            sharedState: undefined,\r\n            phase: \"loadproject\"\r\n        })\r\n    }\r\n\r\n    getStorageUsed() {\r\n        navigator.storage.estimate().then(estimate => {\r\n            this.setState({ storageUsed: (estimate.usage / estimate.quota * 100).toPrecision(2) })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        switch(this.state.phase) {\r\n            case \"loadproject\":\r\n                return (\r\n                    <>\r\n                        <LoadProject transitionToEditor={this.transitionToEditor} autoload={39} />\r\n                        {this.state.storageUsed && <footer>Storage used: {this.state.storageUsed}%</footer>}\r\n                    </>\r\n                )\r\n            case \"editor\":\r\n                return (\r\n                    <div className=\"App\">\r\n                        <DndProvider backend={Backend}>\r\n                            <SplitPane split=\"vertical\" defaultSize=\"50%\">\r\n                                <DocPane sharedState={this.state.sharedState} />\r\n                                <GraphPane sharedState={this.state.sharedState} />\r\n                            </SplitPane>\r\n                            <SaveButton sharedState={this.state.sharedState} backToMenu={this.transitionToMenu} />\r\n                        </DndProvider>\r\n                        <ToastContainer\r\n                            position=\"bottom-center\"\r\n                            autoClose={5000}\r\n                            hideProgressBar\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable={false}\r\n                            pauseOnHover\r\n                        />\r\n                    </div>\r\n                );\r\n            \r\n            case \"reset\":\r\n                // hacky way to destroy and recreate all components\r\n                window.setTimeout(() => this.setState({phase: \"editor\"}), 0.1)\r\n                return (\r\n                    <p>...</p>\r\n                )\r\n        }\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}